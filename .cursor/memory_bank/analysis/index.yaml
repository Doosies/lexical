# ===============================================
# /analysis/ 문서 목차 (Index)
# ===============================================
# 이 파일은 /analysis/ 폴더에 있는 모든 분석 문서의 목록 및 요약을 관리합니다.
# AI는 새로운 분석 문서를 추가할 때, 반드시 이 파일을 최신 상태로 유지해야 합니다.
# (This file is auto-generated and maintained by the AI.)
# ===============================================

documents:
  - path: './_readme.md'
    summary: 'analysis 폴더 전체의 분석 주제 목록과 각 주제에 대한 설명을 제공하는 중앙 목차(Table of Contents) 문서입니다.'

directories:
  - path: './initialization/'
    summary: 'Lexical 에디터의 생성, 초기 설정 및 플러그인을 통한 기능 확장 과정을 분석합니다.'
  - path: './data_flow/'
    summary: 'Lexical의 단방향 데이터 흐름과 상태 업데이트의 핵심 원리를 분석합니다.'
  - path: './plugins/'
    summary: 'Lexical의 플러그인 아키텍처와 핵심 상호작용 메커니즘(커맨드, 리스너)을 분석합니다.'
  - path: './command_system/'
    summary: '플러그인 간의 상호작용 및 이벤트 처리를 담당하는 커맨드 시스템의 동작 원리를 분석합니다.'
  - path: './dom_interaction/'
    summary: 'Lexical이 제어하는 실제 DOM 요소에 이벤트 리스너를 연결하여 커스텀 상호작용을 구현하는 방법을 분석합니다.'
  - path: './history/'
    summary: 'HistoryPlugin의 Undo/Redo 동작, 특히 연속된 입력을 하나의 단위로 묶는 Undo Coalescing의 원리를 심층 분석합니다.'
  - path: './key_management/'
    summary: '모든 노드를 고유하게 식별하는 NodeKey의 역할, 생명주기, 올바른 사용법 및 흔한 오용 사례를 심층 분석합니다.'
  - path: './node_system/'
    summary: 'Lexical의 핵심 구성 요소인 노드(Node) 시스템의 고급 기능들(교체, 상태 API, 순회)을 심층적으로 분석합니다.'
  - path: './selection/'
    summary: 'Lexical의 Selection 시스템의 종류, 조작 API, 그리고 Focus Stealing 문제와 해결책을 심층적으로 분석합니다.'
  - path: './serialization/'
    summary: 'Lexical의 상태를 JSON 및 HTML 형식으로 변환(직렬화)하고, 다시 Lexical 상태로 복원(역직렬화)하는 메커니즘을 분석합니다.'
  - path: './update_mechanism/'
    summary: 'Lexical의 핵심 상태 객체인 EditorState의 구조부터, 업데이트 트랜잭션의 시작, 처리, 최종 DOM 반영까지의 전체 과정을 심층적으로 분석합니다.'
