# ===============================================
# AI 시스템 규칙 구성 (Rule Configuration)
# 버전: 1.0.0
# ===============================================
# 이 파일은 AI가 로드해야 하는 모든 규칙(Always-On, On-Demand)을 중앙에서 관리합니다.
# AI의 두뇌(brain.yaml)는 규칙을 찾기 위해 항상 이 파일을 참조해야 합니다.

# ==================================================================================================
# 상시 규칙 (Always-On Rules): AI가 부팅 시 반드시 메모리에 상주시켜야 하는 최상위 규칙들입니다.
# ==================================================================================================
always_on_rules:
  - rule_id: 'brain'
    path: '.cursor/brain.yaml'
  - rule_id: 'core_principles'
    path: '.cursor/core_principles.yaml'
  - rule_id: 'config_rules'
    path: '.cursor/config_rules.yaml'
  - rule_id: 'coding-style-rule'
    path: '.cursor/rules/coding-style-rule.mdc'
    # 이 규칙은 항상 활성화되어 AI의 모든 코드 생성에 영향을 미칩니다.
  - rule_id: 'code-quality-rule'
    path: '.cursor/rules/code-quality-rule.mdc'
    # 이 규칙은 항상 활성화되어 AI의 모든 코드 생성에 영향을 미칩니다.
  - rule_id: 'ai-bootstrap-protocol'
    path: '.cursor/core/protocols/ai_bootstrap_protocol.md'
    # 이 규칙은 AI의 부팅 및 설정 과정을 정의하며, 파일 스키마 검증 정보를 포함합니다.

# ==================================================================================================
# 요청 기반 규칙 (On-Demand Rules): 특정 상황에 따라 동적으로 로드되는 규칙들입니다.
# ==================================================================================================
on_demand_rules:
  - rule_id: 'commit-rule'
    path: '.cursor/rules/commit-rule.mdc'
    # 이 규칙의 상세 정의는 path에 명시된 mdc 파일 내의 YAML Front Matter에서 직접 로드됩니다.

  - rule_id: 'mermaid-rule'
    path: '.cursor/rules/mermaid-rule.mdc'
    # 이 규칙의 상세 정의는 path에 명시된 mdc 파일 내의 YAML Front Matter에서 직접 로드됩니다.

  - rule_id: 'resolver-naming-rule'
    path: '.cursor/rules/resolver-naming-rule.mdc'
    # 이 규칙의 상세 정의는 path에 명시된 mdc 파일 내의 YAML Front Matter에서 직접 로드됩니다.
