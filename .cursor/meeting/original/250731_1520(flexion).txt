새로운 노트
2025.07.31 목 오후 3:20 ・ 83분 21초
송민형


참석자 1 00:06
10년 좀 높이가 좀 과수 줄여봐.

참석자 2 00:55
네 우선 시작해 보도록 하겠습니다.

참석자 1 00:57
맞아요. 진경 씨 이거

참석자 2 01:00
자리에 안 계셔가지고 뭔가 일이 있으 어디 가셨는지 잘 모르겠습니다.

참석자 1 01:08
전화번호 전화번호 어떻게 알아요? 일반 전화번호 사원 연락처 딱히 없어요.
사원 연락처

참석자 1 01:27
저 서치해서 왼쪽 아래에 그 모바일 네 없어졌네요.
폰 해봐. 폰 점 2 카운트 폰 점 2 카운트 URL 다른 거 있던데 폰 점 pohon 카운트 여기 넣으면 나요 다 날려 다 날려 그냥 새 창 열어 이 카운트 한 거 잠깐만 처음 봤습니다.

참석자 1 02:08
제가 너 안 하고 있어. 제가 제가 하고 제가 하고 있어

참석자 3 02:13
하고 터졌으면 네가 회의한 거 아니야 좋으니까

참석자 2 02:19
제가 멍 때리고 있어. 죄송

참석자 1 02:20
회의하고 계세요. 다른 회의이신 거죠?

참석자 1 02:30
인플렉션 회의 네

참석자 4 02:36
네네 알겠습니다. 그 본부장님 옆에 회의실로 오시게

참석자 1 02:41
다른 회의죠.

참석자 2 02:43
제가 그러면 끝나고 전달하는 걸로

참석자 1 02:45
곧 끝나시긴 하신다고 하시는데 기다렸다고 하셔도 되고 아니면 지금 어떻게 하 곧 오신다고 하시긴 했어요.
끝 바지라서

참석자 2 03:01
그럼 우선 간단하게 오늘 회의할 내용 좀 개발적으로 말씀드려보자면은 저희가 이제 일을 분배에서 하잖아요.
그래가지고 각자 바라보는 생각이랑 역할이 조금 다를 수도 있을 것 같아가지고 우선은 제가 초기에는 생각했었던 게 있었는데 이제 또 이제 다른 분들이 더 좋은 생각이나 그런 게 있을 수도 있으니까 그런 거 한번 이제 좀 얼라인하고 뭔가 컴포넌트 역할이 이거다 로드 역할은 이거다 이런 거 정하고 하면 좋을 것 같아 해서

참석자 1 03:30
같이 들으셔야 되나요? 준성 님도 들으셔야 돼요.
들어

참석자 2 03:33
제가 좀 회의 참석하시는 분들에 대해서 깊게 생각해 보지는 못했지만

참석자 1 03:40
죄송합아니. 그러니 당분간 다 모인다고 그래 알겠습니다 하면

참석자 2 03:45
공유를 좀 해야 되니까

참석자 1 03:55
큰 데 갈까 옆에 네 큰데요. 신

참석자 2 04:01
여기서 다음에는 큰 대로 잡겠습니다. 네 오늘 회의할 거 간단하게 다시 말씀드려보자면은 저희 플렉션에 대한 각각에 대한 역할이나 정의가 사람마다 다를 수도 있을 것 같아가지고 일단 그거 한번 얼라인하고 더 좋은 거 있으면은 그것도 좀 취합해 가지고 나아갈 수 있으면 좋을 것 같아서 이렇게 좀 모시게 되었습니다.
일단은 제가 처음에 생각했었던 거는 말씀드리고 보자면은 그 플렉션은 나중에 저희가 뭐 5.0 6.0 0.0을 하게 되더라도 좀 독립적으로 잘 살아남아야 된다라고 생각을 했습니다.
그래서 그렇게 하려면 각 모듈에 대해서 역할을 잘 나누고 자기가 가지고 있는 책임만 다 해야 된다라고 해서 최대한 쪼갰습니다.
그래가지고 렉시컬의 흐름은 사실 ast 그걸로 노드 그리고 또 노드는 HTML도 그릴 수 있지만 이제 리릭트 컴포넌트로도 그릴 수 있다 이 정도입니다.

참석자 2 04:55
노드는 렉시컬과 EC 컴포넌트 지금은 리트로 저희가 그리고 있기 때문에 그거를 연결하는 역할만 수행하고 여기서 이벤트 같은 거 예를 들어서 코드에서 클릭 버튼 하면은 디스패치 해준다.
이 정도 역할로 회의를

참석자 3 05:13
지금 이제 맥시컬이라라는 단어는 안 쓰시

참석자 2 05:17
플렉션으로 정정하도록 하겠습니다. 그리고 노드는 좀 디스패치 해주고 어떤 핸들러들이 있다 이 정도 간단한 역할들 그래서 이 카운트랑 전혀 상관없다고 보고 있습니다.
저는 그래서 EC 컴포넌트는 지금 이제 코드 컴포넌트나 이런 건데 기존 5.0 같은 경우에는 저희 DMC VMC 5.0에 관련된 내용들이 좀 많이 엮여 있습니다.
그래 가지고 데이터 모델의 아이템 뷰 모델에서 예를 들어서 제가 멀티 유저 액션이 어떤 거다 그러면 어떤 이벤트에서 이거 찾아가지고 디스패치 액션 해줘야 된다 뭐 이런 것들이 전부 다 엮여 있습니다.
그래 가지고 제가 생각했었던 플렉션에 들어가는 이런 이슈 컴포넌트들은 사실 자기가 그려줘야 되는 데이터들만 받아서 그려주는 게 맞다라고 생각을 했고 또 핸들러들도 그냥 등록만 해준다 라는 관점으로 좀 보고 있긴 했었습니다.

참석자 1 06:08
그럼 커맨드부터 나누겠다 맞습니다. 크로스로 네 컴포넌트와 컴

참석자 2 06:14
커맨드는 이제 노드에서만 디스패치 해 주는 거죠.
그래서 이슈 컴포넌트는 사실 렉시컬에서 자기가 사용된다는 사실도 모르는 거죠.
지금은 어쩔 수 없이 멕시커 컴포저 이제 플렉션 컴포저에서 에디터 객체를 받아서 넘겨주는 걸 하고 있긴 하지만 그게 좀 구현상 좀 어쩔 수 없이 넘겨주고 있긴 하지만 그것도 좀 제거하고 싶은 욕심이 있긴 합니다.
어쨌든 완전 독립적이다 라고 좀 생각을 하고 있습니다.
그래서 저희가 나중에 리액트가 아니라 뷰를 쓰게 될 수도 있고

참석자 3 06:43
에디터에서는 뭘 넘겨주기로 하시

참석자 2 06:45
어 이게

참석자 2 06:59
네 여기서 이 에디터를 온 체인지 코드에 넘겨주고 있는데 이게

참석자 2 07:15
잠시만요 제가 이거를

참석자 2 07:25
그러면은 에디터 객체 디스패치 커맨드를 해주고 있습니다.
이게 왜 그러냐면은 여기서

참석자 1 07:33
일단 에디터도 용어 바꾸라고 그랬는데

참석자 2 07:36
네 이거는 이제 일괄적으로 조금 처리를 해야 될 것 같긴 합니다.
네 그래서 여기서 에디터를 찾아서 하게 되면은 사실 이 에디터라는 게 뭔가 이런 렉시컬 특성상 이 달러 표시가 붙어 있는 헬프 함수들은 내부적으로 액티브 에디터라는 걸 찾습니다.
근데 이게 에디터 리드나 업데이트 상태일 때만 좀 접근할 수 있는 부분이 있어가지고 지금 여기서 에디터를 찾아서 하게 되면은 못 옵니다.
디스패치 커맨드를 그래가지고 어쩔 수 없이 지금 상황에서는 EC 코드가 넘겨주고 있기는 한데 제가 정의한 이 시 코드는 에디터에서 사용된다는 것도 몰라야 되기 때문에 좀 제거하고 싶은 욕심이 있긴 합니다.
네 그 내용이었습니다. 그래서

참석자 1 08:24
이게 뭔데 컴포넌트야 이게 노드야 이게 이게 노드잖아 컴포넌트 이게 컴포넌트

참석자 2 08:29
네 리 컴포넌트입니다. 이게 맞습니다. 그래가지고 사실 저희가 리액트를 안 쓰고 뷰를 쓰든 어떤 거를 쓰든 바뀔 수도 있다라고 생각을 해가지고 그래서 그냥 자기가 그리고 싶은 데이터만 받아가지고 그려준다고 좀 생각을 했습니다.

참석자 2 08:54
근데 사실 지금은 너무 초기 단계라서 구현을 하다 보면 당연히 안 될 수도 있는 부분이긴 한데 일단은 역할은 그 정도로 생각을 했었습니다.

참석자 1 09:04
역할이 뭐라고

참석자 2 09:05
컴포넌트 같은 경우에는 자기가 그리는 것만 신경을 써야 되기 때문에 그 프롭스로 받아서 그려주기만 합니다.

참석자 3 09:14
에디터는 없다.

참석자 2 09:16
네 여기서 에디터는 그냥 없다고 봐주시면 됩니다.

참석자 1 09:19
그럼 와봐야 여기 여기 올 수밖에 없잖아

참석자 2 09:22
응 맞습니다. 여기서 에디터에서 디스패치 커맨드를 해줘야 됩니다.

참석자 1 09:27
일단은

참석자 2 09:33
그래 가지고 조금 제가 해야 되는 영향 범위랑 좀 엮이는 부분이 지금은 저희가 아이템 뷰 모델을 그대로 가지고 오고 있습니다.
근데 플렉션은 이 카운트를 몰라야 되는 되는데 이제 이런 부분들도 사실은 전부 다 저희 5.0에 연관되어 있는 내용들이라고 생각을 합니다.
그래서 이 코드 노드가 받아야 되는 데이터는 이런 데이터랑 실제 라이터블인지 아니면 디스플레이 네임이라든지 디스플레이 스테이트라든가 이런 것만 좀 받아야 된다라고 생각을 하고 있긴 합니다.
그래서 이걸 해주려면은 사실 좀 제너레이터에서 발라줘가지고 넣어주고 또 여기 있는 데이터 키를 외부에 던져주면은 외부에서 그 데이터 키로 발랐던 내용들이 있잖아요.
이 카운트에 써야 되는 비즈니스 로직이 필요한 데이터

참석자 1 10:23
근데 여기는 이미 바이라즈 왔다고 봐야지.

참석자 2 10:26
네 근데 지금은

참석자 1 10:28
그러니까 그거를 이거를 걷어내고 니가 얘기한 대로 5.0 프레임워크과 관련 없는 얘가 받아야 될 형을 여기서 확정을 시켜 주면 되지 그냥 근데 스테이트 잠깐만 이게 뭐야 코드 노드 스테이

참석자 2 10:43
트가 아이템 뷰 모델 그냥 전체라고 보시면 됩니다.

참석자 1 10:45
그러니까 이거를 이거를 정리해야지 이건 뭐야 크리에이트 스테이트는 뭐야

참석자 2 10:51
노드 렉시컬 노드 쪽에서 자동으로 이제 해당 값이 바뀌면은 리랜더 될 수 있도록 도와주는

참석자 1 11:01
이게 왜 필요하?

참석자 2 11:02
그 함수입니다. 이게 위에 코드 데이터 스테이트 같은 경우에는

참석자 1 11:07
그러니까 지금 얘를 통해서 이 스테이트를 만들어야만 렌더링 된다는 얘기야

참석자 2 11:14
맞습니다. 그렇지는 않긴 한데 얘가 좀 편의적인 기능도 있습니다.
에디터 스테이트로 들어왔을 때 노드를 만들어 줘야 되는데 그 만들어주는 데이터들을 자동으로 꽂아줍니다.
그거 안 하면은 인포트 제이썬에서 들어오는 데이터

참석자 1 11:33
잠깐만 이거 지금 이거 전에 ast 노드 상에 얘네들이 가질 스테이트가 정의가 될 건데 이게 또 왜 필요하지?

참석자 2 11:48
이거는 코드 노드에서 쓰기 위한 그냥

참석자 1 11:51
코드 노드에서 쓴다. 네

참석자 2 11:53
데이터를 관리하기 위한 함수입니다. 그냥 편의 함수 정도입니다.

참석자 1 12:00
그러니까 이 스테이트를 왜 여기 노드가 이게 맞나 나 이거

참석자 2 12:09
우선은 지금은 저희가 제너레이터를 새로 만드는 게 아니잖아요.
그래서 그대로 들어온다고 가정을 하고 만들었고요.
그래서 저 데이터를 여기 안에서 다루고 있지 않습니다.

참석자 1 12:29
일단 이건 내가 좀 보고 내가 확인을 좀 내가 이거 확인을 못하는

참석자 2 12:32
알겠습니다. 그래서

참석자 1 12:35
일단 알았어.

참석자 2 12:36
말씀드리고 싶었던 거는 말씀해 주신 것처럼 이제 이것들이 여기로 들어오게 되면은 결국에는 있으면 쓸 수도 있거든요.
그래 가지고 아예 밖으로 빼는 게 저는 좀 이상적인 생각 이라고 말씀드리고 싶었습니다.

참석자 1 12:49
응 그건 당연히 빼야지 알겠어. 근데 잠깐만 이거를 네가 고민을 왜 하고 있지?
이걸 첫 번째 질문은 이거 이 영역이 네가 이거를 왜 고민하고 있지?

참석자 2 13:01
근데 사실 이거는 지금 그냥

참석자 1 13:03
어

참석자 2 13:04
초기에 구조 짤 때 이렇게 하는 게 맞겠다라고 생각을 했었던 거고요.
지금

참석자 1 13:09
그때 한 번 역할을 좀 정했잖아 그거와 별개로 지금 얘기하는 거야

참석자 2 13:15
역할을 정했다는 게 저희 플렉션 ERP 이거 그전에 제가 고민했었던 내용

참석자 1 13:19
그거와 무관한 얘기랑

참석자 2 13:20
맞습니다. 네 지금은 이제 저희가 다 따로 분배해서 하잖아요.
네 분배해서 했을 때 이런 전체적인 그림이 안 맞으면 뭔가 네

참석자 1 13:30
그러니까 나는 그거를 민영이가 이걸 맡았으니까 파트를 해보면서 이제 그거를 각자 이제 나눴잖아.
그래서 그거를 한번 공유하려고 한 거고 오케이 그러니까 너는 일단은 니 거 외에 이제 니가 처음부터 전체로 고민했던 걸 얘기하는 거라는 거잖아 맞습니다.
맞습니다. 네 민영아 잘 이해해라. 일단 일단 어쨌든 니가 이 표준을 잡아야 돼.
니가 필요하다 싶으면 반영을 해서 공유를 해줘야 돼.
일단

참석자 2 14:02
그래서 네 우선은 제가 공유드리고 싶었었던 내용들은 여기까지입니다.
다른 거는 다 저희 비즈니스 쪽 제가 해야 되는 거랑 연관이 있어서

참석자 1 14:14
그럼 니 거 맡은 거에 대한 얘기는 없나 오늘

참석자 2 14:17
따로 말씀드리려고 했었는데 그냥 지금 공유 드릴까요?

참석자 1 14:21
그러니까 따로 할 필요 없이 일단 당분간은 전체 모였을 때 공유를 해줘.
왜냐하면 이거 지금 초기 단계라서 좀 이해를 이해도를 맞춰야 되거든

참석자 2 14:32
알겠습니다. 그러면은 일단 제가 맡았었던 거는 일단 흐름부터 간단하게 조금 말씀드려보자면은 여기 노드에서 디스패치 코맨드로 하면은 그 플러그인으로 나갑니다.

참석자 1 14:45
일단 이거를 봐봐. 이 얘기가 길어져서 내가 ERP 서비스 인터페이스 타입 하나 던져줬잖아.
맞습니다. 그 설계 됐나

참석자 2 14:55
아직 그거는 만들지 않아

참석자 1 14:57
그거를 먼저 해라. 그러니까 이거를 장황하게 막 로직 보면서 설명하면 당장 이거 다 이해도가 안 되니까 결국은 나는 ERP 서비스 인터페이스 어떻게 구현할까가 결정 나면 나머지는 뭐 대충 다 이해되니까 그렇지.
그래서 내가 3개 얘기했잖아. 디스패치 하는 기능 그다음에 뭐야 데이터 모델 싱크 또는 외부에서 우리 내부적으로 스테이트 플로우 랜더링 고 플로우 하나 데이터 싱크 하는 거 단 방향으로 한다.
그다음 세 번째 하나 뭐였지

참석자 2 15:35
밸리데이터랑 포맷하고

참석자 1 15:37
그지 외부 모듈 실제 어떻게 참조하는가 그 인터페이스를 확정 짓고 얘기를

참석자 2 15:45
3개 다 한꺼번에 할 거 아

참석자 1 15:47
하나 되는 대로

참석자 2 15:48
지금 일단 데이터 모델 싱크는

참석자 1 15:49
어 그럼 보자 그것만

참석자 2 15:51
일단은 ERP 서비스라는 제가 만들어놓은 엑스터널 모델 매니저랑 그거랑 사실 이름만 좀 갈아 끼우면 된다고 생각을 해서 지금 엑스터널 모델 메이저로 구현을 하긴 했습니다.
그러면은 코드 말씀드리기 전에 제가 구현하고자 했었던 방향은

참석자 2 16:20
잠시만요. 적어놓은 게 많아가지고 저번에 말씀드렸었던 내용인데 이제 이렇게 컨텍스트 안에 이게 에디터죠 플렉션이죠.
플렉션 스테이트가 들어갈 거고 거기 안에 가까이 있는 노드가 다른 모델들을 참조할 수 있다 그러면 이거 바뀌면은 투가 바뀌면은 이거 컨텍스트 여기 여기 두 개 다 자동으로 바뀌어야 된다가 요구 사항입니다.
근데 5.0에서는 이걸 어떻게 구현했었냐면은 DMC에다가 얘가 DMC라고 가정을 하겠습니다.
여기에다가 서브 스크라이브를 합니다. 얘가 바뀌면은 서브 스크라이브 되어 있는 애들 리스너들을 호출시켜서 세스테이트 이런 걸 해 줍니다.

참석자 1 17:00
이거 어쩌면 못 그려 이렇게 화면을 못 그려

참석자 2 17:04
이렇게는 안 되긴 하는데 네 네 그래서 그 기본 동작은 흐름은 이렇게 되어 있습니다.
근데 문제가 저희가 그리드 셀 만 개 2만 개 그리면은 리스너들이 다 붙어버리니까 그거에 대한 메모리 사용량이 좀 많다가 일단 문제점이었습니다.
그래서 이걸 어떻게 개선할까를 좀 고민을 했었는데 일단은 하려면 매핑을 하긴 해야 됩니다.
매핑을 하긴 해야 되는데 일단은 펑션 같은 경우에는 사실 객체이기도 하고 클로저라든가 좀 스코프로 잡고 있는 데이터들이 있어서 그래서 그거보다는 조금 싼 싸게 조금 메모리를 사용해야겠다 라고 생각을 했습니다.
왜냐하면은 매핑을 안 하면은 저희가 데이터 바뀔 때마다 그 데이터 모델 인덱스 데이터 모델 아이디 프로바이드 이걸로 그 노드에 있는 전체를 다 긁어가지고 찾아야 됩니다.
내가 어떤 노드를 바꿔줘야 돼를 찾아야 됩니다.

참석자 1 18:00
근데 이거 매핑은 딱 하나만 하면 되는 거 아니야?

참석자 2 18:03
매핑을 하나만 하면

참석자 1 18:04
이미 노드 키는 있고 그러니까 어떤 노드인지는 키가 있고 그지 네 걔는 지금 렉시커리 내부적으로 관리하는 키가 있잖아 맞습니다.
로드맵 그지 그러니까 노드에 대한 키는 있어 그럼 지금 없는 건 뭐냐 하면 데이터 모델과 이 데이터 모델이 어떤 노드의 키인지가 없어 지금

참석자 2 18:27
그거는 되어 있긴 합니다.

참석자 1 18:28
그러면 나머지 다른 게 더 필요해 조금 필요하긴 합니다.
어떤 거 어떤 게 안 돼

참석자 2 18:34
그래가지고 아까 말씀드렸었던 노드 전체를 탐색하는 비용이 사실 좀 이제 키보드 이렇게 막 입력하면은 그게 좀 비용이 비싸다고 생각을 해가지고 어쨌든 매핑을 해야 되긴 한다고 생각을 했습니다.

참석자 1 18:47
그러니까 매핑 그러니까 이 데이터 키가 어떤 노드 키인지에 대한 매핑만 있으면 되는 거 아니야

참석자 2 18:54
그거는 되어 있기는 한데 그 데이터 모델이 바뀌었을 때 얘가 어떤 노드들을 바꿔줘야 되는지 근데 그 기준이 데이터 키인 거죠.
그러면은 지금 DMC가 바뀌었어요. 나 DMC에서 어떤 데이터가 바뀌었는데 어떤 데이터 키들을 바꿔줘야 돼

참석자 1 19:08
하나지 하나 내가 바뀌면 데이터 키와 노드 키는 1 대 1이잖아 그러니까 1 대 1이 안 되잖아

참석자 2 19:17
이제 DMC 바뀌면 데이터 키들을 찾아야 되잖아요.
결국엔 데이터 키가 있어야 어떤 노드에 셋 밸류 해줄 건지를 알 수 있으니까 그 데이터 키로 어떤 노드인지를 찾을 수가 있습니다.
노드 키랑 똑같이 쓸 수 있습니다. 네

참석자 1 19:33
그러니까 그 매핑이 있다고 얘기한 거 아니야

참석자 2 19:35
그 매핑을 만들어야 됩니다.

참석자 1 19:37
그 매핑을 만들어야 되는 얘기야 데이터 키와 노드 키에 대한 매핑을 만들어야 된다는 얘

참석자 2 19:42
그건 이미 만들어져.

참석자 1 19:44
그러니까 그게 무슨 말이야 만들어져 있다는데 왜 또 만든다는 거야?
그러니까 마스터에 커스트 걔 0번째 커스트야 이게 데이터 키야 그지 데이터 워델 아이디 프로 바이디 데이터 모델 인덱스 3개가 키지 키야 그럼 이 키가 노드 우리 얘네들에 있는 노드 맵에 있는 노드 키 있잖아 인덱스 된 거 그거에 대한 매핑 정보가 있어야 되잖아 그치 그러니까 그 정보가 남원이 만들어 놓은 거 아닌가 그때 이것까지 안 했나

참석자 3 20:17
그것까지는 안 했어.

참석자 1 20:19
그러니까 이거를 만들어야 된다는 얘기야

참석자 2 20:21
그걸 만들었습니다. 그렇게 구현을 했습니다.

참석자 1 20:23
그래 그러니까 그러니까 맞아 그것만 하면 그러니까 그걸 했다는 얘기가 맞아

참석자 2 20:29
맞습니다. 맞습니다. 네

참석자 1 20:31
그럼 어디다 관리하는데 누가

참석자 2 20:34
그게 잠시만요. 이제 이쪽 플러그인에서 진행을 하는데 이거는 에디터에 등록된 모든 노드들입니다.
노드 드리고 지금 데크로이트 클래스라는 거는 아까 코드 노드를 확장했었던 건데 이거는 아직 좀 정해진 게 없어서 넘어가도록 하겠습니다.
그래서 엑스널 모델 매니저라는 거에서 일단 다 하고 있는데 ERP 서비스라고 봐주셔도 됩니다.
그래서 서브 스크 모델을 하는데 스노

참석자 2 21:09
이제 오른쪽이 엑스솔 모델 매니저고요. 왼쪽이 실제 가져다 쓰는 클라이언트 코드입니다.

참석자 1 21:21
그래서 아까 보셨던 여기 구조

참석자 1 21:28
이거 있죠 모델 여러 개 그게 다 있다는 거죠.

참석자 2 21:33
엑스돌 모델 매니저가 다 가지고 있습니다. 그래서 각각 DMC를 서브 스크라이브로 합니다.
그래서 만약에 모델 1이 바뀌었습니다. 그러면 디프 맵으로 가지고 와서 나보고 바뀌었어 그러면 데이터 키 가지고 와

참석자 1 21:48
바뀐 걸 다시 디플로 하나 이거 이거 왜 하지

참석자 2 21:52
왜냐면은 DMC 내부적으로도 자기가 뭘 바뀌었는지를 바로 알 수가.

참석자 1 21:57
근데 이거 지금 나눠야 될 거야. 그러니까 내가 항목을 딱 특정해서 바뀔 때가 있고 전체 통으로 바뀔 때가 있거든 그 전체 통으로 바뀔 때는 아마 이렇게 해야 될 것 같긴 한데

참석자 2 22:09
하나만 바뀌어도 디포 맵을 쓰긴 합니다.

참석자 1 22:12
근데 그걸 왜 해 이미 확정된 건데 그거 그건 잘 모르겠어 모른다고 이거 인터페이스가 이미 다르잖아.
내가 데이터 모델 통으로 바꾸는 것과 하나의 항목을 특징해서 바꾸는 인터페이스가 나눠져 있는데 이걸 내가 하나 바꾸든 앵개든 이걸로 할 필요가 없어.

참석자 2 22:30
근데 그 서브 스크라이브 프로바이디 딱 하나만 바꿨을 때를 하게 되면은 결국에는 각 셀마다 자기가 관심 가진 프로바이디가 있잖아요.

참석자 1 22:41
각 셀마다 관심 가지는 프로 아이디 체인지 이벤트 바인딩 하는 그런 걸 의미하는 거야.
내가 a 값이 바뀌면 내가 뭐를 해야 돼 뭐 이런 거 얘기하는 거야.
수량 바뀌면 합계 계산해야 돼. 그러니까 그 서브 스크라이브 항목별로 서브 스크라이브 얘기하.

참석자 2 23:02
맞습니다. 항목별로 서브 스크라이 하는 거 지금 이렇게 통짜로 해놓은 이유가 예를 들어서 저희가 그리드 하나 그리면은 각 로우가 데이터 모델인 거잖아요.
그러면은 그 안에 있는 셀들 각각이 서브 스크라이브 밸류 바이 프로바이디를 할 텐데 그럼 결국에는 똑같이 만 개 2만 개라는 리스너들이 등록되는 거랑 똑같잖아요.
근데 그 비용 메모리 비용이 비싸니까 그걸 안 하고

참석자 3 23:31
일평 망해

참석자 2 23:33
이렇게만 막아놔요.

참석자 3 23:35
서비스 클라이브 쓰면 망해

참석자 2 23:37
이렇게 하면 안 되는

참석자 3 23:38
이렇게 하면 비용이 5천

참석자 1 23:43
아니 그러니까 나 하나 근데 내가 하나 하나라고 그랬잖아.
하나 하나 그러니까 인지는 해야 되니까. 왜냐하면 DMC는 외부에 있는 거고 결국은 저 바뀐 거를 외부에서 감지를 해야 돼 알아야 될 거 아니야 바뀌면은 뭐 구독을 해야 알지 그걸 안 하면 모르잖아.
그러니까 이거는 뭐 그렇다 쳐 한 번 하는 거잖아. 결국 맞습니다.
인플로그인이 최초 DMC 별로 지금 셀별로 다 걸고 있는데 한 번은 구독은 해야 되는 건 맞아.
그래서 이게 n개니까 그치 근데 이거를 그러면은 기존 DMC 안에서 콜 해 주는 게 셋 밸류해도 얘를 콜 예 맞습니다.
셋 데이터 해도 얘를 콜한다는 얘기

참석자 2 24:28
맞습니다. 데이터 모델을 하든

참석자 1 24:31
나 그 이유를 모르겠는데 이것도 비용인데 왜 그러지?
이거는 이거는 이거는 왜 하는 거야? 그대로 가지고 온 거기는 아니 그러니까 그대로 갖고 올 필요는 없고 진짜 필요한지를 봐야 되는데 다시 봐 봐 봐 이런 거 어디 갔어?
이거 맞잖아 아까 수업 18번 그러면

참석자 1 24:58
그러니까 이게 DP 맵을 이게 막

참석자 1 25:08
이거 어떻게 비교하는 거 그냥 이거 그냥 다 비교해 딥 컴페어 해야 되는 거 아니야 값을 비교해야 되잖아.

참석자 2 25:19
사실 내부 구현까지는 잘 모르겠어요. 더리 체크를 해가지고 그것만 가지고 있어

참석자 1 25:24
값을 말단 값까지 다 비교할 것 같아.

참석자 2 25:26
아니면 하나하나 비교해서 가지고 오는지는 저도 구현을 좀 봐야 될 것 같긴 합니다.

참석자 1 25:30
어쨌든 이게 그러니까 오케이 이거는 좀 디테일을 좀 봐봐.
이게 진짜 필요한 건지 난 모르겠어. 그 결국은 전체가 바뀌는 것과 하나 내가 특정해서 바꾸는 거를 하나로 이렇게 뭉쳐서 할 필요는 없을 것 같아.
내 생각에 이게 필요할 때 있지. 전체가 바뀌었을 때 그렇지 그거를 나눌 수 있는지 보고 지금 이렇게 돼 있다고 하니 이렇게 해야만 되는 건지를

참석자 1 26:08
네 알겠습니다. 어쨌든 바뀌었어. 데이터 키를 찾는다.
이거 한번 봐봐. 데이터 키 어떻게 매핑하는데 그러니까 인덱스 3개 넣었어.
이거는 그러니까 그거 누가 누가 가지고 있어 일단 키를

참석자 2 26:29
키를 에디터 스테이트에서

참석자 1 26:33
저기 노 대

참석자 2 26:34
실제로 돔에 붙을 때 없어질 때를 알 수 있습니다만

참석자 1 26:39
이거 그러니까 노드가 들고 있다는 거네. 맞아요.
자기 데이터 키를 맞습니다. 그러면 데이터 키는 어떻게 아는데 노드는

참석자 2 26:45
어떻게 안다라는 게

참석자 1 26:47
이게 근데 어떻게 이게 가능해? 그 노드를 어떻게 찾아

참석자 2 26:50
왜냐하면은 찾는 거는

참석자 1 26:53
일단 노드 키를 모르잖아.

참석자 2 26:56
내부적으로 매핑되어 있습니다.

참석자 1 26:57
아니 일단 외부에서 DMC에 셋 밸류 했어. 데이터 키를 알았어 그렇지 어떤 데이터를 알았어?
그럼 노드 키를 어떻게 찾아 그걸로 이거를 키를 찾아야 되잖아 노드 키를

참석자 2 27:11
노드 키를 알 필요는 내부적으로 처리해 주긴 합니다.
그래서 여기서 노드 잠시만요.

참석자 1 27:19
내부적으로 처리해 준다고 그게 예스라

참석자 2 27:23
노드를 가지고 어떻게 데이터 키로 가지고 오냐는 말씀이신

참석자 1 27:26
데이터 키를 가지고 어떻게 노드 키를 찾냐는 거지.
내 말은 왜 지금이 여기가 네가 아까 여기서 어디 갔냐 아까 서브스카라 한번 가 봐.
서브스 카메라 여기를 치자. DMC 셋 밸류를 때렸어.
밖에서 그지 유저 액션에서 그럼 콜 될 거 아니야 그지 그래서 지금 여기는 데이터 키만 안단 말이야.
지금 현재 값과 그러면 이 데이터 키로 내가 노드를 업데이트 시킬 예를 찾아야 되잖아 노드 그거를 어떻게 찾냐는 거지

참석자 1 28:10
데이터 키 맵이 있다. 이게 어디야? 플렉션 그러니까 내부적으로 그럼 쟤는 언제 만들어

참석자 2 28:17
내부적으로 관리를 해 주는데 얘가

참석자 1 28:19
이렇게 만들어볼 거예요. 설렉션 커넥트 모델

참석자 2 28:25
그래서 컨스트럭터는 무조건 탑니다. 이거는

참석자 1 28:29
그럼 이걸 주입 받는 거야 외부에서 그러니까 노드 그냥 에이스 상에 이걸 만들어 놓다는 거네.

참석자 2 28:34
맞습니다. 이거는 지금 아이템 뷰 모델 그대로 봤잖아요.
거기에 데이터 키 같이 만들어서 넣어줘야 됩니다.

참석자 1 28:39
그러니까 플렉션 ST를 만들 때 이미 키를 데이터 키를 만들어 넣어야 된다는 얘기지 맞습니다.
제너레이터에서

참석자 1 28:55
데이터 키를 얘는 그럼 누가 이거는 캡션 이건 누가 익스텐션 한 거야

참석자 2 29:02
이거는 플렉션 코드 노드가 플랙 네 코드 노드 코드 노드가 실제로 가져다 씁니다.

참석자 1 29:21
그러니까 얘가 그럼 얘를 익스텐드 한 거야.

참석자 2 29:24
내부적으로 저 맵을 쓰고 있습니다.

참석자 1 29:29
이거를 그냥 이게 익스탠드 하는 게 아니라 메이블 그냥

참석자 2 29:34
네 스토어만 그냥 웹으로 빼놨고요.

참석자 1 29:36
인스턴스를 쓴다는 거야. 네 그러니까 이 인스턴스를 주입받는다는 거지 그 노드 클래스들이 맞습니다.
일단 어쨌든 안에 있다. 내부적으로 관리한다.

참석자 2 29:50
왜냐하면 웹으로 빠지는 건 데이터 키만 빠지기 때문에 그

참석자 1 29:53
그럼 돌아가서 아까 뭐지? 익스터널 모델 매니저 네 그거 다시 한 번 여기 이거입니다.
이건가 그러면 얘는 이거는 누가 콜 어디서 콜하지?

참석자 2 30:10
이거는 플러그인 초기에

참석자 1 30:14
그치 다 등록을 해놓고요. 등록하고 그다음에 이건 뭐야 플렉션 데크레이트 클래스 리스트는 뭐야?

참석자 2 30:20
얘네들은 이제 플렉션 코드 노드 이런 애들입니다.
그냥 저희가 리액트 컴포넌트들 플렉션에다가 꽂는 애들 전부를 의미하긴 합니다.
근데 이거를 렉시컬 로드로 확장할지는 좀 정해야 될 것 같긴 한데 아직 저희가 구현은 UI 구현은 일단은 데코레이터로 좀 생각을 하고 있어가지고

참석자 1 30:40
잠깐만 이게 왜 필요하지? 노드 맵에 맵을 들고 왔어 돌면서 미테이션 리스너를 달아 이거 달아서

참석자 2 30:53
네 돔에 붙을 때 삭제될 때 감지해서

참석자 1 30:58
이 맵을 관리하는

참석자 2 31:00
네 맵에다가 데이터 모델 아이디 인덱스 프롬 아이디랑 매핑된

참석자 1 31:06
그러면 어차피 노드에 인터페이스에 이게 없어 없어요.
그러니까 디지털 거기다 붙이면 되지 자기 거 결국은 데코레이터 노드에 붙이면 되겠네.
왜냐하면 쟤가 디테치 되거나 업데이트 될 때 뭔가 콜 되지 않을까

참석자 2 31:22
아마 내부적으로 콜 되는 게

참석자 1 31:25
그러니까 이거를 이렇게 할 필요는 없고 그 노드가 어차피 노드가 이 인스턴스 갖고 있다며 얘는

참석자 2 31:32
내부적으로 라이프 사이클을 정할 수 있지 않냐라는 말

참석자 1 31:35
라이브 사이클 이벤트나 커맨드를 넣어

참석자 2 31:38
네 그렇게 해도 되긴 합니다. 근데 그렇게 하면 디스패치 커맨드로 빼서 좀 해야 되긴 합니다.

참석자 1 31:45
여기서 코멘트를 구독하면 되지 얘가

참석자 2 31:47
네 그런 방식으로 해도 되기는 합니다.

참석자 1 31:51
이게 어차피 그러니까 결국은 얘는 실제로 이게 그러면 크리에이트 디지털이 다 콜 되는 거야 뮤테이션 리스트가 그러니까 이렇게 크리에이티브 뷰티스트로 리스트

참석자 5 32:08
근데 노드가 직접 어펜드 되고 리무그 될 때에 저 로직이 들어갈 수가 현재 없는 건가요?
실제

참석자 1 32:15
그러니까 나도 나도 그렇게

참석자 5 32:17
실제 노드가 어벤드 되어 있고

참석자 2 32:19
이거는 도매 붙었을 때고요. 말씀해 주신 에디터 스테이트에 잠시만요.
근데 비슷한 시점이라고 하면은 사실 정확한 이런 라이프 사이트는 없고요.
크리에이트 돔 같은 경우에는 돔에 붙이기 전에 에디터 스테이트에 있어 그러면은 그 돔 만들 때 크리에이트 돔 하고 조정 리콘사이 해가지고 실제 도면 붙입니다.

참석자 3 32:43
일단 하나 하나 얘기드리면 지금 결국에 이거 에이스트 가지고 만드는 거죠.

참석자 2 32:48
응 맞습니다.

참석자 3 32:50
뭐를 만들어 ast 가지고 플렉션 쪽에 들어가서 뭔가 만들어지는 거가 맞죠?
이거 네

참석자 1 33:00
맞죠? at가 있어요. 이 플로그인이

참석자 3 33:03
있어요. 아무튼 ast 데이터는 우리가 만들죠.
이 컬렉션 안에 들어가서 뭔가 그 둘의 키를 매핑시키려고 지금 이거를 하고 있는 거잖아요.
근데 이제 전에 회의를 했을 때 로드가 가지고 있는 언더 언더바 키는 쓰지 말자로 얘기했던 걸로 알고 있고

참석자 1 33:22
외부에서 노출하지 말라는 거지 써야지 그건 쓸 수 없고

참석자 3 33:27
그래서 실질적으로는 as를 만들 때 노드가 안에서 써야 되는 키를 매핑하려고 했던 거 아니에요?
ast를 만드는 그 시점에 데이터랑 결국엔 ast랑 연관을 갖거든요.
무조건 그렇게 이거죠. 그러니까 거기서 키를 만들면 굳이 여기서 키를 왜 또 이거

참석자 1 33:47
그게 그거야 그러니까 지금 그거는 이 코드 노드 아까 봐봐 봐 코드 노드에 있는 내용이고 그러니까 나 쌤이 얘기한 건 뭐냐 하면 이 키는 그때 ast에서 만들어서 주는 거야.
ST 만들 거예요. 이거는 그러니까 이거는 이 키는 가지고 있는데 결국은 이 키가 외부에서 저 키를 가지고 얘를 찾아야 되잖아 이 노드를 찾아야 되니까 매핑이 필요하지

참석자 3 34:16
그러니까 그 파인드 해주는 데가 지금 이렇게 로드맵이라고 해서 얘네들이 관리해 주고 있는 건데 그거를 구현해 놓으면은 굳이 이렇게 매핑하는 작업을 번갈아 가면서 안 해도 되는 거 아니야?

참석자 2 34:32
제네레이트 단계로 뺄 수 있다는 말씀이신 거죠

참석자 1 34:34
아니 이거는 매핑이 아니라 다시 봐봐. 그러니까 매핑은 아니고 매핑은 얘가 하는 거고 매핑은 제가 하는 거고 이거는 지금 이거 매핑 키 넣는 거야.
네 아 왜 여기서

참석자 2 34:53
왜냐하면 제가 ast를 만들고 있지 않아가지고

참석자 1 34:56
런 타임에 이거 저기 노드 관리하는 건데 아니네. 이거 아니 왜 이거를 얘가 관리해 그러면 얘는 아니 아까 데이터 키가 얘가 관리하는 게 아니잖아 렉시컬 내부에서 관리하는 거 아니었어?
이거 인터페이스 가봐 봐. 이거 뭔데 셋트 이거 그냥

참석자 2 35:34
데이터 모델 아이디 인덱스 프로 아이디를 주면 데이터 키를 뱉어주게끔 매핑해 주는 매포입니다.

참석자 1 35:43
그러니까 얘는 어떤 세 개의 조각들 데이터를 가지고 키를 만들어주는 것밖엔 없네.
맞아요. 그지 그러니까 그 키 그러니까 데이터 키에 대한 매입이 그거잖아.
네 프로바이디 데이터 모델라 인덱스 가지고 데이터 키가 뭔지를 역으로 그러니까 알 수 있는 거니까.
네 노드 키랑 상관없이 그냥 일단 여기 있다 치고 맞습니다.
다 치고 이거 해야 돼 안 해도 될 것 같은데 그

참석자 2 36:12
말씀해 주신 대로 제네릭 단계도 빼도 되긴 합니다.

참석자 1 36:17
이거는 이렇게 안 하는 게 나을 것 같다. 이거 왜냐하면 노드 이거 굳이 안 만들어질 수도 있어.
이거 이게 다 만들어져 있나 노드는 오케이 노드는 만들어지는데 클래스 리스트 이거 지금 우리가 이거 쓰는 건가 노드의 비율 언더바 노드는 네 뭐라 그러냐 그러니까 노드 풀 정보인데 그냥 이 에디트에 어떤 노드가 있어 그거에 대한 정보잖아 맞습니다.
그러니까 근데 이게 맞아 얘는 노드 인스턴스가 아니라 컨트럭터 상태의 그냥 풀일 텐데 얘는 응 맞습니다.
근데 개를 돌면서

참석자 2 37:04
저 레지스터 뮤테이션 리스롤라는 게 인스턴스가 아니라 클래스 기준으로 등록을 해놓습니다.

참석자 1 37:10
알았어. 일단 이런 패턴은 하지 마 알겠습니다. 왜냐하면 이거 루트북 결국은 똑같아 콜백 등록 굳이 안 해도 될 것 같아.

참석자 2 37:18
그러면 어디서 해 주기만 하면 처리를 해

참석자 1 37:20
못 찾아봐 그 포인트는 그지 그리고 이게 진짜 필요한 건지도 모르겠다.
그것도 좀 고민해 봐. 매니저 이키로 셋 데이터

참석자 1 37:36
그러니까 이 과정이 그냥 어쨌든 그 룰이야 여기서 정한 거잖아.
그러니까 그 그러니까 룰 베이스로 그냥 파스싱하면 되지 않을까 왜냐하면 이거 지금 결국은 얘도 셀별로 생길 거 아니야 개수가 맞습니다.
그러니까 그거가 나는 볼 필요가 있는 그냥 런 타임에 키 만들고 파싱해서 그냥 써도 될 것 같은데 왜냐하면 룰이 있잖아.
이건 룰 베이스로 움직일 수밖에 없거든. 키는

참석자 2 38:11
네 그렇긴 한데 데이터 키를 바로 찾을 수는 없습니다.
찾는 탐색 과정이 필요한데 저는 그 탐색 과정

참석자 1 38:18
나 지금 이해를 못했는데 데이터 키와 데이터 모델 키 데이터 모델 정보를 키로 하는 데이터 키 이거 뭐야 이 내가 지금 잘못 이해했나 이 말이 안 그러니까 그래 이게 왜 탐색을 해야 돼?
이거 조합인 거잖아 맞습니다. 룰이잖아 그냥 네 근데 이게 만약에 셀이 우리 2천 개 곱하기 100개야 2만 개가 있어 그럼 이거 2만 개의 키를 굳이 만들어서 등록하고 빼고 할 필요가 있나

참석자 2 38:49
사실 이렇게 하는 이유가 그 데이터 키를 빨리 찾기 위함도 있었고 그 리스너를 등록하는 비용보다는 싸다고 생각을 해서 이렇게 했습니다.
이렇게 안 하면은 그 데이터 키를 찾아야 되잖아요.
결국엔

참석자 1 39:04
왜 찾는다는 게 어떤 의미야 이

참석자 2 39:06
왜냐하면 저희가 데이터가 바뀌었어요. DMC에는 데이터가 바뀌어서인데 얘네랑 매핑되어 있는 데이터 키를 찾아야 되잖아요.
결국 데이터 키를 찾는다는 거는 그 노드를 알 수 있다라는 의미니까.

참석자 1 39:15
아니 이게 바꿈을 인지하는 그 시점에는 이미 데이터 키 확정돼 있는 정보야 내가 마스터의 코스트에 두 번째가 바뀌었어라는 거를 그 값이 바뀌었다라는 정보를 인지할 수 있는 시점에는 이미 저 키가 확정돼 있다니까 저게 이 정보가 없으면은 어떻게 알아 그걸 그러니까 내가 두 번째 거래처 값이 바뀌었다는 걸 인지하는 순간 쟤는 그냥 당연히 알아야 되는 다

참석자 2 39:48
말씀해 주신 게 그러니까 저는 이 데이터 키가 그냥 랜덤한 값이거든요.
근데 말씀해 주신 거는 이 데이터 키 자체가 그냥 이러한 룰로 정해진 애다라는 거네요.
이해했습니다.

참석자 1 40:00
랜덤하게 할 필요가 없다고 왜냐하면 쟤가 유니크한 쟤가 인디케이터야 그럼 인디케이터 딱 얘는 어떠한 데이터 모델에서는 반드시 유니크한 키라고 이미 모든 우리 비즈니스 레이어에는 확정된 거란 말이야.
이 3개가 그래서 이걸 키로 쓰면 돼 유니크하다는 얘기야.

참석자 2 40:20
저는 재탁기는 그냥 아예 별개고 그래가지고 그 매퍼가 필요하다고 생각을 했습니다.

참석자 1 40:26
그러니까 그게 나도 그래서 굳이 이거 안 풀어도 될 것 같은데 그러기엔 비용이 너무 비싸잖아 맞습니다.
이해했습니다. 그러니까 xid가 아니어도 되는 거

참석자 3 40:37
이건 다른 다른 얘기긴 한데 저 로우키 만들 때 실제 데이터마다 지금 레코드

참석자 1 40:44
로키 로키

참석자 3 40:45
저거 지금 데이터 모델 데이터 모델 키를 만들고 있잖아요.
이거 아 이거 그 룰에 의해서 저 우리 인덱스가 들어가면 안 돼요.
들어갈 수 있는 레코드 시드가 들어가면 돼 레코드 시드 레코드 시드를 넣어야지 실제로 내가 행위나 이렇게 변경이 되었을 때 그렇치 인덱스에 영향을 안 받아요.

참석자 1 41:08
그래서 내가 키를 키 제네이터를 외부에서 받으라고 그랬잖아 그 데이터 키 생성하는 거를 그러니까 키 제네리타 파서를 받아야 돼.
그러니까 왜냐하면 이 키를 우리가 계속 어떤 데는 달라질 수도 있고 확정을 지을 순 없고 실제로 익스큐션 컨텍스트 ERP 컨텍스트 수준으로 이 키를 받아야 돼.
그래서 여기는 키 제너레이터만 들고 다니고 그러니까 이해했어.
그러니까 어쨌든 룰 베이스다 그지 그래서 이거를 신경 쓸 필요 없다는 거야.
컨텍스트를 이 안에 안에 내용을

참석자 2 41:44
이해했습니다. 저는 이제 저거 할 때는 어떻게 만들지가 아예 그냥 깜깜한 영역이었어.

참석자 1 41:49
그러니까 지금도 이게 아마 우리 중간에 그리드 중간에 빈 행 넣으면 인덱스 밀리거든.
그래서 이게 랜더링이 인덱스가 키로 잡혀 있어서 안 바뀌어도 막 랜더가 되고 있었어.
그래서 아마 키 구조를 외부에서 받았어. 그러니까 이게 지금 어쩌면 속성으로 와 키에 필요한 프로바이드가 뭐다가 다 다르다는 얘기야.
네 이해했냐 그래서 저거를 이렇게 하드 코딩해서 확정하는 건 아니고 받아야 될 거야.
그래서 제너레이 제너레이터만 너는 받는다. 외부에서 받는다 생각하고 가 근데 일단은 임시로는 이렇게 써도 돼.
그러니까 밖에서 주입할 때 펑션을 그지 이해했습니다.
그러면 얘 역할은 이거네.

참석자 2 42:46
네 그것만

참석자 1 42:47
이것만 이야 그지 이건 필요 없을 것 같고

참석자 2 42:50
네 다 제네.

참석자 1 42:51
이것도 필요 없다. 그렇지 다 필요 없다. 필요 없어.
그냥 서브 스크랩 하는 거야. 오케이 했어. 데이터 키 받았어.
그러면 이걸 가지고 아까 매핑해서 노드를 찾아온다 그지 그리고 셋 데이터 셋 데이터야 그러면은 이거는 뭐야?
이게

참석자 2 43:11
원래 이름이 세벨류였는데

참석자 1 43:13
밥 먹어.

참석자 1 43:28
그냥 이거 셋을 다 쪼갤 건지도 그러니까 이거 어쨌든 상태 지금 노드별로 스테이트가 다르단 말이야.
가질 수 있는 스테이트 형이 다르잖아. 코드형과 날짜는 다르잖아.
맞습니다. 그거를 어떤 식으로 할지 인터페이스를 정해야 돼.
셋 데이터 셋 리도니 셋 뭐 그 하나 스테이트별로 다 쪼갤지 아니면 오브젝트 그러니까 스테이트를 오브젝트형으로 받을지 그거 제네릭은 어디에 들어갈지 형 그러니까 스테이트 형은 또 어디에 넣을지 이건 민영이가 고민하고 민영아 그냥 멍 때리고 있는데 지금 어떻게 할지 생각하고 있었고 생각하고 있다고 일단 오케이 알았어.
잠깐만 맞아. 그치 데이터 바꿨어 그러면은 뷰 모델 바꿨어.
그럼 이거는 누가 하는 거야? 네가 하는 거잖아 뷰 모델이요 뷰가 이벤트로 내 스테이트를 바꾸는 거

참석자 2 44:31
그건 아직 고민 중입니다. 왜냐하면 여기 안쪽에서도 이 스테이트를 어떻게 다룰지 그러니까

참석자 1 44:35
그 데이터 두 개야 그지 데이터 모델 통해서 바꾸는 거 이벤트 통해서 데이터 바꿔서 스테이트 바꾸는 거 인터페이스 2개 있어야 돼

참석자 2 44:45
응 예. 데이터 관련해서 노드 데이터가 바뀌면 DMC로 바뀌어야 된다라는 거죠.
예.

참석자 1 44:55
그러면은 이거

참석자 1 45:01
오케이 일단 여기까지 이거를 패키지 정리를 좀 다 지우긴 했네.
이거 다 지운 거 아니야? 왜 안 지웠지? 지금 시간이 없어요.

참석자 1 45:18
네 저는 전달드리고 싶은 내용은 다 전달드렸습니다.
다른 사람 뭐 할 얘기 있나

참석자 3 45:27
내가 해야지 내가라도 해야 되겠지.

참석자 1 45:30
민영아 정신은 안 차리나 우선은

참석자 2 45:34
맨 처음에 말씀드렸었던 렉시컬이랑 포드 그러니까 노드랑 컴포넌트 역할은

참석자 1 45:41
오케이 일단 해 알겠어. 그럼 민영이랑 얘기해 봐.
어쨌든 좀 어차피 지금 확정 못 지어 보

참석자 2 45:48
또 하다가 또 다시 바뀔 수도 있는 부분이어서

참석자 1 45:53
일단은 좀 뭐라 그럴까 이게 주기가 내가 저번에 5.6 하면서 좀 느낀 건데 사람이 많아지면 이 뭔가 커뮤니케이션 비용이 너무 늘어나 가지고 그러니까 일단 의도가 전달이 잘 안 돼.
그러니까 이 상황에서는 이해를 했어. 다 막상 가서 하면 엉뚱하게 하고 있어 그런 경우가 너무 많아 그래서 뭔가 얘기를 주저주주저리 하는 것보다는

참석자 3 46:27
따로 저희가 지금 프로젝트를 구성했잖아요.

참석자 1 46:31
고생 안 했잖아

참석자 3 46:32
그러니까 구성 저쪽에 이렇게 플렉션이 되어 있잖아요.
거기에 거기서 이제 개발을 한단 말이에요. 그리고 나서 지금은 ERP로 와서 뭔가 셋업이 있어야 들어가서 그걸 딱 이제 확인할 수 있는 이런 상황이란 말이야.
현재는

참석자 1 46:48
아니 이제 자기가 세팅해야 돼.

참석자 3 46:50
개발해볼게요. 그거는 그쪽에서 세팅을 해

참석자 1 46:53
그쪽 아니 각자 해야지 플렉션 쪽에서 각자 그러니까 5.0 프레임 없이 개발할 수 있어야지 워킹 할 거 하고 알았어.
그건 내가

참석자 3 47:06
그리고 테스트는 하나요? 테스트 어떤 테스트 기능 개발하고 테스트는 그냥 수동으로 이렇게

참석자 1 47:15
코드 테스트 그러니까 지금은 어떻게 그러니까 그런 거 뭐 할 상황이 아닌데 내가 볼 때 해야지.
아니 이거 초기도 아니고 지금 아니 이거 초기라고 부르지도 못하는 수준인데 내가 볼 때 그러니까 그거를 내가 일단 담당만 현재 지정한 거고 담당만 그냥 한 거야.
근데

참석자 3 47:42
왜냐하면 왜 이걸 여쭤봤냐면 다음 주까지 한다고 그랬잖아요.
그다음 주부터 이렇게 뭔가 한 명씩 이렇게 더 붙인다고

참석자 1 47:49
다음 주까지 이걸 해야지.

참석자 3 47:51
아니 그러니까 그거 다 돼.

참석자 1 47:53
내가 이거 보고 얘기는 안 했는데 내가 그러니까 지금 한 건 이거야.
이거 지정했어. 솔직히 브랜치 마스터야 자기 거 아니 그러니까 브렌치로 갈지 아니면 이거 진짜 패키지 이거 쪼갤지는 모르겠는데 어쨌든 각자 마스터라고 보면 돼.
이건 내가 지금 예전에 작년에 워크숍 때 내가 했던 거를 1년 지났어.
지금 현우랑 1년 지났다고 아직도 못하고 있다고 그래서 아까 나 팀이 얘기한 게 이거야.
이거를 자기 왜냐하면 내가 승희한테 이거 던졌어.
그렇지 그럼 여기 이 모듈에서는 어떤 역할을 하고 어떤 것까지 커버 칠지 어쨌든 모든 걸 세팅해야 돼.
각자가 자기 걸 맞게 그러니까 고민을 해야 돼. 이거 아마 레포팅도 데일리 그다음에 위클리로 이거 다 퍼블리싱 할 거거든.
그러니까 이거 다 얘기했던 거야. 내가 워크숍 때 그다음 그렇지 그러니까 일단 요거는 일단은 이미 했어 그냥 그러니까 뭐라고 할까 이 사람이 의지를 갖고 해야 돼.
이거 뭐 해라 해라 백날 이미 수없이 했어.

참석자 1 49:24
이거 5.0이도 많아. 근데 뭐 기술적으로 뭐가 세팅하거나 이런 거 모를 수 있지만 그거는 나나 민호나 물어봐.
근데 어쨌든 이 마스터가 의지를 갖고 해야 돼. 이거 안 그러면 이거 운영이 안 돼.
물론 시스템화 웬만한 건 할 거야. 시스템화 할 거지만 어쨌든 내가 이거를 지정한 이유는 오너십을 가져라.
그래서 아마 담당 이거를 좀 각 팀이던 이게 뭐 조직까지는 아직 모르겠지만 현재는 이렇게 아까 지정했던 그지 어저께 요 사람들이 마스터라고 보면 돼 이렇게 진경 준서 이렇게 그다음에 민영 여기는 아마 월요일 날 좀 붙여줄게.
어쨌든 그렇다. 그러니까 그렇게 인지를 해야 돼.
뭐 다 해주겠지 뭐 없어

참석자 3 50:23
지금 제가 아까 따로 회의를 하면서 지금 두 명인 파트가 두 명이 두 곳이 있고 민영이 혼자 있는 한 명의 파트가 있는 두 명 파트더라도 그중에는 리더는 있어야 되지 않아요 그거는 뭐 알아서 해 알겠습니다.

참석자 1 50:43
그러면 나무 팀장이 하지 아니 뭐 본인이 알 거 아니야 내가 리더라는 생각을 안 하지는 않을 거 아니야

참석자 3 50:50
저희는 가입 바이브 뭐 따로 생각하시는

참석자 1 50:58
아니 지금은 아직 이게 지금 구성도 안 된 상황이야.
그러니까 다음 주까지는 그냥 봐봐 그냥 남은 사람 하나 하고 있는 거야.
물론 그런 건 아니지만 나름 좀 그래도 적임자라 생각해서 지금 포지셔닝을 한 건데 아직 뭔가 구성이 제대로 되진 않았어.
왜냐하면 저게 아직 좀 왜냐하면 저 유학 가는 애들도 있고 거기 좀 여기도 지금 좀 정리가 안 돼가지고 그래서 한 사람씩 붙기는 할 건데 지금 그렇다고 이 역할을 한다고 해서 계속 이 역할을 하지는 않을 수도 있고 그러니까 모르겠어.
일단은 지금 이 멤버는 8월 그러니까 8일까지가 목표야.
어느 정도 내가 원하는 수준의 그림은 나와야 돼.

참석자 1 51:51
그게 목표야 그 이유는 모르겠어 어떻게 변할지 그래서 아까 테스트 얘기하길래 그런 인식을 갖고 있어야 된다는 얘기를 한 거고 그래서 이거 딴 거 그러니까 이거를 내가 잘 모르겠는데 팀별로 그러니까 이 팀을 어떻게 할지도 좀 고민이고 이거를 브랜치로 갈지 근데 패키지 이걸 쪼개 도움은 난 될 거 같은데 지금 모노래프로 해놓긴 했는데 어쨌든 그러니까 최대한 이 패키지 간에 모듈 간의 의존성은 좀 줄이고 독립적으로 배포 개발 운영 좀 맡겨볼 생각이니까 테스트도 마찬가지 그러니까 좀 이거는 한번 아이디어를 내서 좀 한번 회의는 해야 될 것 같긴 한데 그건 그거고 잠깐만 지금 오늘 내가 좀 저도 이게 정리가 안 돼도 나 그냥 지금 계속 얘기하고 있어 그냥 최대한 좀 짧게 가서 공유를 좀 빨리 빨리 해야 될 것 같아서 이게 늘어지면 안 돼서 일단은 지금 내가 어제까지 계속 그러니까 2주 3주째인데 거의 지금 이거 위주로 얘기한 거고 사실 근데 사실 이거는 이거 왜 자꾸 움직이냐 이거 한번 까볼까요?

참석자 1 53:27
그것 때문에 그래 어쨌든 이거는 사실은 하면 돼 지금 하면 되는데 그 앞단 특히 얘네들 어떻게 붙일까에 대한 얘기고 아마 여기다 붙일 것 같아요.
내 생각에는 근데 5.6인데 템플릿이 있는지 아이 셋업일지까지는 모르겠어 애매하긴 해.
근데 그래서 둘 다 준비한다 모르겠어 상황을 저쪽에 TFT 상황을 좀 봐야 돼 그래서 이쪽에 대한 얘기를 좀 하려고 하는 거고 지금은 좀 그래서 열심히 GPT랑

참석자 1 54:18
일단 PrP 그러니까 프리랜더 파이프라인 그러니까 렉시크 오기 전까지 어떻게 할 건가에 대한 얘기 지금 우리는 여기만 주구장창 얘기하고 있어요.
사실은 이게 확정되고 여기야 다 다 여기고 여기 지금 하고 있는 모든 게 물론 일부는 있지만 어쨌든 그러면 이 네 단계에 대한 얘기를 좀 하려고 하고 그래서 첫 번째는 뭐 딴 건 없고 그냥 익스터널 UI 디펜션 두 개 현재 우리는 뭐다 템플릿 기반 5.6 그다음에 셋업 기반 5.0 그래서 ST 빌더가 두 쌍이 두 개가 나와야 돼.
다 해야 될 것 같아. 내 생각에는 그래서 첫 번째는 이거를 먼저 그러니까 순서 이거 동시에는 안 될 것 같고 얘를 먼저 하고 저쪽이 만약에 밀려 5.6이 배포가 밀려 그러면 이것까지 한다.
근데 우리랑 얼추 비슷하게 가 그럼 이걸로 일단 간다.
그러니까 셋업 그러니까 5.6이지만 셋업을 붙여서 간다는 거야.

참석자 1 55:28
그러니까 얘는 그냥 심플 ht 노드로 빌드하는 거 그러니까 아이 셋업 2 ht 노드 템플릿 2 ht 노드 그 레이어가 여기 그래서 외부에 정의된 어떤 메타 정보를 ast 노드로 변환하는 레이어가 있고 그냥 이거는 현재 두 쌍이 있을 것 같다.
그래서 이거를 좀 그러니까 민영이가 한 게 이거야.
사실 그지 5.6의 템플릿이 이건데 내가 볼 때 다시 설계를 해야 돼 그래서 다시 설계해야 되고 좀 디테일하게 해야 될 것.
그래서 이거는 남은 팀장이 이거 형을 확정해 줘야 돼 하고 있지.
이거 플렉션 노드 플렉션 a

참석자 3 56:23
근데 저거는 제가 이렇게

참석자 1 56:25
이미 있다 그대로 하면 돼요.

참석자 3 56:27
테이블 만드는 사람은 테이블 이게 정하는 거고 그 만드는 사람이 정하는 거잖아.
그러네.

참석자 1 56:36
각 어쨌든 그 노드별로 그러니까 큰 근데 헤드부터 바디를 그러니까 내가 그거를 지금 아까 고민을 했는데 아니 이게 지금 이 어디까지 예외로 쳐야 되나가 내가 좀 이래저래 생각을 좀 하고 있었는데 지금은

참석자 3 56:54
뷰 컨테이너별로 쪼개지게끔

참석자 1 56:56
이거잖아. 그러니까 근데 이거 이거 원래 나도 어제는 이걸로 얘기했는데 셋업으로도 할 수 있어요.
그러니까 이 전체를 다 어쨌든 노드 형태로 가야 될 것 같긴 한데

참석자 3 57:09
그러려면은 5.0을 좀 바꿔야 돼.

참석자 1 57:11
5.0 뭘

참석자 3 57:14
5.0이 지금 뷰 모델 헤더와 콘텐츠 포털을 가지고 와서

참석자 1 57:18
그렇지 그거는 버리는 거지 그냥 아예 버리

참석자 3 57:21
아 그 구조는

참석자 1 57:22
버려 그러니까 뷰 모델 제네릭은 다 버린다는 얘기야.
이거 한다는 건 전부 다 이쪽 아까 얘기했던 일로 다 들어와야 돼요.
여기서 다 만들어야 돼. 그러니까 아이 셋업이 통째로 다 들어오고 그 통짜 셋업을 전체 aht 노드 헤더 바디 포터를 포함한 전체 ast를 만들어야 된다.
그러니까 그 방향으로 일단 가야 될 것 같아.

참석자 3 57:48
지금은 저 2번 방향으로 하고 있어서

참석자 1 57:51
처음에는 이거 했다가 내가 이거라고 해서 했다가 나도 가만히 고민해 보니까 왜냐하면 뷰 모델 그러니까 이

참석자 3 58:02
그러면은 이걸 둘 다 다 커버시키려면 지금 제네레이터가 아예 빠져버려야

참석자 1 58:08
어 빠졌나 봐

참석자 3 58:09
폭파 제네리터를 아예 밖으로 빼서 양쪽에서 다 참조할 수 있게끔

참석자 1 58:15
그러니까 일단은 딱 그 콘텐츠만 나오게 하면 돼. 그러니까 헤더 푸터 뭐 이런 거는 빼고 그러니까 상당 하나만 일단 어차피 좀 붙여봐야 되니까.

참석자 3 58:27
네 그러면은 일단은 지금 2번 방향으로 하고 있어서 그래 일단은 2번 방향으로 일단은 나오게 해 거기까지만

참석자 1 58:35
2번 나오게 그러니까 다음 주까지 이거는 좀 그거를 시작할 수 있게끔 바꿀 수는 있어요.
그래서 요거 하나 하고 그다음 이거는 일단은 순위가 좀 밀린다.
후순위 후순위고 그다음 단계 레이아웃 컴포지션 얘는 최적화 단계 그러니까 재구성 단계 그러니까 여기는 이거 기반으로 ast 컨버전 그러니까 그대로 오는 거고 그러니까 이 UI 디펜션 대로 아마 바뀌고 여기는 재가공을 해야 돼.
특히 인쇄할 때 이거를 좀 한 거긴 한데 데이터 모델과 어떤 우리 셋업 정보를 기반으로 데이터 모델이 NG가 나오든 그리드가 n개가 나오든 아마 재조정 과정 재구성 단계를 거친다.
그래서 일단은 이거는 5.0에 일부 들어가 있는 개념인데 민경이랑 민경이라는 게 사실 요 단계거든요.
네 요 단계이긴 한데 그때는 사실 이 정도 그림이 없이 그냥 사실 한 거라서 내 생각에는 그냥 다시 하는 게 나을 것 같긴 해.
설계를 해야 될 것 같아.

참석자 1 59:55
그래서 어쨌든 주로 인쇄 쪽이나 현황 이런 거지 특정한 정보를 기반으로 ast를 재구성한다.
그 얘기야. 그래서 이거는 내가 좀 어쨌든 이거는 지금 얘기할 건 아니고 그래서 어쨌든 룰 기반으로 돼 있어요.
지금 그래서 예를 들면 페이지당 최대 행수가 몇 개야 이런 게 몇 개야 몇 개야 페이지는 몇 개야 데이터 모델 집계했어 안 써 어쨌든 이 룰들을 외부에서 받겠죠.
아이 셋업에 있겠죠 그거를 기반으로 어떤 컴포지션 하는 레이어를 두겠다.
그래서 최종 결과를 뽑아낸다. 그래서 이게 최종 확정 ST 확정 단계 이거는 사실은 용어가 좀 그러니까 프로젝션이라는 의미를 좀 부여할까 뷰 그러니까 데이터 뷰 지금이 아마 데이터 뷰로 되어 있어 좀 봤나 네 시 그 데이터 뷰인가 지금 용어가 마지막 뷰였던 것 같은데

참석자 6 1:01:10
네 그래도 비슷한데

참석자 1 1:01:12
컨테이너 뷰가 어쨌든 뷰라는 용어를 썼었는데 근데 이제 ast라는 어떤 표준 스펙이 있으니까 그냥 ast로 쓰긴 했는데 어쨌든

참석자 6 1:01:26
저희가 이제 뷰 모델이라는 용어는 빠지는 거죠.

참석자 1 1:01:28
빼려고 하고 있어. 지금 뷰 모델이라는 걸 스테이트로 그냥 퉁 치려고 하고 있는데 그러니까 이거 내가 아까 그래서 이거를 이거를 지금 얘는 확정 얘도 확정 근데 얘가 지금 이런 게 있거든요 서치 그러니까 각 메뉴 타입별로

참석자 1 1:01:57
그다음 페이지 런 타임 런타임 정보 지금 페이지 스테이트 모양 이런 게 있어요.
이런 거를 페이지 뷰 모델이든 어쨌든 그러니까 이 고민은 좀 있어요.
이거는 없애려고 하고 있어. 그 뷰 모델 그냥 상태는 스테이트다.
그다음에 데이터 모델은 진짜 어떤 노드에 바인딩된 데이터 모델 그래서 얘도 그냥 페이지 모르겠어 어쨌든 뷰 모델은 좀 제가 볼 때 그래서 최종 합상 그래서 지금 내가 아까 현황 아까 합계 소개 이런 거는 이쪽 설계를 좀 해야 돼서 내가 미루라고 한 거고 이거를 내가 민경이나 좀 이제 불러들여서 하려고 했는데 이게 시기가 지금 조율이 안 돼가지고 아마 다른 사람이 할 수도 있는데 이쪽 설계를 좀 디테일하게 해야 될 것 같고 그래서 일단은 이 레이어를 가지고 당연히 남은 팀장이 하겠지 아니 할 거예요.

참석자 1 1:03:04
아니 본인이 해야 될 거 아니야 그 아니 레이어 그냥 지금은 그냥 어떤 개념적으로만 정리한 거고 근데 어차피 지금 당장은 여기 다 이걸 하는 거니까 당장 큰 영향은 없는데 이거를 그러니까 승현이 쪽 그러니까 이게 이 레이어가 좀 애매한 상황인데 그러니까 여기는 명료한데 지금 이게 어떻게 돼 있냐면 5.0 프레임워크가 있고 이 카운트 애플리케이션이 있어요.
레이어가 지금 두 개로 나눠져 있고 지금 이게 aht로 온다는 얘기는 지금 현재 이 카운트 5.0 프레임워크에 있는 그 모든 컴포넌트부터 헤더 푸터 뭐 이런 것들이 프렉션을 아예 들어와야 돼 그냥 편입이 돼야 돼요.

참석자 1 1:04:00
여기 편입이 돼야 되고 그러면은 지금 있는 5.0 프레임워크의 역할이 이제 거의 없다라고 보고 그러니까 UI 쪽은 남는 거는 대부분 어제 얘기했던 밸류 포매터 이벤트 그러니까 유지 액션하고 익스션 컨텍스트 정도만 남고 나머지는 다 그냥 폭발시키는 거고 근데 이것만 가져오면 그 레이어가 살아 지금처럼 살아 있긴 할 텐데 그러니까 그것 때문에 내가 그거가 너무 애매해 보여서 애매해 보여서 그래서 이거를 다 그냥 끌고 온다 이쪽으로 그래서 지금 현재 5.0 프레임워크에 있는 그 애플리케이션 뷰 커먼 이쪽은 폭파시킨 대 다 제네레이터부터 그냥 폭파 아무튼 그렇게 이해하면 될 것 같고

참석자 1 1:04:59
그래서 지금은 오늘은 뭐 디테일은 없고 요 정도 있다 레이어 그리고 지금 여러분들이 하는 거는 여기다

참석자 3 1:05:07
여기다 레이아웃 기반으로 최종 에이스 구조 엄청 근데 지금 저 1 2 3 4 1 2

참석자 1 1:05:19
5단계잖아요 아니 이거는 단계가 아니고 사실 얘는 산출물이야 이거는 그러니까 인풋 아웃풋 두 단계 두 단계

참석자 3 1:05:31
근데 같이 하지 않아요 저거를

참석자 1 1:05:35
아니 아니라고 같이 할 수 있나

참석자 3 1:05:39
한 큐에 오는데 저게

참석자 1 1:05:44
같이 어떻게 같이 못해 아니 이거는 내가 이거를 실제로 얘네들을 전체 뒤져서 그러니까 이게 속성들이 만약에 합계 소개 플러스 어떤 내 항목의 설정이 아니고 그쪽 위젯의 설정들 위젯에도 설정이 있고

참석자 3 1:06:12
이 두 단계가 뷰 컨테이너랑 데이터 모델 디펜션 가지고 뭔가 지금 뷰 모델 만드는 그거를 하는 거 아니에요 맞죠 2번 3번 그러니까 한 QR

참석자 1 1:06:24
q 이게 된다고 아니 여기서부터는 데이터 모델을 기준으로 이 ast를 만들어내야 되는데

참석자 3 1:06:33
근데 저 에이스트 컨버전이라고 하는 게 결국에 ast 만드는 거 아니에요 그러니까 그게 결국에는 슈 컨테이너 모델 디피니션 가지고 만드는 거니까 그전에서 소개할게를 다 한 거고 저기 들어오면은 이제 그거 가지고 ast를 쫙 만들어내는 어떤 템플릿이냐 뭐냐 이런 건데 결국엔 다 속성으로 와 있을 거니까

참석자 1 1:06:58
아니 이게 인쇄 마일드 엔계 디핀션 상세 품목 그다음에 메인이 되는 업무의 디핀션이 엔개가 쪼아져서 내려오고 그거를 그러면은 합치면서 ast를 만들면서 합치고 데이터 모델 만들고 이렇게 한다고 그게 3.0은 다 그렇게 했는데 그래 왜 그렇게 하지 한 큐에 끝난다고 지금 어떻게 하는데 지금도 똑같거든 이거 지금도 이게 있어 5.0에 이러고 있어 지금 그러니까 아이 셋업 앵겔을 디피니션을 조각 내서 만들고 그거 가지고 데이터 모델을 가지고 또 가공을 하거든.
그러니까 그게 내가 데이터를 찢으면서 ast를 만드는 게 아니고 at가 그러니까 두 단계로 바뀌고 있다며 현재는 맞아 5.6에서 그 인쇄할 때 인쇄할 때 그게 두 번 바뀌거든 한 번 1차적으로 바꿔놓고 다 만들고 다시 아마 조정하는 단계가 있단 말이야.
그때 민경이랑 할 때 그거가 복잡도가 엄청 복잡해 가지고 아무튼 뭐 할 수 있으면 그러니까 이거 그냥 나는 뭔가 복잡하긴 하죠.

참석자 3 1:08:29
복잡하게 하고 싶지 않아서

참석자 1 1:08:31
왜냐하면 그때도 뭐가 있었냐면 이렇게 막 만들고 가다가 이쯤 가서 이 데이터를 보고 다시 만들고 막 이랬어.
맞아 그거를 좀 안 했으면 좋겠네. 그렇게 해야 돼.
안 하게 해야죠. 그러니까 그걸 안 하고 한 번에 할 수 있으면 해.

참석자 1 1:08:51
근데 나는 이 모듈의 역할들을 좀 명확하게 나눴으면 좋겠다.
내가 단순 컨버전 하는 거랑 실제로 어떤 기준 데이터로 재가공하는 거를 안 나눠놓으면 매번 이거 하겠지 다 사실 거의 다 이것만 있으면 되는 건데

참석자 3 1:09:12
그건 알아서 해요. 그건 뭐야?

참석자 7 1:09:18
제가 할 게 아닌데 자꾸 제가 대답을 해가지고

참석자 1 1:09:22
뭐 하는데 그리드 하는 거 아니야? 아니 이거는 그리드 사람이 하는 게 아닌데

참석자 5 1:09:28
부원장님이라고 하신 거 아니에요?

참석자 1 1:09:34
아니 이거 그리드랑 무관해 이거는

참석자 6 1:09:37
근데 이거 약간 단순한 거 그냥 그리드에 값 넣고 이런 거는 할 수 있는데 약간 양식 설정이나 인쇄 같은 데 가면 뭔가 복잡한 게 있어서 따로 뺐을 거예요.
로직이 너무 길어져서 분리만 한 것 같아요. 근데 저도 합쳐도 문제는 없을 것 같은데 제가 작업하면서

참석자 1 1:09:55
아니 나는 문제가 문제를 만들지 않는 건 당연한데 유지보수 그러니까 나는 유지보수 운영의 관점으로 핀트를 두고 있는

참석자 6 1:10:06
근데 이게 분리해서 유지보수의 장점이 있었나요?

참석자 1 1:10:09
분리 이거는 여기에 로직이 단순하네.

참석자 6 1:10:13
뷰 컨테이너 리졸버랑 지금 제너레이터가 따로 있어서 뷰 컨테이너 리졸버는 뷰 컨테이너를 위한 뷰 모델을 만드는 거고 그다음에 제너레이터는 이 만든 뷰 모델의 데이터 모델에 있는 그 정보들을 이렇게 주입시키는 거거든요.

참석자 1 1:10:26
그러니까 그거랑 완전 다른 개념이에요. 이거는

참석자 6 1:10:28
그거 아니에요

참석자 1 1:10:29
이거는 뭐냐면 실제로 데이터는 그냥 하나만 내려와 통 데이터 5천 건이 내려와 근데 보일 때는 n개를 쪼개서 보여주고 그 사이에 또 테이블이 들어가고 그런 걸 재가공하는 단계라는 거야.
그러니까 로우 데이터를 가지고 그대로 기계적으로 바꾸는 게 아니고 그리다가 이거 현재 상태를 보고 또는 어떤 소스를 보고 그다음에 어떤 테이블 노드가 나올 수도 있는 거고 그러니까 그런 것 때문에 복잡하다.
그래서 목적은 당연히 뭐 문제없이 되면 되지만 소스 코드 복잡하게 하지 말라.
나는 첫 번째 그리고 뭔가 아니야 일단 이거는 지금 거를 좀 인쇄가 손을 좀 대야 될 것 같지 않나 그런 것 같습니다.
그러니까 일단 인쇄 기준으로 설계를 좀 그래서 내가 이거는 그냥 지금은 그냥 추상적으로 얘기한 거고 설계를 어차피 해야 그러니까 이쪽 파트를 이쪽 파트를 얘는 명확한 거고 근데 이거 설계해보고 뭐 얼추 되네.
그럼 합쳐도 돼 그거는 전혀 상관없다. 일단 끝 질문

참석자 2 1:12:00
질문 한 가지가 있는데 저희 5.0 액션에 DMC VMC 다 쓰잖아요.
저희 플렉션에서도 똑같이 인터페이스

참석자 1 1:12:11
아니 컬렉션은 DMC 없어 VMC 다 외부야

참석자 2 1:12:15
플렉션 만들 때 셋업으로 asd 만들고 하잖아요.
그러면은 그때 DMC VMC 똑같이 만들어서 줘야 되나요?
그러니까 5.0 VMC가

참석자 1 1:12:27
템플릿 영역이에요. 템플릿 영역 그러니까 플랙션은 이게 그러니까 경계가 그러니까 이거 니가 그 안에서 그러니까 안 해서

참석자 2 1:12:37
뷰 모델 결국엔 5.0에서 VMC로 뷰 모델 조절하잖아요.

참석자 1 1:12:42
VMC로 뷰 모델

참석자 2 1:12:44
바꾸고 하는데 저희 ast가 결국엔 뷰 모델은 아닌 거잖아요.
그러면은 똑같이 VMC

참석자 1 1:12:53
그치 VMC 서브 스쿨을 한 것처럼 DMC VMC 서브 스쿨 해야지

참석자 2 1:13:00
그러면은 지금 셋업 내려오면은 똑같이 VMC DMC 만들어서 만든다 액션에다 준다고 보면 되나요?
그러면 그건 고정인데 우리가 플렉션에서 데이터 싱크 어떻게 할 건지만 맞춰주면은 되는 거네요.
결국엔 뷰 모델은 있고 그 뷰 모델에서 디스플레이 스테이트 어디서 있는지 찾아가지고 그거 바뀌면은 내 거 플렉션 로드에 어떤 거 바꾼다.
이해했어

참석자 1 1:13:25
그지 이거 이거야 똑같아 이제 뷰 모델도 그러니까 여기서 커버 친다.
플렉션까지는 당연히 안 들어온다. VMC DMC는 이 수준으로 커버 쳐줘요.
됐냐 얘네들은 DMC VMC를 알아야 돼

참석자 2 1:13:45
이해했습니다. 근데 ERP 서비스에서 셋 데이터 모델이랑 개 데이터 모델을 가지고 있는 이유가

참석자 1 1:13:51
아니야. 이거 없어 이거 설계하라고 니가 하는 게 그러니까 이걸 설계하라는 거야 이런 역할을 한다.

참석자 2 1:13:56
없애도 되는 거죠.

참석자 1 1:13:59
없어도 되지. 그러니까 이해했지 이거 데이터 셋 하고 개 하는 거 정도를 여기서 그러니까 DMC와 브리치 역할을 한다 이 정도야 이해했습니다.
그 DMC VMC는 유지할 거니까 당분간은 근데 그게 플렉션 프레임워크과는 전혀 개연성을 가지면 안 된다.
그지 알겠습니다.

참석자 1 1:14:31
잘 없습니다. 돈이

참석자 3 1:14:34
한 가지만 더 고민을 하고 싶은데 지금 저희가 ast를 만들어 내잖아요.
테이블 셀으로 아이템 이렇게 만들어 내는데 기존에 이제 샘플로 보여드렸던 거는 ERP에서 플렉션에 대한 노드를 막 이렇게 참조해가지고 플러그인으로 이렇게

참석자 1 1:14:52
잠깐 다시 다시 얘기해 봐. 내가

참석자 3 1:14:54
ast를 만들 이제 5.0에서 ast를 만드는 과정이 있는데 테이블 테이블 테이블 테이블 셋 아이템 등등등을 만드는데 ast는 기존에 이제 샘플로 보여드렸던 거는 5.0에서 이제 그것들을 그 에디터에다 막 넣어줘야 돼.
너가 그 노드를 뭘 쓰는지 알아야 돼라고 해서 이제 5.0에서 이제 플렉션을 참조해가지고 막 이렇게 타입을 가져와서 주입을 해줬단 말이에요.
근데 그 타입조차도 5.0은 굳이 알 필요는 없거든요.
왜냐하면 얘는 ast 만들 당시에 타입이 뭐야 이런 것들을 다 알아요.
그러면 제가 플렉션에 나 이거 쓰니까 노드 줘라고 해서 그냥 이렇게 다이렉트로 꽂아도 되거든요.

참석자 1 1:15:44
난 이해를 못하는데

참석자 3 1:15:46
지금은 5.0에 저희가 플렉션 점 테이블로 테이블 셀

참석자 1 1:15:53
왜 5.0이 있지 그게

참석자 3 1:15:54
그게 이제 샘플이 그렇게 했었었거든요. 이제 근데 그걸 안 하고 싶어서

참석자 1 1:15:58
아니 이쪽으로 옮기라고 그랬잖아

참석자 3 1:16:00
그러니까 이쪽으로 이쪽으로 와 있을 건데 이제 5.0에서 이 에디 플렉션이라는 애를 쓰려면 노드를 이렇게 주입해 줘야 돼요.
그러면은 실제로 그러면

참석자 1 1:16:12
왜 5.0에서 주입을 해주지

참석자 3 1:16:15
그 에디터 이 플렉션이라는 렉시커 점 에디터라는 애를 쓰려면은 이제 주입을 해줘야 되거든요.
이 노드가

참석자 1 1:16:24
이거를 여기 그래서 이거를 여기다가 그게 무슨 말인지는 이해를 못해

참석자 5 1:16:28
에디터 만들 때 기본으로 노드즈라는 거 아까 말씀하신 거 직접 이 에디터에서 뭐 사용하다 취입해주고

참석자 1 1:16:35
그걸 여기서 하면 되지 그러니까 두 단계잖아 어제 얘기한 게 자기가 여기에 우리가 정의해 놓은 거는 여기서 자기가 주입하면 돼.
여기는 지금 이쪽 여기 있잖아 ERP

참석자 3 1:16:46
근데 그 전 시점에 그 노드트를 다 가져가야 돼요.

참석자 1 1:16:50
그러니까 다

참석자 3 1:16:51
등록하래서 그래서 등록은 하는데 얘가 토해줘야 돼요.
누가 지금 플렉션이라는 애가

참석자 1 1:17:01
근데 이해를 못하겠는데

참석자 2 1:17:03
알겠습니다. 넥스트 v5에 저희 지금 이니셜 컴픽으로 에디터 컴퍼넌트에다가 나 어떤 노트 쓸 거야 다 꽂아주거든요.

참석자 1 1:17:12
그러니까 그거를 얘가 컨텍스트가 커버하라는 얘기인데

참석자 3 1:17:16
그러니까요. 그래서 이쪽에서 뭔가 토해주는 애를

참석자 1 1:17:22
아니 여기서 다 알잖아 내가 여기서 어떤 노드를 등록하는지를 다 아는 거야

참석자 3 1:17:28
다 아는데 여기까지 와서 나 뭐 쓰는지 알아라고선 하려면 두 가지가 있는데 그냥 데이터만 꽂는 거랑 아니면 실제로 내가 이 타이틀 쓰고 있어라고 그냥 타임만 이 목록만 이렇게 보내주는 두 개가 있거든요.

참석자 1 1:17:48
아니 그러니까 그게 애초에 여기 나가면 안 되는 거 아니야 나가면 안 되죠.
그러니까 지금 나가 있어서 그런 얘기하는 거 아니야 그러니까 이걸 애초에 내가 나가면 안 된다고 그랬잖아.
들어가야지 당연히 당연히 들어와야지 그러니까 없어.
근데 타입은 참조할 수 있다. 왜 이거 이거 노드 외부에서도 넣을 수 있다.

참석자 3 1:18:08
그러니까 노드를 참조할 수 있는 최소한만 내보내고

참석자 1 1:18:13
아니 진짜 밖에서 자기가 뭐 정리해서 쓰면 쓰는 거지 최소한이 아니라 필요하면 쓰는 거야.
그냥 밖에서

참석자 3 1:18:20
왜 그렇게 하면은 안 하려고 하냐면 필요하면 네가 써라고 하면은 누구는 다 외부에서 쓸 거고 누구는 안 했을 거고 중구난방으로 쓸까 봐.

참석자 1 1:18:31
아니 저거 개발하는 사람 아무도 없을걸

참석자 3 1:18:34
당연히 그렇겠지만

참석자 1 1:18:36
그러니까 그거는 우리가 하는데 전략적으로 선택할 수 있다는 거야.
여기 우리가 진짜 뭐 이상한 페이지 하나 쓰는 노드마다 다 넣어줄 수 없잖아.
그러니까 네 일단 알겠습니다. 그러니까 프레임워크 단에 내보낼 거 내보내고 우리가 관리해야 되는 공통 컴포넌트 정도야 오는 거지 모든 걸 여기에 다 넣을 수는 없어.
그래서 열어 놓으라는 얘기 그래서 공통은 밖에서 당연히 주입할 필요 없다.

참석자 6 1:19:08
또 저 궁금한 게 저희 지금 하는 게 이제 모델 내부를 이제 기준으로 한다고 하셨잖아요.

참석자 1 1:19:15
모델 내부

참석자 6 1:19:16
네 그 페이지 전체가 아니고

참석자 1 1:19:18
전체도 한다.

참석자 6 1:19:19
그러니까 지금

참석자 1 1:19:20
지금 당장

참석자 6 1:19:22
그러면 이게 DMC랑 어떻게 공존하는 거예요? 그러니까 DMC에서 기존에 뭔가 데이터 모델이 들어오면 걔를 통해서 뷰 모델을 만들고 그 뷰 모델 기준으로 렌더링을 하는 구조였잖아요.
그러면 이제 바뀐 구조는 그 데이터 모델을 가지고 노드에 주입을 하고 그 데이터를 그 노드를 기반으로 이제

참석자 1 1:19:39
아니 아마 그러니까 어떻게 했는지 모르겠지만 결국은 지금 5.0도 딱 갈리는 게 섹션 뷰어가 그쪽부터 갈리기 때문에 거기가 아마 바꿔질 것 같아.
내 남은 팀장이 어떻게 했는지 모르겠는데 거기 바꾸 그러니까 여기만 바꾸면 돼요.
한 군데만 그래서 DMC 뷰어가 아니라 플렉션 뷰어 이런 게 있어.
그러니까 맞아

참석자 3 1:20:02
거기서 이제 제너레이터를 지금은 저기서 만들어내는 거요.
지금 똑같이 거기서 만들어낸 거예요. ast 그러니까

참석자 1 1:20:08
그 포인트에 얘 프로바이더가 이제 걷다가 꽂힐 거고 알겠습니다.
네

참석자 1 1:20:17
찬아 됐어.

참석자 1 1:20:23
지금 하고 있냐 그냥

참석자 4 1:20:25
아예 못하고 있는 거예요. 그 말 듣고

참석자 3 1:20:27
넷플러스 이 귀찮아

참석자 1 1:20:29
아니 할 거 없다며 아니 내가 그래서 물어봤잖아. 어제 내가 물어봤어 안 봤어 할 거 없다며 내가 물어봤잖아.
동건이가 다 하고 뭐 링크만 띄우면 된다며 네가 그랬잖아.
일단 이번 주까지는 계속 뭐가 있다 잡이 네 그렇게 말씀 일단 뭘로 8일까지 끝내놔.
알아서 해. 나 분명히 뭐 할 거 없다 그랬어.

참석자 3 1:20:55
아니야 사람 달라고

참석자 1 1:21:00
알았어. 일단 이게 그러니까 아까 내가 할 얘기가 뭐냐 하면 승현이가 얘기했는데 이거를 지금 막 설명하고 이러면 안 돼.
일단은 확정 지어서 와. 최소한 인터페이스를 갖고 와야 돼.
내가 아까 지금 얘기 만약에 얘기를 했어. 그럼 이거 뭐다 뭐 어쨌든 인아웃 정도 인터페이스는 갖고 와야 돼.
그 정도의 확정은 지어와야 진행이 돼. 오케이. 그래서 일단 그러면 오늘 내일 내가 없고 승현이 없고 네 모레는 제가 없습니다.
그러면 잠깐 화요일 그러면 진경 책임 거는 어떻게 돼가고 있어요?

참석자 5 1:21:53
저 지금 헤더 헤드 이름 뭐죠? 헤드 바디 퓨터 그런 노드는 만들어서 그리드까지는 뜨고요.

참석자 1 1:22:04
플로그인 그때 몇 개 플러그인 설계하는 거잖아 플로그인 해야 돼요.
동적으로 네 그렇죠 그거 해야 돼. 그거 LCT 에서 플로그인 목록을 CT 상에 있고

참석자 5 1:22:16
이 뒤에 있는 데이터 타입별로 플러그인이 다를 것 같아서 데이터 타입별 리졸버 만들어서 동적으로 만드는 건 했는데 좀 더 더 할 것 같아

참석자 1 1:22:26
일단 상황만 월요일 날 그러면 진행 상황이나 어쨌든 좀 주기를 짧게 좀 공유를 해야 될 것 같아서 그다음에 민영이 너도 그렇지 월요일 잠깐만 월요일 좀 빠듯하고 내일까지 해 그러니까 이거 어차피 뭐 일단 월요일 날 보고 요 다음 목표까지의 그러니까 8일까지니까 좀 목표를 다시 잡아야 될 것 같아

참석자 6 1:23:05
그래 너 저 뭐 해야 되는데

참석자 1 1:23:09
그리고

참석자 1 1:23:20
기업하는 친구.


clovanote.naver.com