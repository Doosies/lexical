새로운 노트
2025.08.08 금 오전 9:53 ・ 108분 12초
송민형


참석자 1 00:15
안 돼 돼

참석자 1 00:32
시정석이에요. 정석이 여기에요.

참석자 1 00:39
이거 피하려고 그랬지 아니야 아니야 원래 깁스를 하고 목에 나도 보자마자 지금 먹을

참석자 2 00:47
답 안 해야 될 것 같아

참석자 2 01:08
화장실 청소

참석자 2 01:42
근데 이게 들 들어가는구나 FC가

참석자 2 02:15
지금 원래 저희가 이번 주까지 하기로 했던 거는 컴포넌트 개발 환경 구축하고 플로그인 개발 가이드, 컴퍼넌트 개발 가이드 이 3개를 일단은 구축을 해놨고요.
그래서 지금 컴펀드 개발 환경은 플레이 그라운드로 일단은 돌 수 있게끔 해놓은 상황이고요.
그래서 사실 그러면 잠깐만 조금만 더 개발자 만약에 투입이 되면 이 두 개만 하면은 일단은 뜰 수 있게끔 되어 있긴 합니다.
그래서 현재 요 녀석이 이제 플레이 그라운드로 띄워서 데이트 컴포넌트를 그릴 수 있게끔 하고 그리고 이제 갈비 변경을 키우면 같이 이제 변경이 되는 그래서 아마 대부분 이제 컴포넌트 옮겨오거나 그런 것들을 확인해야 돼서

참석자 1 03:06
이미지는 왜 안 나오지

참석자 2 03:07
그거는 이제 좀 맞추기는 CSS나 이런 것들

참석자 1 03:13
휴일도 입히는 건가

참석자 2 03:15
예 홀리디 그거를 넣기는 했더라고요. 플레이 그라운드

참석자 3 03:22
그거 아직

참석자 4 03:24
목업 함수가 연결이 안 돼 있어서

참석자 2 03:27
데이터만 대만 하면 돼 알겠습니다. 데이터만 이제 변경되는 것까지만 일단은 확인한 상태고 이제 플리 기간을 이제 기로 해서 이제 개발을 하면 될 것 같습니다.
그래서 만약에 그러면 개발자가 투입되면은 어디 어디 가서 작업을 해야 되느냐 플레이 그라운드에 가면은 이제 데이터 정의 데이터 정의를 해야 되고 이 데이터 정의된 거는 결국에는 노드가 정한 거라서 노드에 이제 그게 정의가 되어 있고 얘가 이제 그거를 참조를 해서

참석자 1 03:56
데이터라는 게 뭐예요? ast 노드

참석자 2 04:00
네 ast 노드 이거나 스테이트거나 이런 것들을 정리를 해야 될 것 같아요.
그래서

참석자 2 04:13
클리금도 현재 이 데이터를 가지고선 로드를 일단은 할 수 있게끔 해놨고

참석자 1 04:21
그러니까 이 데이터라는 게

참석자 2 04:22
여기 이 데이터이거나 아니면 스테이트 이게 실제적으로

참석자 1 04:29
데이트 아니 아니 내가 말하는 거 이 지금 랜더 옵션이라는 형이 어떤 걸 의미해 이게 지금 뭔데 그러니까 이 데이터 자체가 그냥 스토리북 아니 플레이 그라운드를 위한 데이터인 건가

참석자 2 04:44
그렇죠 스토리북인 거예요.

참석자 1 04:46
그러니까 스토리북을 위해서 정의하는 그러니까 커피그 정보라는 거

참석자 2 04:50
네네네네네네. 근데 실질적으로 이제 ERP랑 다 쓰는 거는 이 두 개를 쓸 거예요.
다 쓰긴 하겠네. 다 쓰긴 해. 요만큼을 쓰기는 해.
ERP랑 같이 쓰는 데이터는

참석자 1 05:08
일단 알았어요.

참석자 2 05:10
그래서 그래서 지금 노드가 그 스테이트랑 실제로 데이트 데이터 스테이트랑 데이터 여기 두 개를 다 정리해놨거든요.
이게 노드

참석자 1 05:22
근데 왜 그러면 ast 노드 플렉션 ast 네는 어디 있는데 플렉션 그건 오픈되는 게 아니야 그냥 네 이 개발자가 플렉션 ast는 몰라도 돼

참석자 2 05:39
컬렉션 asd요.

참석자 1 05:42
그거는 누가 만드는데

참석자 4 05:45
그거 몰라도 되게 저렇게 넣어도 되고 몰라도 되게

참석자 1 05:51
그러니까 왜 일단은 왜 뭘 넣어야 되지? 나는 당연히 여기는 그 노드

참석자 2 05:57
응

참석자 1 05:58
알고 해야 된다고 생각합니다.

참석자 2 05:59
네 그러면은 지금 여기 데이터랑 스테이트 이렇게 하고 있는데 그거를 지금 이런 ast 모양으로 넣을 수 있게도 지금 하려고 하고 있거든요.
그래서

참석자 1 06:11
아니 아니 결국은 데이트 컴포넌트 모드를 만드는 사람이 플렉션 ST 형을 설계해야 되는 거 아니야

참석자 2 06:19
그게 이게 설계한 거예요. 지금 데이터 데이터랑 스테이트를 그 사람이 설계를 한 거예요.
잠시만요. 이걸로 지금 데이트 만든 개발자가 설계를 한 거야.
데이터 스테이트

참석자 1 07:31
이런 게 왜 있어? 이게 뭐지 이런 건 좀 정리를 해야 될 것 같아요.
아니 이게 왜 필요한데 이거 써 민영아 이거

참석자 4 07:46
이거 데이트에서는 사용을 안 할 텐데 5.0에 있던 거를 들고 와서 아예

참석자 1 07:55
그러니까 왜 5.0을 머릿속에 있지? 5.0이 그거는 여기는 없어야 되는 거 아니야 5.0이란 개념을 왜 가지고 있지?
일단

참석자 2 08:07
일단은 그 컴퍼넌트를 그냥 들고 오다 보니까 전체 다 이제 연동할 수 있게끔 들고

참석자 1 08:14
그럼 이거 언제 또 정리해 사람 붙일 건데 만약에 이런 것도 더 랜더 어트리뷰트 이 인식이 있어야 돼 아니요.
그러니까 그걸 끌고 오면은 또 이렇게 할 거 아니야 그러면 이걸 언제 정리하다 일단 5.0은 없어야 돼.
나는 그래서 플렉션 ast 형 이 사실은 얘네들의 어떤 인터페이스야 이 설계하는 사람은 물론 5.0과 그 ST 상의 연결하는 걸 내가 얘기한 게 그 레이어 그러니까 이거 이런 거 굳이 갖고 올 필요 없어

참석자 2 08:57
그러면은 지금 여기에 여기에 이런 타입이 있는 거잖아요.
랜더러는 없겠지만 이 타입이 있는 거잖아요. 그런 것들은 그럼 얘가 따로 정의를 해야 되는 상황인 거죠.
그러면은 기존에 이제 이렇게 만들어져 있잖아요.
그럼 그거를 가져와서 만드는 격이 돼야 되는 건가요?
기존에 지금 얘 같은 경우는 가

참석자 1 09:19
아니 진짜 저게 라이터블이 필요한지 필요한데 이름은 라이터블인 건지 라이터블 했으면 이 데이터 형도 다시 생각해 봐야지.
그러니까 요구 사항들은 당연히 5.0 프레임웍의 기획적인 요구 사항들은 그러니까 분리가 안 돼 있긴 해.
지금 그러니까 기획적인 요구 사항을 안고 가야 된다는 거야.
여기는 라이트 블인데 코드형은 뭐 일자만 내가 허용할 수 있어 연도만 허용할 수 있어.
그런 기능들이 만약에 있다면 그것들을 굳이 이 데이터 구조까지 끌고 올 필요 없다는 거야.
이거를 뭐 데이 먼스 다 쪼갤 수도 있는 거지. 그건 설계하기 나름이야.
그러니까 내가 말하는 건 요는 그렇게 하라는 게 아니라 인식 머릿속에 지워 일단 지우고 순수히 이 데이트 컴포넌트가 제공하는 기능이 뭔가 그거가 먼저 정리돼야지 어떤 기능이 제공할 거라는 요구 사항이 먼저 나와야지.

참석자 2 10:26
근데 그렇게 되면은 지금 작업량이 엄청 많아져요.
어쩔 수 없어. 아니 그러니까

참석자 1 10:31
그거를 대충은 알잖아. 왜냐하면 대충은 알고 내가 얘기하는 건 뭐냐면 다른 개발자들이 이걸 보고 왜냐면 대충 다 안단 말이야.
어떤 기능인지 내가 어떤 기능인지를 다 분석해서 하지는 않을 거야.
대신에 그 형식을 가이드를 만들라는 얘기야. 요구 사항은 어디다 정리해 놓고 이런 것들은 기계적으로 올 수 있지.
당연히 이거 기계적으로 올 수 있겠지 대신 형을 끌고 오진 않겠지 이런 식으로 그러니까 뭐 완전 맨땅의 헤딩은 아니야.
너도 대충 알잖아. 그지 대부분 알 거라서 디테일은 이제 당연히 이제 조율하는 거고 대신에 내가 지금 원하는 건 정확한 용어 형식 위치 그게 중요하다는 거야.
그 내용은 계속 이제 바뀔 수밖에 없잖아. 그러니까 그런 의미야.
이거 뭐 디테일하게 하나하나씩 내가 이렇게 해라 저렇게 해라 하는 건 아니고

참석자 1 11:34
그러니까 나는 첫 번째 ast 형을 그러니까 노드의 형이지 말단 노드의 형이 얘네들이 제공해야 될 첫 번째 인터페이스다.
이거 먼저 무조건 해야 돼. 그리고 스테이트라는 용어 쓸 거야.
그러니까 그것도 정리를 해야겠다. 이거 아까 지금 다시 봐봐 봐.
아까 어디지 그 데이터 뭐야? 플레이 그라운드에 있고 플라이 그라운드 데이터

참석자 1 12:22
이거는 왜 여기 있지? 없어질 거예요.

참석자 1 12:44
이거 그러니까 그 형을 기계적으로 옮겨가면 안 돼 이거 그럼 또 이거 뭔가 봐봐.
데이터 필터 이거 이제 여기 있으면 안 돼. 첫 번째 플렉시 네스티 노드 형 정의 두 번째 이 컴포넌트가 이 컴포넌트에서 디스크치에 대한 커맨드 목록 이걸로 끝내야 돼.
내가 볼 때는

참석자 1 13:21
저렇게 데이터 필터 어떤 내가 컴포넌트가 어떤 이미 정해진 기능들을 주입받아서 도는 개념이 아니야.
이제 그게 아니라 반대인 거야. 이 컴포넌트는 어떤 커맨드를 발생할 거야가 정의되고 그럼 그 기능들은 그 커멘드들을 어떤 커멘드에 어떤 걸 넣을지를 고민해야 돼.
지금 어떻게 돼 있냐면 기능이 확정되고 그 기능 데이터를 전부 다 받아와서 안에서 찌지 붓고 막 그때 한단 말이야.
그거 반대야 계속 얘기하지 마. 커맨드가 하나도 없잖아.
지금 현재는 그러니까 그럼 설계가 제대로 안 된 거야.
지금 우리가 가는 그러니까 렉시컬 기반의 이 개발 방법론이 아예 지금 고려가 안 된 거라고 봐야 돼.

참석자 2 14:15
일단 일주일 동안 이 플레이 그라운드랑 이게 타입이나 이런 거 많이 충돌이 되고 막 빌드 관련된 것도 충돌이 되고 오류가 나고 그래서 그거 관련돼서 아마 작업하느라고 그런 부분 그러니까 얘기는 되긴 했는데 작업이 안 되는 것 같긴 없어.

참석자 1 14:31
오케이 일단

참석자 1 14:42
그러니까 이런 거는 좀 이거는 좀 전환이 돼야겠다.
일단은 그래서 일단은 구조부터 해야 되겠다. 잠깐만 잠깐만 이게 뭐야 그러면은 데이트 컴포넌트가 돼 있는데

참석자 2 14:55
데이터 컴퍼넌트는 현재는 지금 ERP 아까 여기서 말씀드린 그래서 이제 노드를 데이터 정의를 하고 그 노드를 만들면 이제 컴퍼넌트가 현재 여기에 있어요.
그러니까 그래서 저도 오늘 아침에 보긴 했는데 여기에 있더라고요.
그래서 여기 있으면 안 될 것 같다. 그래서 좀 이 컴포넌트가 다른 데 분리가 돼서 나가야 될 것 같다.
ERP는 실제로 뭔가 ERP 서비스

참석자 1 15:25
잠깐만 이건 뭐고 이건 뭔데 이건 뭐고 이건 이게 왜 있어야 되지?
이건 뭐고

참석자 2 15:31
플렉션 노드는 실제로 플렉션에서 제공해 주는 데코레이터 노드 등등을 사용할 수 있게끔 되어 있는 거라서 그 노드를 정의를 해 준 거고 그 노드 안에서 데코레이터 를

참석자 1 15:49
아니 그러니까 왜 이게 가져와야 왜 분리돼 있지 그거를 왜 분리시킨 거지 어디 있지 이거 봐.
그러니까 이거

참석자 2 16:06
얘가 있고 얘가 실제 컴포넌트 포넌트인데 저희 ERP에서 쓰고

참석자 1 16:12
노드는 노드는 ERP에 있다.

참석자 2 16:14
그리고 그리고 노드는 UI에 지금 거기

참석자 1 16:18
그러니까 이게 왜 분리되냐고 의도가 뭔데

참석자 4 16:22
이제 플렉션 UI는 ERP 관련된 거

참석자 1 16:27
아닌데 플렉션 UI가 ERP 관련된 게 아니야.

참석자 4 16:31
그래서 떨어뜨려 놨습니다.

참석자 1 16:33
EC 관련 ERP 관련된 게 아니

참석자 2 16:35
이씨 관련된

참석자 1 16:37
아니라니까

참석자 2 16:38
같이 있어야 돼요. 같이

참석자 1 16:41
이씨가 아니잖아. 그냥 데이트지 그러니까 이씨 데이트가 여기에 뭐가 필요한데 그러니까 이거를 이렇게 인지를 하니까 이렇게 되겠지 또 이렇게 되지.
당연히

참석자 1 17:05
그냥 왔네.

참석자 2 17:06
현재는 그냥 옮겨진 걸로

참석자 1 17:09
이렇게 하면 안 되지. 그러니까 ERP 레이어라고 해서 내가 얘기했잖아.
에디터에도 데이트 컴포넌트가 올라가야 돼. 이제 거래처 코드 컴포넌트가 그러니까 에디터에도 올라가야 된다고 그 말은 뭐냐 하면 ERP가 아니라는 거야.
제공 우리가 제공해 주는 거야. 대신 ERP 그러니까 ERP라기보다 얘는 애플리케이션의 어떤 브리치 역할이니까 이 레이어가 중간 지점의 역할인 거지.
컴포넌트를 이 ERP 수준으로 개발할 일은 없어.

참석자 2 17:50
그래서 이제 그래서 이제 아까 말씀드린 게

참석자 2 18:01
지금 컴퍼넌트를 분리를 해야 된다라고 한 게 지금 ERP는 브릿지잖아요.

참석자 1 18:07
아니 아니 내 말은 이게 그거라고 이걸로 끝나야 된다고 따로 ERP에서 분리하라는 얘기가 아니라 UI 노드가 컴포넌트지 여기서 끝난다고 아니 아니 내 말은 노드와 컴포넌트 파일을 분리하는 건 상관없어.
근데 이 노드 자체가 그 컴포넌트인 거지.

참석자 2 18:29
그렇게 쓴다고요

참석자 1 18:30
개념을 그러니까 레이어를 나눌 이유를 난 모르겠는데 왜 나눠야 되지 그러니까 의도가 뭐냐고 내가 의도를 잘

참석자 2 18:39
컴포넌트는 외부에서 만들어서 그냥 주입될 수 있다.

참석자 1 18:45
아니 그거는 이미 컴포넌트 주입하더라도 실질적으로 내가 있잖아.
노멀라이즈드 디피니션 수준에서 그 형이 결정되겠지 아니면은 컴포넌트를 패치하는 그러니까 프로바이더 수준에서 커버를 쳐줘야지.
결국은 누군가가 이걸 할 거 아니야 다시 아까 두 번째 그 데이터 플레이그라운드 이거 이거 이거 그러니까 결국은 아까 컴파운트가 어디 있지 그러면 이거잖아 얘를 누군가가 프로바이더가 이거를 이런 정보를 필요한 지점에서 하겠지

참석자 2 19:35
이거는 근데 여기다도 안 넣으려고 했었는데

참석자 1 19:38
아니 그러니까 여기에 넣겠다는 게 아니라 어쨌든 최종 컴포넌트를 결정할 시점이 있을 거 아니야 만약에 지금으로 치면은 UI 노드에 데커레이트 함수 내부적으로 그게 될 수도 있고 그러니까 그거는 당연히 설계를 해야지 근데 그 지점에서 컴포넌트 그러니까 프로바이더의 어떤 역할인 거지 이게 어떤 패키지 레이어를 나눈다는 의미가 아니라는 거예요.

참석자 2 20:08
원래는 지금 여기도 그렇게 코딩은 해놓긴 했지만

참석자 2 20:22
이제 컴포넌트가 ERP에서 등록이 됐으면은 그거를 타입을 가져와서 그 컴포넌트 그냥 그릴 거야라고 할 거라서 결국에는 이게 데이트뿐만 아니라 많은 컴포넌트들이 진짜 만들어질 건데 노드들이 만들어질 건데 그럼 결국에는 이 코드 하나로 모든 컴포넌트를 다

참석자 1 20:41
아니 기본은 그냥 내가 얘기하는 건 기본은 여기에 이미 확정됐다는 거야.
내가 이 데이트 노드는 기본적인 컴포넌트는 EC 데이트 컴포넌트가 디폴트인 거고 근데 그 노드 타입으로 누군가가 등록이 되어 있으면 걔를 쓴다는 거야.
오버라이딩 개념이 그 그러니까 그래서 내 말은 어떤 패키지 상의 레이어는 필요 없다.
내 거 아니면 누군가가 주입해 준 거 그러니까 이 프로바이더 상에서 커버 치면 된다.
그래서 막 이 레이어를 나눠서 막 이거 기본은 이 레이어에 있는 거 가져가고 뭐 그런 건 아니다.

참석자 2 21:27
그러면은 지금 ERP에 있는 컴포넌트는 일로 들어와야 된다라는 거죠.

참석자 1 21:32
그래서 이 씨 그 성격을 버려야 돼. 여기는 중립적인 플렉션 중립적인 데이터 이름 기능 다 어디 어디든 엮이면 안 된다는 용어도 그래서 래퍼 타입 이런 건 당연히 오면 안 되지.

참석자 4 21:51
또 이제 ERP 쪽에 놨던 이유가요 이제 ERP 서비스 같은 걸로 통해가지고 ERP 서비스 같은 프로바이더를 통해가지고 이제 컴포넌트가 호출하는 그런 함수들이 있잖아요.
이제 그런 게 이제 5.0하고 맞닿아 있다고 생각해가지고 걔도

참석자 1 22:13
그거는 봐봐. 니가 그 개념이 없어서 그런 거야. 커멘드야 그거는 플로그인 그러니까 컴포넌트 상에서 내가 어떤 ERP 서비스 근데 접근은 돼 실질적으로 프로바이더를 얘네들이 다 그냥 콘텐츠 접근은 돼.
그거는 나는 당연히 된다라고 보고 있어. 일단 ERP 서비스도 여기 플렉션 UI 정도까지 모르겠네.
일단은 사실 플러그인 수준으로만 한다고 했거든.
그래서 나는 컴포넌트는 내가 주입받는 프로 정보 스테이트 플러스 커맨드만 던지고 끝이라고 나는 생각하고 있거든.
그러면은 나머지 주요 비즈니스 얘네들 입장에서의 어떤 ERP 서비스 통해서 만약에 휴일 정보를 받아와야 돼 그지 그런 거는 나는 플러그인이 대체한다라고 보고 근데 그 플러그인이라는 건 당연히 그래서 레이어를 준 거야.
외부에서 넣을 수 있다. 그래서 휴일 갖고 오는 플러그인을 여기다 넣을 수는 없잖아.

참석자 1 23:19
그런 플러그인들은 밖에서 주입을 해줘야 되는 거 대신에 내가 나의 어떤 휴일이 아니라 어떤 그러니까 그것도 의미를 잘 해석해야 돼.
휴일이라고 못 박으면 안 된다는 거야. 첫 번째 우리 ERP가 그 데이터의 어떤 사실은 서식이잖아.
서식은 그냥 휴일로 쓴 거일 뿐이야. 근데 그 휴일이라는 개념이 여기까지 들어오면 안 돼.
얘는 뭐야 그냥 내가 날짜를 날짜별 서식 정보야. 그냥 그거를 휴일로 치부하면 안 된다는 얘기야.

참석자 4 23:56
좀 더 일반화시켜가지고 가져가야 된다는

참석자 1 23:58
그러면은 얘 입장에서는 뭘까 서식 플러그인인 거야.
근데 그 서식 플러그인을 5.0 또는 외부 프레임웍에서는 휴일을 서식 만들어서 줄 뿐이야.
그냥 그러니까 그런 레이어를 잘 성격을 잘 구분해야 된다고

참석자 4 24:17
그럼 그런 이제 만약에 그런 리 그런 이제 홀리데이 인포 같은 거 가져오는 함수의 리턴 값이 만약에 필요한 경우가 있어요.
그러면은 이제 프로바이더에서 꺼내오는 게 아니라 이제 플러그인을 호출하고 그 플러그인에서 프로미스 같은 거를 반환해가지고 그거를 가져와야겠네요.

참석자 1 24:41
그렇지 그러니까 그건 플러그인 설계인 거지 리턴이 아니라 플러그인 뭐 이렇게 되겠지 이거 휴일을 서식 플러그인을 치자.
캘린더에 서식 플러그인이야 그렇지. 그럼 그 플러그인 로딩 될 때 뮤지 이펙트 상에서 API 쏴가지고 아니면 내가 오픈될 때 API가 아니라 그 플러그인은 실제로는 5.0에 있다는 거야.
그러니까 그때 승현이가 질문한 그때 지난주에 얘기했을 때 그러니까 그것도 결정해야 돼.
그러니까 플러그인 자체를 아예 웹에서 등록하게 할 수도 있고 플로그인은 우리가 설계하고 내부적으로 어떤 필요한 포인트를 서비스로 뺄 수도 있다는 거야.
필요한 그러니까 서식 정보를 갖고 오는 서비스 이 수준으로도 뺄 수 있다는 얘기야.
플러그인을 퉁 친다는 건 그 흐름을 우리가 아예 그냥 제어를 안 한다는 의미야.
그냥 다 하라는 거야.

참석자 1 25:44
밖에서 그 API를 쏘는 시점부터 그 서식에 가공되는 로직이 있으면 완전히 다 빼주는 거고 근데 우리가 그 API를 언제 쏘며 어떤 정보를 어떻게 관리할지까지 우리가 제어를 할 거면 플러그인은 우리가 가져가되 거기에 필요한 서비스를 주입 받아야 된다.
그러니까 그 디테일은 있어야지

참석자 1 26:16
알았어 말다 없다. 당연히 없다. 이거

참석자 2 26:19
UI 킷이 없어

참석자 1 26:20
없어 없어 킷이 없다.

참석자 2 26:21
그럼 그러면 어떻게 해

참석자 1 26:23
그냥 넣어 일단 이거 지금 내가 볼 때 의미 있나 이거 있죠 있으면 여기다 넣으라고 그러니까 컴포넌트 이거는 굳이 내가 볼 때 없을 것 같아.

참석자 2 26:34
아니 컴파일이 많이 돼가지고

참석자 1 26:36
아니 그러니까 이게 내가 볼 때 여기가 이 역할을 할 거니까 내가 볼 때는 필요 없을 것 같아.

참석자 2 26:45
최대한 많이 나눠보는 게 컴플레이션

참석자 1 26:48
어지 아니 이제 컴파일을 따로 할 거야. 그러니까 우리 것만 해서 우리는 DTS만 제공할 거야.
이제 플렉션 아예 레파지토리를 뺄 거라서

참석자 2 27:13
그래서 일단은 개발자가 만약에 하게 되면 지금

참석자 1 27:18
아니야 아니야 아니 안 됐어. 아직 못해 이거

참석자 2 27:21
그러니까 좀 정리를 좀 다시 좀 더 해야 되는 그러니까 지금까지 해놓은 거는 저렇게 되어 있어.

참석자 1 27:26
오케이 일단 알았어. 그러니까 환경 정도는 돼 있다.
그래서 그 정도로만 난 이해하면 돼.

참석자 2 27:31
네 좀 더 해성화가 됐어.

참석자 1 27:32
좀 더가 아니라 안 돼 있다.

참석자 2 27:36
안 되겠다.

참석자 1 27:37
잠깐만 이건 뭔데 노드에 생성하는

참석자 2 27:40
지금 저희가 코딩을 하는데 네이밍이 각자 하고 있거든요.
누구는 노드를 만들 때 플렉션이라고 만들고 그냥 프리픽스를 플렉션이라고 만들고 누구는 그냥 그냥이라고 만들고 누구는 뭐라고 만들고 이제 다 각자 이렇게 막 하고 있어요.
그리고 안 해도 보면은 뭔가 그런 지금 파일 만드는 명칭 이런 것들에 대해서 뭔가 명명이 다 공유가 안 되고 있어서 각자 만들고 있거든요.
이게 그래서 그냥 버튼이라고 만드는 사람도 있고 그 리액트 버튼이라고 만드는 사람이 있고 플렉시엄 버튼 노드라고 만드는 사람도 있고 다 각자 만들고 있어서 좀 공유를 좀 해야 될 것 같아가지고

참석자 1 28:23
아니 그건 정해서 공지를 하면 되지 이렇게 해라고 그냥 공유를 하면 돼.

참석자 2 28:30
정하면 돼요. 네 그래서 근데 이제 제가 이제 궁금 이게 지금 회의에 들고 온 이유는 전에 같은 경우는 거의 대부분 다 카메라 케이스 그러니까

참석자 1 28:39
아니 파스칼이지 파스칼 다 파스칼

참석자 2 28:42
그러면 명지

참석자 1 28:43
파스칼 그러니까 일반적으로 파스칼이잖아. 네 이쪽 3개는 사실 명칭 파스칼

참석자 2 28:51
로드 같은 경우는 조금 파스칼로 쏘기는 하죠.

참석자 1 28:54
그러니까 파일명 클래스 명 그냥 파스칼로 통해 파스 그다음에 플렉션 리액트라는 용어는

참석자 2 29:02
안 쓴다고 리액트를 써야 될 것 같아요. 이게 리액트 일부러 제가 써놓은 게 저희가 HTML이나 이제 다른 아이들 그런 뷰나 다른 이제 계속 나오잖아요.
UI 관련된 애들이 나온단 말이죠. 그거에 대해서 뭔가 명확성을 좀 주는 게 나을 것

참석자 1 29:21
알았어 하고 이거 아예 뺀다 인터페이스 인터페이스는 빼요.
아예 아예 뺀다. 아이 아예 없다.

참석자 2 29:31
그러면 지금 이거 이것도 좀 물어보고 싶었던 게 이게 실제로 데이터가 있고 저희가 스케이트라는 말을 지금 두 개를 두 개 정도 를 쓰고 있단 말이죠.
근데 그거 외적으로 이제 뭐가 더 데이터는 뭔데 실제로 달라 달라 프리미티브 타입이 가지고 있는 실제 데이터 데이터 모델에 있는 데이터

참석자 1 29:55
그냥 밸류 그냥 로 밸류 다운 밸류 그럼 그냥 밸류 데이터 너무 추상적이라서 밸류가 밸류를 하면 될 것 같아.
그냥 컴포넌트 입장에서는 밸류로 가면 컴포넌트는

참석자 2 30:09
그냥 밸류로 밸류가 그 데이터 모델에 있는

참석자 1 30:12
값이다. 아니 그냥 값이야. 데이터 모델에 있는 것도 아니고 그냥 값이라고 이해하면 돼.

참석자 2 30:17
그러니까 그 컴포넌트 입장에서는 맨 말단에다가 뭔가 문자를 찍어줘야 되는데 그거는 그냥 밸류다로

참석자 1 30:26
근데 데이터 타입인데 타입이

참석자 2 30:29
그냥 컴포넌트 입장에서만 바라보는 거를 명시

참석자 1 30:33
그러니까 얘도 데이터 타입을

참석자 2 30:35
알기는 해요.

참석자 1 30:36
그러니까 그걸 그럼 밸류 타입으로 가야 된다는 얘기거든.
데이터 타입 대신 어떤 거 그냥 바꿀까 그냥 우리는 데이터 타입 그러니까 데이터라는 용어가 너무 좀 추상적이라고 추상적이라서 좋은 거 아니야 좋다고 아니 나는 오히려 명확하게 좀 왜냐하면 너무 많아 데이터라는 용어가 5.0에도 있고 다 데이터 데이터 데이터 그래서 해봐 얘기했잖아.
네 너 전문가 아니야 플렉션 전문가 아니야 밸류와 밸류 밸류 타입 그럼 밸류 타입으로 바꾼다 검색하기 좋을 것 같아 구분이 되지 않을까?
밸류 타입은 그럼 데이터 타입이 어떻게 가져올 거야?
9.0에 있는 거 갖고 와야 되는 리플레이스 아니지 그냥 그 용어만 우리가 용어만 하는 거니까

참석자 2 31:33
아니라고 판단 검색을 위해서 이게 뭔가 의미가 있는 것도 아니고

참석자 1 31:46
근데 밸류가 맞아 데이터가 데이터가 맞다고 아니 UI 입장에서는 밸류잖아 신경 처리 못하겠다.

참석자 5 31:57
저기에 어떤 정보가 들어가요?

참석자 1 31:58
컴포넌트 꽃의 갑 갑 갑

참석자 5 32:01
근데 다양할 수도 있나요?

참석자 1 32:03
다야 하나 하나 아니 그러니까 값의 형은 다른데

참석자 5 32:08
형은 다르지만 어쨌든

참석자 1 32:10
하나의 뭔가

참석자 2 32:12
갓 시기네

참석자 1 32:13
HTML 상의 그 밸류 인풋 태그

참석자 2 32:18
말단에 들어오는 그 텍스트로 찍힐 수 있는

참석자 1 32:23
아니 그러니까 컨텍스트 상은 밸류야 알았어 그러니까 데이터 아닌가 준석아

참석자 2 32:32
뭔가 밸류가 명확한 건 맞는 거 기존의 데이터를 쓰고 있어서 더 헷갈리지 않을까

참석자 1 32:39
기존 아니 이제는 기존은 저기 앞을 미래를 생각하라고 미래 미래 이미 과거는 이제 지울 거니까 그러니까 미래만 봤을 때 그냥

참석자 6 32:55
밸류가 괜찮은 것 같습니다. 저도 하면서 데이터 밸류 혼용해서 쓰기도 했었고 그랬는데

참석자 1 33:01
아노 데이터

참석자 4 33:02
컴포넌트 입장에서는 밸류가 괜찮은 것 같은데 근데 외부 컴포넌트 밖에서 그 밸류가 좋은

참석자 1 33:10
외부인을 성공하지 마. 이제 그거 좀 머릿속에 좀 잘 나눠야 돼.
이거 그 인식이 없으면 이거 망한다. 철저하게 나눠야 돼.
일단

참석자 6 33:25
근데 이 상태명은 컴포넌트가 들고 있는 상태를 말씀하시는 거예요.

참석자 2 33:29
네 지금 컴퍼넌

참석자 1 33:31
아니 그러니까 이게 왜 나눠져 있지? 잠깐만 아까

참석자 2 33:35
그래서 약간 저것도 좀 고민이기는 했어요.

참석자 1 33:37
이거였나 아까 스테이트랑 데이터가

참석자 2 33:40
이거 이거 이거 이거였어요. 데이터 지금 바꿔 가지고

참석자 1 33:44
이거는 뭐고 이게 뭐야

참석자 2 33:46
이거는

참석자 1 33:48
밸류를 형 아니 그러니까 잠깐만 내가 이 지금 섹션이 어떤 의미인데 상태명을 지금 정하자는 얘기 중에 그냥 예를 든 거야.
그러니까 결국은 내가 이 룰을 정하는 게 목적이잖아.
맞아 그러니까 아예 뺀다. 일단 그러니까 형과 인플리먼츠 이름은 그냥 똑같이 간다.

참석자 2 34:21
그래서 지금 현재

참석자 1 34:22
이거는 뭔데 뭐야 이거는 뭔데 내가 이게 이해가 안 되는데 이게 뭐야 그거야 리액트 버튼 밸류라는 게 어떤 걸 의미야

참석자 2 34:30
리액트 버튼 노드 이거

참석자 1 34:33
얘가 가지는 밸류의 형을 이렇게 표현하고 왜 그럼 이거는 가져가야지 그럼 달러 달러 그 데이터 형을 가져가야지 그래서 내가 한 얘기야.
달러 달러 코드 이거는 들고 와야 돼요. 무조건

참석자 2 34:48
그러니까 그건 값인 거고

참석자 1 34:52
그러니까 법세형

참석자 2 34:54
그 값의 키

참석자 1 34:56
형 형

참석자 2 34:57
각색 키 형은 가져올 거고 형은 가져올게

참석자 1 35:00
키도 그냥 내가 말하는 건 키도 똑같이 가져온다. 달러 달러 코드가 키다.
그러니까 그 달러 달러 코드 키와 그 형은 갖고 오되 걔를 그 형을 밸류 타입이라고 부르겠다는 거야.
기존에 데이터 타입이었는데 이거는 데이터였는데 그걸 부르는 용어를 그냥 밸류로 부른다.
헷갈리긴 해. 그러니까 나도 그냥 데이터 타입 5점만 거 안 가져오면 새로 할 것 같은데 5.0 무조건 가져 5.0 그거는 사실은 못 벌 갖고 무조건 갖고 와야 돼.
일단 그 타입은 그래서 내가 약간 좀 애매한 상황이긴 한데 밸류로 쓰고 싶은데 그 데이터 타입이라는 걸 도 커뮤니케이션 미스가 날 수도 있고

참석자 2 35:58
5.0이랑

참석자 1 35:59
생각하지 마세. 쿠폰은 최소한 데이터 타입 데이터 데이터 헷갈린다.
그러니까 진경 씨도 지금 뭐 뭐 뭐 뭐 하는 거 같아 데이터 같은 거죠.
데이터 그러니까 그거를 못 버리니까 종속될 수밖에 없어.
그럼 용어는 데이터로 한다는 거 아니 그러니까 잠깐만 근데 그건 그건 이게 뭐냐고 나 이게 지금 이해

참석자 2 36:30
아니 이거 버튼 노드 만들었을 때 실제로 버튼 노드 만들면 거기에 이제 상태를 넣어줘야 된다는 거야.
스 지금 프롭스 지금으로 보면

참석자 1 36:40
써 봐 봐 그러면은 버튼 노드의 형을 의미하는 거야.
네 버튼 그러니까 그거는

참석자 2 36:45
버튼 너드의 키 형 말고 키

참석자 1 36:49
키는 그러니까 가져간다니까 그 5.0에 데이터 타입의 이놈

참석자 2 36:54
아니 근데 저희가

참석자 1 36:56
써봐 써봐 내 이해를 못해 그거를 가져와야 된다는 거

참석자 2 36:59
이거를 넣을 건데 실제로 저희가 그런 데이터 모델에 지금 값이 어쩌고저쩌고 있잖아요.
근데 여기에 프로바이디 지금 지금 거는 그냥 비교해서 말씀드릴게요.
프로바이디 제 TS 그러면 숫자를 prod가 여기 이렇게 써 있을 거잖아요.
그리고 데이터 타입 여기 이렇게 있을 거잖아요. 그러면 실제로 이게 컴포넌트에 들어올 때 그러면은 어떤 지금 프롭스로 보면은 프롭스로 보면 얘는 그럼 뭘로 들어올 거야 데이터는 20 20 25

참석자 1 37:38
데이터라니까

참석자 2 37:39
이잖아요. 그러니까 그러니까 이걸

참석자 1 37:41
데이터라고

참석자 2 37:42
그러니까 이게 이게 데이터잖아요. 그래서 그래서 그걸 물어본 거고

참석자 1 37:47
그러니까 출력 그건 뭐냐고 그래서 뭐요? 리액트 버튼 데이터가 뭐냐고

참석자 2 37:51
실제로 이거를 데이터를 정의를 해야 되잖아요. 저희가 인터페이스든 타입이든 정의를 해야 되잖아요.
그럼 이 명칭을 그럼 뭘로 할 거냐 이걸로 할 거냐

참석자 1 38:03
내가 지금 이해를 못하는 이게 지금 이 형이 이거에 대한 형이라는 거잖아.
이 정보에 대한 형을 얘기하는 거야. 지금 저게 왜요?

참석자 2 38:15
이게 이게 이게 지금 안에서 이게 이게 키로 쓰고 있더라고요.
이게 뭐를 뭐를 키로 스테이트를 할 때 이 키를 쓰고 있더라고요.

참석자 1 38:25
왜 왜

참석자 2 38:26
왜 리액트가 그렇게 받아들이고 있어서

참석자 1 38:29
아니 이 세 스테이트는 누가 하는 건데 지금

참석자 6 38:32
노드가 아니다. 노 노드 안에서

참석자 1 38:33
노드가

참석자 6 38:35
그래서 노드가 자기 데이터를 스테이트로 가지고 있는데 그 스테이트의 이름을 지금 어떤 인터페이스 이름으로 할 거냐 에 대해 말씀드린 것 같습니다.
데코레이터 노드 소스로 다 소스 컬렉션 코드 노드나 대시몰로드가 사용하고 있어가지고

참석자 2 39:01
지금 이렇게 쓰고 있단 말이죠. 이게 이게 실제로 어떤 데이터 자기 자기가 이제 어떤 키를 물고 있는 거를 이런 식으로 지금 쓰고 있거든요.

참석자 6 39:12
그래서 코드 데이터 스테이트라고 되어 있는 저 이름을 지금

참석자 1 39:17
그러니까 이게 달라 달라 코

참석자 2 39:19
달라달라 코드

참석자 1 39:20
그걸 갖고 와야 된다고 형도 형 이름 콘서트 그거 다 갖고 와야 된다고 그러니까 그거는 일단 못 벗어날 것 같아.
나는 사실 그거를 5.0에서 나와야 돼. 사실은 그 사실 데이터 타입은 지금 5.0이 있긴 한데 그거는

참석자 2 39:41
그러면은 이렇게 하고 이런 식으로 데이터는 이런 식으로 만든다 버튼 이건 아니에요.
이건 그냥 그냥 여기 버튼이니까 버튼이라고 쓴 거지 아무 의미 없어요.
그냥

참석자 1 39:56
찝찝한데 지금 왜 이래

참석자 2 39:58
이 흐름상 그냥 쓴 거예요. 그래요 알았어요. 그러면 코드로 바꿔줄게 뭔가 명확하게 데이터가 있는 애로

참석자 6 40:07
그럼 내저 플랫폼 타입이 무조건 들어가야 되는 건가요?

참석자 2 40:12
들어가야 돼 무조건 들어가야 돼

참석자 1 40:14
플랫폼 타입에 왜 들어가

참석자 2 40:16
야 저기 HTML 안 만들 거예요 HTML로 만드는 거는 그럼 뭐라고

참석자 1 40:23
HTML로

참석자 2 40:24
잡아요? 그러면 저희가 만약에 코드 형을 만들어요.
리액트 데코레이터 가지고 만드는 애가 있고 HTML로 만드는 애가 있을 거예요.
얘는 타입은 뭐예요? 얘는 타입은 뭐예요?

참석자 1 40:38
아니 그러니까 쟤네들 인플리먼츠의 어떤 클래스 이름이 뭐 달라진다는 건 내가 이해하겠는데 인터페이스가 왜 달라져 그러니까 인터페이스 그냥 형이 달라질 이유가 있어 그러니까 지금 얘는 지금 인터페이스 이름 얘기하는 거 아니야 맞아 구현체 인플 1번 체 얘기 맞아요 맞아요.
상태 상태 맞아요. 그러니까 인터페이스 인터페이스잖아 네 맞아요.
그럼 리액트에서 이게 예를 들게 리액트 코드 노드라는 클래스를 만들 거고 걔는 클래스 명이고 쟤가 인플리먼치할 인터페이스가 있을 거 아니야 내 그 말은 내가 받아들이는 프로스 목록일 거 아니야 그러니까 그게 내가 HTML을 한다고 해서 달라지냐니까

참석자 2 41:18
오케이 그러면은 이거는 상태에는 이건 필요 없다.

참석자 1 41:21
그치 상태는 똑같은데 이제 애를 데이트 아니

참석자 2 41:24
어떤 걸로 구현하느냐

참석자 1 41:26
그러니까 클래스 명은 달라져야 되겠지

참석자 2 41:29
오케이 구현은 다르니까 클래스 명은 이렇게 플랫폼 이걸로 하고 그리고 이제 상태 이런 인터페이스 정의는 플랫폼 없이 그냥 이 노드 타입 노드 타입 이거 노드 노드도 아니고 타입이 뭐 타입도 없어요.

참석자 1 41:41
그러니까 그러니까 뭐 버튼

참석자 2 41:44
이거는 데이터

참석자 1 41:46
나 지금 이해가 안 되네. 데이터가 근데 왜 나오지 저기 데이터

참석자 2 41:51
내 타입 달라달라

참석자 1 41:53
아니 그러니까 노드 타입이 나와야 되는 거 아니야 노드 타입 노드 타입 데이트 그러니까 코드의 스테이트였나 상태라는 게

참석자 2 42:02
코드의 이 스테이트 아닙니다. 그 데이터 스테이트는 아니고 데이터

참석자 1 42:06
이거가 뭔데요? 그 상태명이라는 게 뭘 얘기하 지금 스테이트 이름 얘기하는

참석자 2 42:13
아니요 스테이트 아닙니다. 데이터 데이터

참석자 1 42:15
지금 나만 이해 못하고 있나

참석자 2 42:17
데이터 여기 얘기했던 거

참석자 1 42:19
밸류

참석자 2 42:20
이거 이걸로 하자면서요. 여기 인터페이스명을 이걸로 하자면서

참석자 1 42:23
아니 아니 그러니까 나는 상태명을 그러니까 소스 코드로 봐봐 이걸 의미하는 소스 그거 그게 상태명이라고

참석자 2 42:35
이거 이거 말고 이거 하나 더 있을 텐데

참석자 1 42:37
그러면 스테이트가 데이터밖에 데이터밖에 없어

참석자 2 42:40
이게 이게 이거라고 돼 있는데 실제로 얘 얘가 데이터고 얘가 스테이트예요.
지금 현재

참석자 1 42:48
그러면은 그러니까 얘가 내가 인지하고 있는 일반적인 서식 정보나 그런 스테이트 스테이트 얘는 그럼 데이터를 의미하는 거야 데이터 그러니까 이거 데이터면 데이터지 이걸 왜

참석자 2 43:02
그러니까 아무튼 이거는 그래서 이제 이 명명을 명확히 해야 할 것 같아서 다들 제각각 쓰고 있어가지고

참석자 1 43:10
아니 스테이트는 정했잖아. 랜더링에 필요한 정보 상태로 관리되는 정보가 스테이트 데이터는 그냥 여기서는 뭐라고 해야지 그냥 스테이트밖에 없나

참석자 2 43:27
그래서 일단은 그래서 그것도 약간 궁금하긴 했어요.
왜냐면은 지금 내가 데시마를 봤는데 데시말은 또 포매팅을 또 해야 된단 말이야.
그러니까 걔는 또 포메티드 데이터라는 키를 뭔가 또 만들어서 또 쓰고 있더라고요.
그러면 이게 데이터라는 게 정말 데이터 하나만 있는 건가 데이터만 있고 말씀하신 대로 내가 변할 수 있는 상태가 변할 수 있는 애들을 스테이트 이 두 개의 키로만 가져가는 게 더 맞나 아니면은 이제 부가적으로 더 생기는 거나 등등등 해서 이제 포메티드 데이터 뭐 이렇게 해서 그냥 만드는 게 맞는 건가 이 두 개의 키로만 다 제어가 안 되고 등등등이 있는 건가

참석자 1 44:05
두 개는 무조건 있는 것 같은데 디스플레이 밸류랑 지금 데이터랑 따로 있어요.

참석자 2 44:12
그러니까 등등등도 있는 건가

참석자 1 44:15
알았어 이거 그러니까 용어가 내 이 그러면 알았어 어디지 두 번째 이건가

참석자 1 44:26
그러면은 얘는 아까 저 데이터의 스테이트를 의미한 거였다.

참석자 2 44:31
데이터의 데이터

참석자 1 44:33
코드 데이터 스테이트 지

참석자 2 44:35
아 네네네네

참석자 1 44:37
그러면은 이거 이거 이거

참석자 2 44:41
데이터 스테이트 맞습니다. 그냥 그거는 그냥 그 데이터 타입이 가지고 있는 그 명칭으로 그냥 동일하게 쓴다.
만약에 만들어야 될 일이 있으면

참석자 1 44:50
그럼 내가 나는 지금 딴 얘기한 것 같은데 그러면 내가 한 얘기가 맞아 그러니까 나는 이걸 얘기한 건데 이

참석자 2 44:59
그러니까 그거는 퍼스컬 케이스로 해서 폴랫폼에 따라서 저렇게 만드신다고

참석자 1 45:08
그러면 얘는 얘는 이 스테이트는 그러면은

참석자 2 45:12
그 스테이트는 이제 그 안에 또 있어서

참석자 1 45:15
나는 쟤를 얘기하는 거야.

참석자 2 45:17
그러니까요. 계속 그 말씀을 하셔가지고 그래서 얘도 그럼 플랫폼은 굳이 필요 없다.
왜냐하면 인터페이스니까 인터페이스니까 필요 없고 그리고 그 노드 타입 노드가 어떤 놈인지 그거에 대한 그리고 속성명이 스테이트니까 스테이트 그러면 이런 식으로 된다

참석자 6 45:35
그러면

참석자 1 45:36
저 데이터 타입으로 가야 될 것 같아요. 플랫폼이 없으니까 이렇게 그러니까 데이터 타입의 노드 타입이 아니라 데이터 타입으로

참석자 2 45:42
데이터 타입이요. 이거 이거는

참석자 1 45:45
달러 달러 코드에 스테이트 아마 대부분 그 왜냐하면 저거는 바뀔 수 있잖아 그러니까 뷰 타입에 따라 노드 타입은

참석자 2 45:58
이거랑 좀 비슷하긴 하네요. 얘도 데이터 타입이니까 데이터 입 데이터 타입이

참석자 6 46:13
이렇게 혹시 그러면 노드명도 플랫폼 타입이 필요 없는 게 아닌가라는 생각이 드는데 없어 뭐라고 노드명이랑 파일명 있잖아요.
플랫폼 타입 필요 있지 않나라는 생각이 드는데 왜냐하면은 노드는 그냥 리액트를 쓰는 애인 거잖아요.

참석자 1 46:29
노드는 필요 없고 컴포넌트는 필요하죠.

참석자 6 46:33
근데 그래서 사실 리액트에 의존적인 애는 아닌데 뭔가 리액트 코드 노드라고 하면은 너 리액트에 의존적인 애인 것 같아서 그래서 저희 코드 노드도 그냥 상태는 자기 거인 거잖아요.
그냥 그거를 컴포넌트에 맞게끔 이제 주는 거라서 데코레이트는 사실 HTML로 하든 뷰로 하든 뭐로 하든 사실 쓰는 건 노드라서 플랫폼 타입이 필요 없지 않아.

참석자 1 46:57
그러니까 이거 이거 얘기한 거 아니야 맞아 이렇게 하면 돼 여기에 리액트를 붙이면 안 돼 너도 근데 컴포넌트 이거 뭐야 이거 아닌데 플레이 그라운드 아까 노드가 이게 컴포넌트구나 그러니까 얘가 컴포넌트인데 이걸 내가 넣으라고 했으니까 그러니까 얘는 뭐 리액트 붙여도 상관없다 뭐 이름 뭐 리액트 그러니까 내가 말하는 거 여기에 리액트 코드 노드는 아니다.
선영이 니 얘기도 그 얘기지 네 맞습니다.

참석자 1 47:35
어제 뭐 이거

참석자 2 47:36
아니 아니 면집 고거 맨드

참석자 1 47:40
그러니까 이거 지금 노드 명이 이게 빠진다. 8명 도

참석자 5 47:46
플렉션은 넣었나요?

참석자 1 47:48
플렉션 노드 타입 노드

참석자 1 48:04
근데 그 말단 데코레이터에서 할 컴포넌트는 레이트 붙여도 상관없어 뭐라고 컴포넌트 컴포넌트 노드가 그릴 컴포넌트는 리액트니까 걔는 뭐 리액트 해도 상관없다 뭐야 아니 맞아 준서 어떻게 생각해?
리액트 코드 노드가 아니잖아. 걔는 리액트가 아닌데.
아니 언제든지 바꿀 수 있는데 우리가 지금은 리액트로 그렸다가 나중에 HTML로 그리면 뭐 어떻게 되는 거야 그 노드도 바꿔야 되고 이름

참석자 7 48:42
당연히 바뀌죠. 저희가 많이 잘 봐요.

참석자 2 48:46
왜 제가 해봐

참석자 1 48:48
얘기해 지금 입이 지금 되게 빨리 나와가지고 얘기해 봐.
그러니까 그러니까 이 얘기해 봐.

참석자 2 48:55
얘는 분명히 데코레이터라고 아까 좀 전에 말씀하신 거랑 일맥상통한 게 얘는 리액트를 해도 돼잖아요.
왜 리액트니까 리액트니까 하잖아요. 얘는 뭐예요?
데코레이터는

참석자 1 49:10
아니 데코레이터는 리엔트 컴포넌트를 랜더링 한다라는 프로토콜을 내가 그러니까 그 상품은 받았다는 개념이고 여기에는 리액트라는 게 포함되어 있는 거고 그쵸.
근데 이 클래스 명에 리액트 코드 노드라고 하면 안 된다는 거야.

참석자 3 49:31
그거 왜요?

참석자 1 49:32
아니 왜가 아니라 나중에 그러면 리액트를 버리면 얘만 바꾸면 되는데 얘가 왜 바꾸냐고 이거는 정체성이 아니라고 리액트.

참석자 2 49:41
저는 저는 왜 거기다 붙이려고 했냐면 똑같은 똑같은 코드를 HTML도 만들고 리액트도 만들고 똑같은 코드를 다 이걸 하나의 한 군데서 이제 다 만드는 거죠.
그러면 이게 등등등 이제 뭐 뷰도 있을 거고 등등등 있을 건데 그러면 이 명칭 하나로 이게 되나

참석자 1 50:01
되지 돼요. 당연히 될 수 있지. 네. 그럼

참석자 2 50:06
오케이 무슨 말인지 알았어요

참석자 1 50:09
아니 아니 잠깐만 이거 지금 오해가 있네. 나 무슨 말인지 알았어요.
오케이 얘를 얘를 세 가지 보

참석자 2 50:16
아니 결국 결국에는 우리는 제공하는 게 하나밖에 제공 안 하는 거예요.
리액트면 리액트 HTML HTML

참석자 1 50:22
그게 봐봐 봐 이 노드별로 선택한다라는 의미야. 그게 다르다고 내가 어떤 노드는 뷰로 만들고 어떤 노드는 HTML 만들고 어떤 노드는 리액트인 거지.

참석자 2 50:35
그러니까 나는 나는 코드형을 3개로 다 제공하고 싶은데 네가 입맛에 맞춰서 그냥 써 이걸 하고 싶은 건데 근데 그렇게 안 하신다는 거죠.
그러니까 오케이 그거 할 필요가 없죠. 그렇게 안 하시겠다라는 저는 이제 그렇게까지 할 마음이라서 그렇게 얘기를

참석자 1 50:52
그러니까 그 말은 뭐냐면 이 세트가 세 번씩 나와야 된다는 거야.
그러니까요. 뷰용 그러니까 로드 HTML용 리에트 용이 세트로 3개가 나와야지만 그게 가능한 거고 그렇죠 그거는 왜 해야 돼?
그럴 필요는 없잖아.

참석자 2 51:06
디렉터로 만들었어. 너무 느려 갈아치워야지. 근데 기존에 서비스는 해야 돼.
아니 디렉트로 하는 애는 해야 돼. 그럼 HTML을 만드는 만들어야 돼.
이렇게 제공하지는 않는다라는 거죠.

참석자 1 51:19
나는 컴포넌트 웨어만 선택할 수

참석자 2 51:20
그러니까 그렇게 안 할 거면 굳이 네이밍을 저렇게 할 필요는 없어요.
저는 다 제공하려고 해서 그렇게 하려고 했던 거였고 그럼 이게 플랫폼이 굳이 필요 없긴 해요.
그렇게 되면

참석자 2 51:38
근데 그렇게 하더라도 굳이 이름으로 구분할 필요가 있나요?
네이밍 때문에 찾으려고

참석자 1 51:44
찾을 때 아니 그 정도면 찾는 것도 그렇고 그 정도면 엔트리부터 아예 나눠야 돼.
루트북

참석자 2 51:51
찾는 것도 그렇고 타입도 그렇고 왜냐하면 실제로 타입 가지고 찾아지는 거죠.
실제로 돌 때는 그래서 타입도 나눠야 되나 이런 생각을 좀 하긴 했었어요.
왜냐하면 지금은 저희가 코드명 그냥 딱 코드 하나만 딱 이렇게 쓰니까 이게 리액트 코드인지 아니면 HTML 코드인지 모르니까

참석자 1 52:09
아니 된다 바보가

참석자 2 52:11
근데 그렇게까지 안 하신다고

참석자 1 52:12
아니 하더라도 내가 하는 말이 뭐냐면 내가 하는 말이 하면 플렉션 뷰를 만들라는 얘기야.
이걸 만들자는 얘기야 이 수준으로 가야 돼. 그 정도 수준이라 그 정도는 왜냐하면 여기 이름은 똑같아 대신 뭐를 상속받느냐만 다르지.
그 정도 수준이면 레이어가 생기는 거야. 이 노드는 말단 노드를 더 추상화시켜야 돼.
이거 반대가 되는 거 그러니까 이게 리액트인 거 아니지 그러니까 이것만 바꾸면 되지.
똑같이 복사해서 얘는 데커레이터 얘는 플레이션 뷰 노드 그러니까 그 수준으로 돼야 된다는 거.
여기 하나의 패키지에서 모든 걸 커버가 안 되고 나는 뷰를 쓸 거야.
그럼 너는 패키지 수준으로 뷰를 로드하고 그냥 써야 돼.
그게 돼야 의미가 있지. 데이터 구조부터 다 동일하고 정말 랜더링 시점만 선택할 수 있는 거고 근데 지금은 그래서 내가 이 리액트가 그때 계속 있잖아.

참석자 1 53:19
이거 빼야 된다고 그 이유는 뭐냐 하면 얘는 언제든지 바꿀 수 있다는 얘기야.
나는 얘가 어떤 애는 리액트로 렌더링하고 어떤 노드는 HTML로 그릴 수 있어야 돼.
그래서 내가 이 리액트라는 거를 빼라고 한 거야. 지금은 그냥 다 리액트이고 얘는 그럼 또 뭔데 UI는 또 뭐야?
얘는 근데 뭐가 있는 거야? 이게 왜 나눠져 있는

참석자 2 53:47
어차피 리트가 없어질 거예요.

참석자 1 53:49
이거 없어진다고 그러니까 UI만 여기만 있으면 돼.
이게 지금 여기 어디 있는 거지 리액트 있는 거 아니야?

참석자 2 53:57
예. 지금 안 옮긴 거야. 이쪽에도 있어요.

참석자 2 54:05
안 움직이긴 한데 공기 그냥

참석자 1 54:08
이거 이거 아니야 이거네 옮겨놨네. 그냥 데이트만 있어서 지 코드가 없다는 거구나.
안 돼. 알았어. 맞아.

참석자 5 54:18
저 약간 사정 노드 타입 얘기 나와서 말인데 그리드랑 테이블이 지금 이렇게 막 한정돼서 쓰고 있거든요.
그리드

참석자 1 54:26
혼동된다고요

참석자 5 54:27
혼종돼서 쓰고 있어요. ERP 그리드 컬렉션 테이블

참석자 1 54:32
그리드라고 했는데 플렉션도 플렉션이요. 나는 그리드랑 테이블을 나누려고 하는데

참석자 5 54:40
나눠서요. 개념을

참석자 1 54:44
하고 있는 건 그리드고 하고 있는 테이블은 난 정말 테이블 그냥 순수 에디터에 있는 테이블을 난 그냥 테이블로 하라고 그거 섞이면 너무 좀 관리가 힘들 모르겠네.

참석자 5 54:59
지금 여기 플렉션 쪽은 퍼렉션 테이블에 있고 컬렉션 테이블 모드 테이블 로우 노드 샐러드 이렇게 돼 있거든요 그렇게 그렇게 써

참석자 2 55:08
그럼 다 그리드로 바꿔야 될 것 같아

참석자 5 55:15
기존에 지금 플렉션 테이블에 있는 애들 말하는 거죠.

참석자 1 55:19
그러니까 일단은 나는 용어를 둘 다 가려고 했었고 그리드는 그리드고 테이블 테이블로 근데 이게 좀 힘들다 그러니까 합치는 게 낫다 그러면 그리드로 가야 될 것 같은데 그러니까 단순 네이밍 문제면 포함하는 그러니까 포함할 거면 하나로 가야 되면 그냥 그리드로 하면 될 것 같고 근데 그걸 아예 모듈 수준으로 나눈다 그러면은 테이블로 갈 거 근데 내가 봤을 때 어떤 코어는 있어야 될 그러니까 그거 하나로는 안 될 것 같고 내가 볼 때 그리드는 그냥 플로그인이 더 추가된 형태가 돼야 될 것 같다고 그러니까 기본 에디터상에 정말 그 테이블이 있고 그리드는 거기에 몇 개의 플러그인이 더 추가되는 형태로 사실 생각을 해서 나는 그냥 따로 이렇게 생각을 하고 있었거든.
그러니까 하나로 갈지를 먼저 판단해야 되는데 하나로 가기에는 너무 덩치가 엄청 커질 것 같아.

참석자 1 56:29
그냥 단순 테이블 은 사실은 심플한데 거기에 그리드 기능이 들어가기 시작하면 관리가 좀 안 될 것 같아서 그래서 이건 좀 일단은 지금 하는 건 그리드이긴 하거든요.
그래서 그리드로 하고 에디터나 들어갈 때쯤 아마 테이블을 설계를 해야 될 것 같긴 한데

참석자 5 56:56
얘는 약간 플렉션 쪽에 그러면 네이밍을 지금 테이블로 돼 있는 거 싹 다 그리드로 바꿀까

참석자 1 57:01
지금은 플렉션은 그리드인 것 같아요. 일단 바꿀게요.
그 그 했었죠 또 질문 기억이 안 나 내가 써놨네 외부 상태면 기억이 안 나서 이건 뭔데 몰라 일단 이런 거 하나 몰라 지워버

참석자 2 57:25
일단 그렇고 그냥 이거 일단

참석자 1 57:29
아니 그 정도면 그냥 지워 본인이 쓴 것도 지금 기억 못할 정도로 그러니까 왜 필요한 거야 일단 익스터널

참석자 2 57:36
약간 그게 기억이 안 나서 지금 그래 그게 기억이 안 나서 얘기를 해야 되는데 하여튼 이거는 그래서 만약에 지금 개발 환경 개발 환경이나 뭐 그런 게 정해지면은 저희가 지금 지금도 막 그거를 하고 있단 말이야.
5.0이 프로그램을 만들어야 돼. 그럼 저쪽 가서 프로그램 만들고 이쪽 와서 아니 저쪽 가서 인터페이스 만들고 그 왜

참석자 1 58:01
내가 플레이 그라운드만으로 할 수 있어야 된다고 그랬는데 5.0이랑 무관해야 된다.

참석자 2 58:05
그러니까 파일을 우리가 가고 직접적으로 생성하고 있단 말이야.
어디 어디에 5.0에 아니에요 지금 말고 5.0도 그렇고 지금도 저희가 만약에 여기서 저희가 UI에 가서 이게 뭐 이렇게 넣어야 돼.
만약에 코드를 넣어야 돼. 그럼 저희가 컬렉션 코드 로드

참석자 1 58:28
이거 하잖아. 이거 해 스크립 짜면

참석자 2 58:31
그러니까

참석자 1 58:33
그러니까 볼로 플레이트 만드는 거 지금 그 얘기야.
템플릿이라는 게 그거 만들면 되지 그냥 아니 커서 이거 시키면 한 10분 후면 만들어 줄 것 같은데 만들어줄 아니 커서로 이거 템플릿 보일러 벨트 만들어서 스크립트 짜달라고 그러면

참석자 2 58:51
아니 그러니까 지금 지금 뭔가 정해지면 이거를 좀 해야 될 것 같아서

참석자 1 58:54
그러니까 그거는 하면

참석자 2 58:56
왜냐하면 이게 지금 5.0

참석자 1 58:58
그렇고 너무 불편해 그거는 딱 일단 세팅 테스트 테스트 파일 주요 파일들 생성하고 어쨌든 볼륨 플레이트 만드는 거 한다.
근데 뭐 나와야지 규칙인 내지 하나

참석자 2 59:15
그러니까 나오면은

참석자 1 59:16
해야 될 것 같다를 말씀드리는 그거는 너무 불편해서

참석자 4 59:21
템플릿 작업하는 거는

참석자 2 59:22
이게 지금 우리가 뭐 하면은 여기에 만약에 우리 데이트 만들면 컴피그 만들어야 되고 이것들 있잖아 이런 것들 근데 실제로 개발자는 모른단 말이지 인지를 하고 있어야 되는데 아예 그냥 처음부터 파일 만들어지면 기본적으로 이것들이 다 만들어져 있으면 되거든 만들어져 있고 여기다가 다 쓰고 날려버리면 아니면 그리고 여기다 주석 달아서 뭐 해야 된다 라고 하면은 개발자들은 굳이 우리가 교육을 하거나 이럴 필요 없이

참석자 1 59:52
아니 지금도 스리핏 해서 하면 돼 그러니까요. 그러니까 그거는 본인의 의지 문제라고

참석자 2 59:59
그러니까 그렇게까지 해주면 좋지 않나요?

참석자 1 1:00:01
좋지 않냐가 아니라 누굴 찍어서 해라고 하라고 하면 된다고 자꾸 왜 나는 나보고 해달라고 나한테 얘기하고 어제 빌드 들고 나한테 왜 얘기하는 거야?
나 보고 해달라는 얘기잖아 아니 아니야 아니야 그러면 아니 본인이 해서 하면 되는데 왜 나한테 굳이 얘기를 하지 그걸 의도가 아니 그러니까 아니 그러니까 내가 민호 님 했잖아 월요일 날 이거 빌더랑 이거

참석자 2 1:00:38
이 이건 정해지면 해야 될 것 같아요. 정해지면

참석자 1 1:00:41
그러니까 이거는 뭐 만드는 건 안 어려우니까 가이드가 있어야 돼.
디테일이 있어야 돼. 지금 디테일이 내가 볼 때 준석 석 월요일부터 사람 붙여야 되는데 하나도 안 돼 안 돼 거 같아 진짜 일단 이게 다야 아니 이건 이건 없어 이거 가지고 한다고 승현이 네 거는 그거는 어떻게 붙여 서비스 밸리데이터랑 포맷 이런 건 어떻게 개발 그거 개발해야

참석자 6 1:01:19
네 그거 이제 정하면 됩니다. 일단은 유저 액션을 다 빼놨는데 그것만 저희 플로그인 쪽으로 들어오고 로직 흐름만 만들어 놓으면은 사실 밸리데이터 폼에다가 그냥 호출하기만 하면은 될 것 같아서 네 돌아가는 건 다 돼 있습니다.
그냥 위치만 옮기면 되는 거지

참석자 1 1:01:42
그다음에 직면 체입고 후 필요한 그것도 왜 하나도 없죠.
이상하

참석자 5 1:01:46
클라보는 가이드 따로 만들어 따로 따로

참석자 1 1:01:49
저 이거 일단 거죠. 이거

참석자 6 1:02:00
지금 IP가 기억이 안 나가지고

참석자 1 1:02:08
이번 달 못 끝나겠네. 6주 안에 안 되겠는데 이거

참석자 2 1:02:14
그래서 아까 그냥 컴포넌트 그냥

참석자 1 1:02:16
6주가 아니라 4주 남았는데

참석자 2 1:02:17
그래서 컴포넌트를 아무것도 안 만지고 그냥 다 가져오려고 했던 거

참석자 1 1:02:20
그건 안 된다고 그거는 왜 그건 안 되지?

참석자 2 1:02:24
그럼 4주 안에 절대 못 끝나지 않고요. 4주가 지금부터 4주인가요?

참석자 1 1:02:28
다음 주

참석자 2 1:02:29
그러니까 컴파운드 로직이 엄청 많은

참석자 5 1:02:31
스토링을 생각하시는 거예요. 코어 로직들

참석자 1 1:02:34
컴포넌트 한 6개월은 해야지 리팩터링이 아니라 그냥 정리지 정리

참석자 2 1:02:39
정리를 아무리 해도 그럼 로직이 있던 게 나가고 해야 되는데

참석자 5 1:02:43
거기 있는 제품 커맨드로 뺄 거 다 정리하고

참석자 1 1:02:46
그렇지. 그래서 난 4주 한 건데 아니 왜냐하면 사람들을 덧붙이잖아.
한 사람당 자 한 명이 4주다 몇 개 할 수 있을까 한 명이 시간이 부족한 게 아니야 한 만약에 너가 둘이서 한다 치자 4주야 워킹 데이 그러면 20일 그지 그럼 하루에 니가 컴포넌트 1개씩만 해도 40개야 둘이서 하루에 하나만 해도 하루에 한 개 안 된다고

참석자 7 1:03:18
엄청난 기저귀 2 3일 2 3일 정도

참석자 3 1:03:21
하루에 한 개 안 될 것

참석자 1 1:03:22
데이트 좋아 5일에 하나 쳐 일주일에 하나 쳐. 그럼 4개 8개 그지 그거 m 명 붙이면 돼 나눠서

참석자 6 1:03:31
그만큼 계속 들어오나요? 사람

참석자 1 1:03:32
어 내가 그래서 붙이려고 하는 거야. 빨리 끝내려고 근데 안 돼 있잖아 승현아 붙여놨는데 막 이제 와서 막 고민하고 있고 막 안 되고 이러면은 절대 못 끝내.

참석자 1 1:03:52
아니 근데 내가 볼 때 딱 정해졌어. 코드 데이트 데시멀 텍스트 이거 말고는 거의 뭐 의미 없어 없어.
로직은 맞잖아 민영아 코드가 제일 복잡하고 이게 외부 연동하는 게 많아가지고 데이트 대시멀 인풋도 사실 없어.
거의 텍스트가 아니야 그냥 이거 세 개 말고는 거의 없어.
어쨌든 네

참석자 6 1:04:23
우선은 ERP 서비스가

참석자 6 1:04:34
일단은 여기 플로그인스부터는 저희 컬렉션 내부 영역으로 봤고요.

참석자 1 1:04:39
일단 그러니까 걔는 옮긴다는 거지.

참석자 6 1:04:41
네 이게 플렉션으로 들어가긴 할 겁니다. 들어가게 할 거고 결국 플렉션에서 ERP 서비스라는 이름을 사용하는 게 너무 의존적인 것 같아서 여기서는 프레임워크 서비스라고 일단 좀 이름을 지었습니다.
컬렉션

참석자 1 1:04:55
이 IP인데

참석자 6 1:04:56
그렇구나

참석자 1 1:04:57
ERP가 5.0을 의미하는 건 아니야 그렇습니다.
그러니까 플렉션을 가지고 ERP 서비스를 위한 패키지야 니가 지금 플렉션 ERP가 네 맞습니다.
프레임웍은 너무 더 추상적이지 않나 어서 이거는 고민을 해보고 그러니까 나는 ERP를 그런 의도로 지은 거야.
이건 ERP 진짜 ERP 서비스인 거야. 우리가 ERP 서비스를 위해서 만든 패키지야

참석자 6 1:05:27
알겠습니다. 그래서 이름을 변경하도록 하겠습니다.
그래서 지금 밸리 데이트 포맷 그리고 지금도 포맷 밸류를 리포트 해가지고 DMC에 꽂아주고 이제 이런 거 하고 있어서

참석자 1 1:05:41
이거 빼 너의 숙제다. 이거를 누가 억지로 한다

참석자 6 1:05:48
이거를 플렉션 쪽에서 저희 플러그인 쪽에서

참석자 1 1:05:53
씁니다. 그러면 이 로직을 밖에서 주입 받는다는 거야 왜 얘가 그 인터페이

참석자 6 1:05:59
리버트 해 주는 것도 외부에서 밸리데이터처럼 관리를 해 주고 있습니다.

참석자 1 1:06:04
이거 이번에 5.69 할 때는 이거 제거했었어 제거할 수 있을 거야

참석자 6 1:06:12
한번 보겠습니다.

참석자 4 1:06:15
저기 뷰 모드에 따라 가지고 뭔가 리포트 해야 되는 경우가 있어가지고 다시 넣었었던 것 같아.

참석자 1 1:06:23
리버트를 하는 이유는 뭐냐면 포맷팅 된 데이터와 진짜 순수 데이터가 없어서 그래 이걸 리버트를 왜 할까?
처음에 콤마 있는 거 제거하고 빵빵빵 제거하고 그거 하는 거잖아 맞습니다.
근데 그거 내가 원본 데이터를 가지고 있는데 리버트를 할 이유가 있어.

참석자 6 1:06:42
저게 원본 데이터도 물론 가지고 있기는 한데 키보드 입력 왔을 때 새로 입력되잖아요.
그 이벤트 타겟 밸류인 거잖아요. 그럼 거기에 있는 걸로 리포트 해가지고 넣어주고 있기는 합니다.
지금 조직을

참석자 1 1:06:56
그 이벤트의 타겟 밸류를 패치할 때 저걸 먹여서 주라고

참석자 6 1:07:01
아마 5.0에서는 온 체인지 할 때 DMC를 바로 바꿔주지 않고 블러 때 DMC 바꿔주는데 그러면 그때는 이제 체인지 때 계속 쌓이잖아요.
디스플레이 밸류가 그래가지고 블러 때 쌓인 애를 리보트 해서 DMC에 저장해 주려고 지금 되어 있는 것 같습니다.
근데 하려면은 온 체인지 때 키보드 입력받은 거 1 2 3 입력하면 1 받았을 때 바로 DMC에 추가해 가지고 넣어준다던가 아니야 아니야 이거는 이거 따로 얘기해.
이거 알겠습니다. 이거는 공유 좀 해보겠습니다.
알았어.

참석자 1 1:07:30
잠깐만 디스플레이 액션 타입 이건 뭐야 바이 액션

참석자 6 1:07:36
저게 저희 코드나 멀티 라벨 이런 데서 체인지에 의한 건지 버튼 서치 버튼 클릭으로 일어난 건지 를 구분해 주고 있어서 결국엔 어떤 이벤트인지를 구분을 해야 돼서 이게 그 플러그인 단에서 지금 넣어주고 있습니다.
이게 ERP 서비스 쪽에서는 결국에는 그냥 디스패치 해버리면은 어떤 이벤트로 왔지

참석자 1 1:07:58
그러면 이거를 컴포넌트가 플러그인이든 구분해서 콜 한다는 거야.
이거 두 개를 맞습니다. 어떻게 구분하는 데 이게 왜 구분이

참석자 6 1:08:07
그 플러그인에서 만약에 그 버튼 클릭으로 왔으면은 그 커맨드에서 그 커맨드에서 액션 타입을 버튼 서치 버튼으로 넣어서 이 ERP 서비스를 콜합니다.
그 이벤트에 맞춰서 결국에는 저 액션 타입을 넣어줍니다.

참석자 6 1:08:37
네

참석자 1 1:08:38
그러니까 그거 자체가 나는 이해가 안 되는데 내가 얘기했잖아.
아 예 플러그인이야 네 플러그인이다.

참석자 1 1:08:52
일단은 서치 버튼 서치 버튼이라는 커맨드가 첫 번째 그러니까 서치라는 의미가 필요한 커멘드예요.

참석자 6 1:09:03
이것도 고민이 좀 있었는데 결국에는 이게 저희 ERP인 거잖아요.
그래서 ERP에서 코드에 버튼 누르면은 이게 팝업이 뜬다 뭐 이런 게 있는데 결국 그게 기획적인 의도라서 너무 추상화시키면은 저희 개발하시는 분들도 좀 이해가 힘들 것 같아서 오케이

참석자 1 1:09:24
인정 서치는 들어갔다. 그지 그랬을 때 그러니까 이거를 왜 구분해 그냥 이거 파라미터를 더 줘.
디스피치 액션

참석자 6 1:09:35
그냥 디스패치 메소드 하나만 남기고 거기서 페이로드로 서치 버튼 주라는 말씀이신

참석자 1 1:09:39
페이워드로 이거 형을 정해서 왜냐하면 이거 판단을 하기가 어렵잖아.
어떨 때는 이거 해야 되고 어떨 때는 디스패치 해야 되고 그 판단의 기준도 모호하고 그냥 이거인 거야.
그냥 잠깐만 이게 뭐야 서치 버튼 그냥 하나로 가고 이거 페이로드의 형으로 그러니까 하나 저 왜냐하면 저 되게 막 다른 데도 많이 필요할 걸

참석자 6 1:10:08
이렇게 이거 쓰는 거예요. 네 맞습니다. 그래가지고 사실 이건 좀 편의를 위한 래퍼 정도의 느낌이라서 안 그러면 이제 여기서 디스패치 했을 때 여기 들어가고 아이덴티 파일로 들어가고 여기서

참석자 1 1:10:22
액션 타이 액션 타입을 넣어줘

참석자 6 1:10:25
이렇게 직접 다 넣어주셔야 되긴 해서 그러면 이런 식으로

참석자 1 1:10:29
왜냐하면 얘는 사실은 어떠한 잠깐만 그러면 데이터 그거는 컴포넌트에

참석자 6 1:10:42
저희 노드에 들고 있는 데이터 키고 그거를 ERP 서비스로 주면은 거기서 아이덴티파이어라든가 찾아서 준다고 네 찾아서 팝업 호출하고 갖겠습니다.

참석자 1 1:11:01
그러면 아예 안 가져 있다는 거네. 데이터를

참석자 6 1:11:06
플러그인은 모릅니다. 아예

참석자 1 1:11:08
셋업에서 내려주는 그 페이로드 정보가 없다. 그럼 봐봐 봐 어떻게 찾는 거야?
누가 들고

참석자 1 1:11:18
보시면

참석자 6 1:11:21
아마 이게 그 의도가

참석자 1 1:11:23
맞죠? 네 비즈니스 모델 매니저 이게 그럼 항목 노드별로 어떤 메타 정보를 들고 있다는

참석자 6 1:11:34
네 데이터 키에 대응해서 다 알겠습니다. 그러면 통합하는 걸로

참석자 1 1:11:41
알겠습니다. 통합하는 게 나을 것 같아 다시

참석자 6 1:11:49
이번 주 ERP 서비스

참석자 1 1:11:51
아까 인터페이스가

참석자 6 1:11:55
인터페이스가

참석자 6 1:12:06
지금은 이제 이렇게 돼 있는데 말씀해 주신 것처럼 그 겟 밸리데이터 뭐 이거 해가지고 가지고 와가지고 클로그에서 로직 처리해 줄 겁니다.
이거는 DMC 바꿔주는 겁니다.

참석자 1 1:12:19
DMC로 바꿔주는데 왜 서비스를 통해서 보여줘요?

참석자 6 1:12:22
왜냐하면 서비스가 DMC를 알고 있어서

참석자 1 1:12:25
그럼 얘는 안에서 호출하려고 했다는 거야. 이거를 지금 밖에서가 아니라 플렉션에서 쓴다는 거잖아.

참석자 6 1:12:33
플로그인에서

참석자 1 1:12:34
됐습니다. 잠깐 잠깐 그치 펠리 일단은 뭔가 서비스의 레이어이 그냥 위상이 되게 격이 안 맞다.
그지 뭔가 레이어링을 좀 하긴 해야 될 것 같아. 둘 다 섞여 있긴 한데 섞여서 이게 위상이 하나도 안 맞긴 해.
그지 어쨌든 DMC에 넣는 거다. 그럼 셋 밸류를 한 다음에

참석자 1 1:13:12
네 DMC 바뀌었으니까 저기서 노드 거 바꾸시고

참석자 1 1:13:20
그러니까 이게 셋 밸류라는 개념은 아닌 것 같은데 결국은 내가 셋 밸류 그럼 이거는 그러면 시점을 이거 호출하는 건다고

참석자 1 1:13:41
그렇게 한다고 코드 플로

참석자 1 1:14:19
이거를 레이어를 좀 나눠서 데이터 모델 서비스 따로 해서 그냥 알았어.
셋 밸류 셋 밸류 그러니까 결국은 외부 데이터에 이제 싱크한다는 거잖아.
맞습니다. 일단은 데이터 모델은 외부에 존재한다라는 건 일단 전제로 되어 있는 상황이

참석자 6 1:14:42
근데 근데 데이터 모델도 사실 좀 5.0 물론 계속 갈 것 같긴 하지만 5.0 개념으로 좀

참석자 1 1:14:50
아니야 5점의 개념으로 보는 건 아니야. 지금 그러니까 플렉션 ERP의 표준 스펙으로 보고 있어.
모델 데이터 모델을 선택이기는 없을 수 있어. 그러니까 데이터 모델이 외부 데이터 모델이 없을 수는 있으나 어쨌든 스펙 안에 나는 그냥 깔고 있어.
지금 데이터가 그래서 내가 데이터 키를 들고 와야 되나 계속 고민 중이거든.
어쨌든 공식 스펙으로 보고 있다. 데이터 모델 데이터 모델이라는 게 알겠습니다.
그게 안 되면 좀 험난한 길이 왜냐하면 컴포지션 할 때 데이터 모델을 우리가 접근할 수밖에 없거든.
그러니까 그래서 공식적으로 받아들여야 될 것 같고 그래서 그러면 데이터 모델 서비스 정도는 분리를 하는 게 나을까 이게 너무 너무 얘가 좀 포괄적인 역할을 하니까 그래서 이 정도 데이터 모델 비즈 이건 아니잖아

참석자 6 1:16:01
사실 이런 매핑 정보들이 조금 전체적으로 서비스 전체적으로 사용될 수도 있을 것 같아서 왜냐하면 프레임워크 ERP 서비스가 디스패치에 남아 있으면 디스패치에도 써야 되고 데이터 모델 데이터 모델 서비스 빠지면 또 그쪽에서도 이제

참석자 1 1:16:20
근데 이거를

참석자 6 1:16:22
이거는 어떻게 할지 좀 고민을 해 보겠습니다.

참석자 1 1:16:30
그러니까 결국은 정보를 좀 알았어. 이거 나도 좀 이거 안 그래도 이거 이게 여기가 아마 피스 퓨터가 들어갈 자리거든요.
제가 속성을 런 타임에 배치하는 역할이에요. 사실은 아까처럼 밸리데이터니 유저 액션 정보 다 속성이잖아 지 어쨌든 그래서 그거를 패치하는 데라서 얘가 비즈니스 모델이라는 용어보다는 드라마 근데 어트리비트라는 용어도 사실 좀 고민이긴 하거든.
그러니까 플렉션도 어트리비트라는 용어를 쓸 수는 있어.
그거는 좀 일반적인 용어니까 5.0도 쓰지만 그래서 만약에 그걸 받아들이면 아마 어트리비트 리졸버 아니면 어트리비트 패치 그 정도의 역할일 거야.

참석자 6 1:17:28
근데 이제 이 부분도 사실 다른 인터페이스로 좀 빼가지고 서비스 쪽에서 이제 인터페이스 여러 개 나눠서 그거 다 구현할 수 있게끔 좀 그렇게 좀 생각하고 있긴 했습니다.

참석자 1 1:17:46
일단은 이거 좀 지금은 그냥 데이터 모델 서비스 그다음에 이벤트 이벤트 서비스 정도는 빼고 밸리데이터 포미터가

참석자 1 1:18:12
그러니까 쟤네들은 나는 프로바이더 수준으로 아니면 그러니까 이거야 그러니까 이 선에서 커버 칠 수도 있어 어트리비트 리졸버 수준으로 얘네들 내가 현재 나의 데이터 키에 정의되어 있는 밸리데이터가 뭐야 포메터가 뭐야거든 그 정보만 빼내면 로직은 굳이 밖에서 주입 안 봐도 돼.
근데 그지 근데 비즈니스 5.0에도 그 포메트 밸리데이터를 쓰고 있기 때문에 사실은 우리만 쓸 거면 갖고 오면 되는데 여기서도 쓰는 함수라서 그래서 프로바이더가 내가 이거지 그러니까 뭐 밸리데이터 프로바이더다 그러면은 그 안에서 이 피 익스큐티 통해서 나의 밸리데이터 정보 받고 그다음 그 밸리데이터에 맞는 리졸버를 패치해서 주면 되거든 형식을

참석자 1 1:19:19
일단은 이렇게 가 이거 좀 고민 좀 해봐야겠죠.

참석자 6 1:19:24
나누지 말고 일단은 지금 대표

참석자 1 1:19:26
왜냐하면 이것도 아직 정리가 안 됐고 픽스 큐터 그쪽도 좀 이쪽 플렉션 그러니까 좀 옮겨와야 되고 그거 할 때 여기도 좀 다시 정리를 하고 알겠습니다.
일단 이거는 이 정도는 일단 유지하고 데이터 모델이랑 디스패치 두 개만 정리해 그러면 지금 이거는 일단 옮겨올 거고 그렇지 그럼 프로바이더 어떻게 연결해야 돼요?
페이지

참석자 6 1:19:56
거기 플러그인 풀어봐야 돼요

참석자 1 1:19:59
아니 컨텍스트 플렉션 컨텍스트 프로바이더 있을 거 아니야 그러니까 ERP 페이지로 프로바이더

참석자 6 1:20:07
이 ERP 서비스 어떻게 주입하는지요? 알겠습니다.
혹시 그러면 이거 이거 정리하고 이거 이거 통합하고 이거는 일단 냅두는 걸로 보면은

참석자 1 1:20:16
아니 걔는 데이터 모델 서비스를 했다.

참석자 6 1:20:18
대상물 서비스로 들어온다는 말씀이신 거죠?

참석자 1 1:20:20
유저 액션 서비스 데이터 모델 서비스 두 개로 나눈다

참석자 8 1:20:25
알겠어

참석자 1 1:20:25
유저 액션이라는 용어 데이터 모델이라는 용어는 그냥 우리가 안고 간다는 얘기야 인플렉션 알겠습니다.
네 주입은 잠시만 입

참석자 1 1:20:43
섹션 플렉션 섹션 주역 한 번도 다시 봐보지

참석자 1 1:20:57
아니 이건 나중에 이거는 정리가 오케이 이거는 일단 이시고 이거

참석자 8 1:21:04
그러니까 이거는 지금 계좌 주입 오늘은 아직 안 될 것 같아요.
그리고

참석자 6 1:21:11
하셨던 게 포미터 엘리베이터 부분인데

참석자 1 1:21:17
같이 말씀 한번 잡아봐 포인트 한 번 아까 실행하는 거 실행이요.
그냥 뭐 저 서비스에서 콜을 하겠지 뭐 그렇지

참석자 6 1:21:26
화면

참석자 1 1:21:27
아니 아니 일단 저거 정리 좀 하고 로직 구현보다 저 용어나 위치 그 스펙을 정하는 게 중요한 것 같아 일단 구현이야 뭐 하는 거죠 그러고

참석자 6 1:21:45
이제 플로그인 프로바이더 노드 프로바이더는 아직 좀 프로토타입은 됐는데 플로그인 잠시만요.
다 프로토 타입이긴 한데 일단은 유저 액션처럼 여기 커먼에서 정의를 하고요.
그다음에 각 인벤토리 이제 각 메뉴별로 할 수 있도록 했습니다.
그래서 유저 액션이랑 일단 규칙은 똑같습니다. 그래서 자기 메뉴 거 있으면은 자기 거 쓰고 없으면은 커먼 거 쓰고 그다음에 없으면 저희 플렉션 거 제공해 주는 거 쓴다 규칙으로 만들었고요.
그래서 개발자분들께서는 메뉴면은 이제 인벤토리를 여기서

참석자 1 1:22:30
이게 뭐야 이게 왜 아직 이러는 거 아 이게 이게 다 필요해요.

참석자 6 1:22:36
이거 정리를 해야 됩니다.

참석자 1 1:22:38
이거 다 있어야 돼 잠시만요. 얘가 개 스테이트 이 정도만

참석자 6 1:22:43
노드 프로바이더 네 얘는 이제 노드 프로바이더에서 제공해 주는 정의해 줄 수 있는 노드인데 이거는 정리가 필요합니다.

참석자 1 1:22:59
그러니까 랩핑을 한번 이거 빨리 바꿔야 돼. 이름이라도 바꿔 나중에 이거 아니야 아니 아직 여기까지는 시간이 좀 있으니까 정리를 좀 하고 그럼 노드 등록하고 플러그인을 등록한다.
이건 뭐야

참석자 1 1:23:23
그러니까 이것도 갖고 와 보시다. 이거 잠깐만 이거는 왜 이것도 안 나왔어?
데코레이터 이거든 플렉션을 갖고 와야지

참석자 6 1:23:34
플렉션 쪽으로요 갖고 계신 지금 저희

참석자 1 1:23:37
그럼 프로바이더도 참조하겠네. 여기서 프로바이더가 어떤 등록을 해야 될 거 아니야

참석자 6 1:23:43
레지스트리에다가요 네

참석자 1 1:23:45
또 이걸 여기다 파면 안 되고 우리가 관리해야지

참석자 6 1:23:49
저희 쪽에 아직 빌드라든가 이거 빌드도 해야 되잖아요.
빌드 쪽도 해야 되고 동쪽으로 로딩도 해야 되고 그게 그 인프라가 없어서 일단은 5.0에다가 다 만들어 놓긴 했습니다.

참석자 5 1:24:04
걔 플로그인

참석자 6 1:24:06
이게 저희가 데커레이터로 하면은 지금 함수에 데코레이터 붙일 수가 없어 가지고 클래스에만 붙거든요.
근데 저희 플로그인이랑 노드는 플러그인은 함수로 만드는데 이 함수로 만드는 방식을 유지해 주고 싶어 가지고

참석자 1 1:24:23
플로그인 함수로 만들어

참석자 6 1:24:27
그래가지고 흙도 그냥 그대로 쓰고 이러고 있어가지고 그래서 이 데코레이터를 쓰면은 이런 식으로 제공을 해야 될 것 같고요.
아니면은 함수 쪽에서 이런 식으로 해야 됩니다. 그래가지고 이것도 사실 좀 정하긴 해야 되는데 우선은 기존 방식대로 하기 위해서 걔 플러그인으로 그냥 이 플러그인 넘겨줄 수 있도록

참석자 1 1:24:52
저게 데코레이터일 필요가 없잖아 사실

참석자 6 1:24:55
이렇게 해도 상관없습니다. 그렇지

참석자 1 1:24:57
그렇게 해도 될 것 같은데

참석자 6 1:24:59
그러면 그냥 이 방식으로

참석자 1 1:25:01
왜냐하면 저거는 뭐 정해진 거니까 어차피 우리가 정리하면 되니까 그래서 내가 하는 얘기가 이거를 굳이 5.0 프레임워크에 두시면 안 돼.
알았어 일단 이거는

참석자 6 1:25:14
네 이건 근데 저희 쪽 인프라도 좀 해야 됩니다.

참석자 1 1:25:17
아니 그러니까 우리 쪽 인프라에 손대지 말라는 얘기야.
왜냐하면 이거를 외부 프레임워크에 의존하면 안 되잖아.
우리가 다 등록하는 걸 우리가 열어주고 우리가 관리해야지 컬렉션에서 등록하고 빼오고 하는 걸 다 밖에다 둘 순 없잖아.

참석자 6 1:25:35
구현은 이제 밖에서 하지만 등록 레지스트리 하고 그렇게 하는 걸요 이해했어요.

참석자 1 1:25:41
그거는 거기 있을 이유는 없죠.

참석자 1 1:25:49
됐나

참석자 6 1:25:52
예. 구현은 이제 여기서 하시면 되고요. 지금 저희 거 플러그인을 쓰는 관리하는 곳이 이제 여기인데 여기에 플로그인 프로바이더를 주입을 해서 아까 그거

참석자 1 1:26:13
뭐야 필처가 더 나왔어 그러니까 이게 오케이 이건 지금 뷰 모델 쟤네.
일단 하면서 플로그인을 등록해야 되니까 지금 이게 있는 거잖아 그렇지 맞습니다.
이거는 이거는 정리해야 돼.

참석자 6 1:26:32
그 체인이랑 플로그는 가지고 오는 건 이제 여기서 같이 관리를 합니다.
네 노드 프로바이더도 이제 비슷한 방식으로 지금 개발하

참석자 1 1:26:40
이 정도만 이건 어차피 좀 후순위니까 당장 막 여기에 플로그인 등록하지 않긴 할 거거든.
그리고

참석자 6 1:26:52
그럼 노드 쪽 외부에서 노드 만드는 것도 좀 후순위로 되나요?
거기 정리가 좀 많이 필요해가지고

참석자 1 1:26:59
그건 좀 후전이고 플로그인도 그러니까 외부 프로바이더는 대신에 그 프로바이더 그럼 노드 프로바이더도 여기서 호출하겠네 다 밖에 있잖아 지금 컴포넌트 그러니까 내가 어떤 컴포넌트야도 지금 뷰 모델 제너레이터에 있어

참석자 6 1:27:22
컴포넌트 쪽은 잘 모르겠습니다.

참석자 1 1:27:25
네가 아니 그럼 노드 그러니까 노드 프로바이더를 누가 붙여놨는데

참석자 6 1:27:30
노드 프로바이더를 이제 노드 매니저 피처에서

참석자 1 1:27:33
그러니까 노드 매니저 피처는 그럼 누가 호출하면 돼

참석자 6 1:27:36
이거는

참석자 2 1:27:37
제네릿하면서

참석자 1 1:27:38
바뀌어 있잖아 그러니까 나는 그 위치 그러니까 이거를 개발은 둘째 치고 각 프로바이더가 어디서 어떤 역할을 할지가 다 중요한 거거든.
근데 그게 지금 플렉시 안으로 들어와야 돼. 일단 근데 지난주에도 얘기했듯이 막 그게 정리가 안 됐으니 지금 내가 밖에 있는 거라서 네 이해했냐 그러니까 피처도 이거 다 없애야 돼.
피처 없애고 다 없고 결국은 내부적으로 플렉션 ast를 만드는 시점에 레이아웃 컨포지션 할 때 그때 프로바이더가 호출돼야 된단 말이야.

참석자 6 1:28:19
외부에서 주입도 하고

참석자 1 1:28:20
어 주입해 놓은 거를 쓰니까. 근데 지금 아직 그게 없으니 이거를 지금 더 진행하기는 힘들 것 같고 이 정도로만 냅두고 알겠습니다.
일단은 나머지 정리하고 너도 컴포넌트로 가 빨리 해봐야 될 것 같아요.
알겠습니다. 코드들은 너 코드 너 돼 있지 않아 코드 해봐 알겠습니다.
정보 정리하고 알겠습니다. 저 컴포트 몇 개 더 해봐

참석자 6 1:28:49
그러면은 이제 외부에서 이제 코드 플러그인 만들고 하잖아요.
이것도 정리가 좀 필요해

참석자 1 1:28:54
외부가 아니라 내부에 넣어 저 내부에 있어도 돼

참석자 6 1:28:57
메뉴별로 이제 하잖아요. 그러면 이거랑 노드 만드는 거는 일단 후순위로 가이드 생성하는 걸로 좀 보고 있도록 하겠습니다.

참석자 1 1:29:05
코드 플러그인 내부에 있다.

참석자 6 1:29:08
또 블로그인

참석자 1 1:29:09
션 안에 있다가 안에 있다. 기본적으로

참석자 6 1:29:12
아 네네네

참석자 1 1:29:13
이해했지 네 이거 이거 전제로 하셨어요. 다시 해주시는 거

참석자 6 1:29:16
이제 얘가 플렉션으로 빠질 거라 네 저희가 기본으로 만들지만 메뉴별로도 만들 수 있다 이해했습니다.
네 제가 한 거는 다 말씀드리죠. 다 말씀드린 것 같습니다.

참석자 1 1:29:31
잠깐 저는 시간이 있고 진영차 있고 다 열리스에서 봐도 될까요?
네네 다 코드가 다 열려 있어서

참석자 6 1:29:40
알투키 누르시면 프로젝트 옮길 수 있습니다.

참석자 1 1:29:48
중도 셰카 네 지금 보고 있습니다. 잠시 블로그 보고 있어.
아니 잠깐만 어떻게 할 거예요? 지금 그거 해야 되는데 버커스 하고 있는데 니까 시작했나 판반 전문가가 있어야 되는데 반 CRM 전문가 근데 감방 같은 거 컴포넌트도 다시 만들 거고요.

참석자 1 1:30:14
일단 몰라 그냥 파악이 안 돼가지고

참석자 5 1:30:17
일단 네 플러그인 만들었는데 플러그인은 크게 지금 3개로 나눠서 만들었거든요.
이렇게 3개로 혹시 부족할 것 같으면 알려주세요.
그래서 기본적으로 지금 노드나 지금 사용하고 있는 노드에 전혀 상관없이 항상 꽂혀야 되는 플러그인들은 디폴트에 넣게 돼 있고 그리고 노드 추가되는 노드들에 대해서는 각 노드들 리졸버를 타면서 노드 플러그인들을 삽입하게 해놨어요.
그래서 테이블 타입별로 네이밍을 지어넣어서 지금 얘도 이렇게 돼 있는데 그래서 테이블 같은 경우도 로드 플러그인으로 기본으로 베이스 하나 뽑고 근데 이제 포커스 같은 경우도 항상 꽂히는데 여기다 굳이 안 넣으면 로직을 조금 분리하는 게 좋을 것 같아서 그냥 따로따로 좀 넣어놨고요.
그래서 뭔가 어트리프트 상관없이 이 노드를 쓸 때 무조건 뭔가 기능이 있어야 된다 하면은 이제 이런 데다가 다 구현을 해서 넣을 수 있도록 지금 만들어 놨습니다.
이거 꺼도 될까요? 그리고 이제 어떻게

참석자 1 1:31:23
얘는 사실 의미가 없어요 지금

참석자 5 1:31:25
얘요.

참석자 1 1:31:26
이거 내가 볼 때 이거 지금 없어져야 돼

참석자 5 1:31:28
레지스터는 그치

참석자 1 1:31:30
그러니까 그래서 그 실제 플러그인들을 보면 될 것 같아.
플러그인 개발한 내용

참석자 5 1:31:36
실제 그때

참석자 1 1:31:37
실제 플러그인 왜냐하면 얘는 어차피 또 바뀌어야 될 것 같아서

참석자 5 1:31:43
저는 이거 토 글로벌 주모드 이게 어트리비2에 토글로블 주모드라는 애가 있어서 걔를 만나면 생성이 되는 플러그인이고요.
그래서 얘 같은 경우는 개예요. 행을 선택하면 행이 자동으로 추가되는 그 기능이어서

참석자 1 1:32:03
잠깐만 행추가 컬렉션 그리드 토롤라 그

참석자 5 1:32:08
토글러블 리모드가 투어여야 행을 눌렀을 때 그 기능이 동작하고 있더라고 5.0이

참석자 1 1:32:19
그러니까 화살표 얘기하는 거야

참석자 5 1:32:21
이 화살표 말고요. 그냥 셀을 클릭만 해도 행이 추가가 되는데 그 기능 활성화 여부 자체가 저 어트리뷰트 값을 보고 지금 결정하고 있는 것 같아서 저 값으로 메뉴가 있습니다.
그다음에 테이블

참석자 5 1:32:41
모든 시작은 제일 밑에 있어요. 일단 제일 시작이 등록을 해야 되잖아요.
메티스터 그걸 지금 셀렉션 코멘트로 해놨거든요.
그래서 따로 커맨드를 빼지 않았어요. 그래서 기존에 셀렉션 바뀔 때 들어오는 걸로 일단은 매칭은 해놨는데

참석자 1 1:33:08
이거는 그러니까 구현 로직이야 설명하면 되고 그러면 그러니까

참석자 5 1:33:13
주신 서비스로 아까 말씀하셨던 디스패치 어싱크 해서 유저 액션이랑 페이로드 해가지고 여기에는 최대한 서비스 것만 콜하게끔

참석자 1 1:33:25
그러면 뭐 다 비슷하겠죠. 나는 뭐 구현은 어차피 구현한 사람이 어차피 계속 해야 되고 지금 그러면 앞으로 기능들 그때 목록 받았잖아요.
그죠 그 목록을 받고 어떤 플러그인이 필요하고 또 어떤 커맨드가 이 UI로부터 나오는지 그렇죠 그거를 누군가가 설계를 해야 되거든 사람 붙이려면

참석자 5 1:34:00
근데 그게 기능 담당자가 그 5.0을 분석해야만 알 수 있는 정보들 아닌가요?
아니면 한 번에 처음에 다 다 훑어라라는 말씀이신가요?

참석자 1 1:34:10
커맨드는 뽑아줘야 될 것 같은데

참석자 6 1:34:13
그게 아마 기능이라서 사실 그 컴포넌트에서 어떤 어떤 거 써야 되는구나가 곧 코멘트가 되는 거라서 데이터 옮기신다고 그러면 데이터 옮기시는 분이 이거 이벤트 다 콜해야 되는구나 알고 그거에 따라서 이제 커멘드가 좀 결정될 거긴 할 겁니다.
그래서 사실 저희가 커맨드를 만든다라는 거는 데이트에서 어떤 이벤트들이 호출된다라는 걸 다 이제 알고 해야 되는 거라서 그래서 실제로 구현만 맡기게 되는 거죠.
하게 되면

참석자 5 1:34:44
그래서 지금 보면 이게 그리드 기존에 구현했던 그리드 베이스인데요.
얘가 막 뷰 컨테이너 있는 거 다 해서 이제 실제 UI에 표현돼야 될 애들 어트리뷰트들 여기 다 박혀 있는데 이거 하나하나 그러니까 조합해서 뭔가 하나의 기능이 나오고 이 독자적인 기능일 수도 있고 이런데 이런 걸

참석자 1 1:35:04
이거를 다 쪼개서 분석하면 너무 비효율적일 것 같아.

참석자 5 1:35:07
근데 커맨드가 나오려면 이걸 쪼개서 분석할 수밖에 없는 그러면 거기까지는 아니고 그냥

참석자 1 1:35:17
그러니까 아니 뭐 몇 명이서 나무 어떻게 어떻게 할 거야?
그레이 어떻게 아냐 누가 그리드를 잘 알지

참석자 2 1:35:44
그거 다 efa에서 했잖아

참석자 5 1:35:59
기능 나뉘어져 있는 게 이미 커맨드가 난 거 아닌가요?

참석자 1 1:36:02
아니 모르겠어요. 그러니까 뭐 그럴 수도 있고 그거는 이제 확인해 봐야 되는 건데 제일

참석자 1 1:36:43
일단은 그러니까 이거 지금 다음 주부터는 결국은 누구를 투입할 거며 일정 안에 어떻게 하면 이거를 끝낼 수 있을까 인데

참석자 1 1:37:07
일단 민영이 네가 미터로 일단 그리드

참석자 4 1:37:12
지금 하는 거 일단 놓고요.

참석자 1 1:37:14
승현이 네가 다 갖고 와 컴포넌트 어차피 네 거 다 물리니까 알겠습니다.
현호랑 둘이 너는 뭐 하는데

참석자 3 1:37:27
또 잠깐 빠졌다

참석자 1 1:37:28
와 얼마나 짧으면 하루 이틀 길면 모르겠네. 한 4분

참석자 1 1:37:47
일단 데이트한 거 받아서 내가 아까 얘기한 거 있지 ast 플렉션 ast 노드 형 나와야 돼 그다음에 커맨드 목록 그지 그 설계를 해야 돼 그 두 개 그다음에 기능 플러그인도 그렇지 그거 하고 다시 나 따로 얘기하고 그러면은 준석 민영 진경 책임은 꽤 많던데 50개 일단은 입력 위주로 먼저 그러니까 입력 그리드 한 거 일단은 세 명이서 나눠서 일단 좀 진도를 좀 빼봐 봐 이건 좀 해보고 좀 해야 될 것 같아.
입력 그리드 기본적으로 근데 컴포넌트는 올라가는 거예요.
지금 어떻게 되나 두 개 올라와 있어요. 지금 아니 그러니까 너 추가만 하면은 LC 노드 상에 추가만 하면 올라오는 구조는 되어 있는 거죠.
그죠

참석자 5 1:38:53
팀 qi 다 만들어 주셔 가지고

참석자 1 1:39:03
그러니까 이게 입력은 사실 우선순위가 높진 않거든.
그러니까 따로따로 해도 돼 플러그인 정도로 근데 지금 조회나 현황 그러니까 그때 얘기했던 데이터 모델부터 그게 엄청 많아 지금 CRM 쪽 칸반 인쇄 거기가 작업량이 훨씬 많아 내가 봤을 때 그거를 근데 서

참석자 1 1:39:44
다른 데서 또 붙여야 되겠네. 알았어. 그럼 일단 그 그리드 세 개 나눠서 입력 그리드 위주로 일단 하는데 완성해서 정했네요.
근데 뭐 크게 뭐 안 될 이유는 없잖아. 그렇죠 뭐 안 될 이유는 없는데 근데 이런 거는 싱크를 맞춰야 될 것 같은데 지금 보면 유저 액션 아까 승현은 또 다 빼놨는데 또

참석자 1 1:40:30
그러면은 테이블 그러니까 그리드 ast 상에 있다는 거네요.
제가 그렇죠 그리드 ast 그러니까 플렉션 ast 상에 플러그인이 받을 저 프롭 정보가 이미 다 있다는 얘기잖아

참석자 5 1:40:49
ast는 없어요.

참석자 1 1:40:51
지금 뷰 모델 제네

참석자 5 1:40:53
그냥 어트리부트 만들어낸 거 가지고 와서 꽂아주

참석자 1 1:40:56
그러니까 이게 좀 이게 좀 문제인데 이게 지금 밖에 있으면 안 되거든요.
이게 그 이제 그러니까

참석자 5 1:41:06
플렉션으로 들어가

참석자 1 1:41:07
들어가

참석자 5 1:41:08
그러면은 값으로 봐야 되는 게 맞아요.

참석자 1 1:41:10
그러니까 얘를 그러면 결국은 ast 노드 상에 편입시켜야 된다는 얘기네.

참석자 2 1:41:15
에이스 로드 상으로 문다고 쟤를

참석자 1 1:41:17
아니 지금은 넣어야 될 수밖에 없는 구조고 왜냐하면 플러그인이 지금 프로스를 받아가니까

참석자 5 1:41:24
그러니까 이 플러그인이 지금 최종적으로 플렉션 안에서 생성부터 다 해야 되는 건데 생성하면서 저런 페이로드나 아이덴티 파일을 넣어주려면 ST 노드가 그 정보들을 다 갖고 있어야만 되니까 들고 있어야 된다는 말씀이시잖아요.

참석자 1 1:41:40
그래서 그거를 승현이는 서비스를 뺀 거고 아까 왜 ERP 뭐야 비즈니스 모델 프로바이더였나 어쨌든 그 수준으로 그러면 저 데이터까지 뽑아줘야 된다는 얘기고 아니면 LT로 넣어도 돼요.
그러니까 그거는 그러니까 이 레이어가 사실 좀 애매하게 껴 있는데 내가 그때 노멀라이즈드 할 때 얘네들 스펙을 넣어줄 수 있거든 아마 나는 지금 넣으려고 하고 있긴 해.

참석자 1 1:42:45
일단은 용어도 좀 정리하긴 해야 되는데 이게 내가 노멀라이즈드 디피니션 그때 얘기했던 그거를 구성할 거고 아마 이런 식으로 그러니까 아예 셋업 가지고 어떤 기능을 써 그러면은 일단은 그러니까 이것도 고민이긴 한데 이런 형태로 메타 정보를 지금 디펜션 상에는 있을 거거든요.
그럼 얘가 결국은 ast까지 간다 그러니까 ast 만들 때 얘를 어차피 받아갈 거거든요.
컴포지션 할 때 결국 이걸 근거로 어떤 플러그인을 로드할지 그 플러그인에는 어떤 정보를 줄지 그런 정보들을 어쨌든 전달을 할 거기 때문에 근데 그거를 at 그러니까 ast 노드에 다 있어야 되나 굳이 있어야 되나 아니 그러니까 내가 얘기는 플렉션 컴포저 안에서 지금 랜더링이 되잖아 그러면은 그 안에서 플러그인을 로드할 거란 말이지 그렇죠 밖에서 안에서 컴포즈 안에서 안에서 그러니까 그러면 거기에 줄 수 있는 거는 LT 노드밖에 없잖아 따로 있나 configuration 노드

참석자 2 1:44:06
가 있어서 아니 지금

참석자 1 1:44:08
어쨌든 그러니까 그거를 NCT로 갈지 말지는 좀 고민해 보고 그러면 내부적으로 뭔가 어떤 컴포넌트가 로드 되는 시점에 어디선가 데이터를 배치해서 클럽 수를 줄 수 있어야 되잖아.
내부적으로

참석자 5 1:44:31
재수 있으려면

참석자 1 1:44:36
아무튼 그래서 일단은 지금 잠깐 말 나온 김에 아직 정리를 하고 있는 해보고 있는데 용어는 지금 우리 ERP 용어로 일단 맞추고 있어요.
그러니까 뷰 컨테이너 위젯이라는 용어가 있어요.
위젯 이게 뭐라고 보면 되냐면

참석자 1 1:45:23
지금 이거 요 영역 하나 이게 뷰 컨테이너 뷰 컨테이너는 타이틀과 바디와 푸터를 가진다.
이게 기본 뷰 컨테이너 바디에는 앵개에 콘텐츠가 들어간다.
n개의 콘텐츠 그 콘텐츠는 위젯이 하나만 들어간다.
그러니까 릴레이가 3개인데 이거인 거야. 하나의 뷰 컨테이너에 n개의 컨테이너가 들어올 수 있어.
콘텐츠 근데 콘텐츠는 하나의 위젯으로 구성된다.
그 위젯의 의미는 데이터 모델이 바인딩 되는 요소 일단 그렇게 정리했어요.
그러니까 우리는 기획적인 용어인데 그러니까 여기서 보면 양식 설정에서 얘네들이 위젯이에요.
지금 하나하나가 근데 지금은 뷰 컨테이너 하나의 하나의 위젯인데 실제로는 뷰 컨테이너 하나의 엔게의 위젯이 들어올 수 있어.
그리고 하나의 화면에 앵개의 뷰 컨테이너가 들어올 수 있다.
이게 CRM의 기본 구조고 얘를 표준 스펙으로 오려고 하고 있어요.

참석자 1 1:46:41
그래서 지금은 CRM만 그런데 어떻게 될 거냐면 나중에 입력 메뉴 판매 입력 다 마찬가지 여기 타이틀 나올 수 있어.
여기 버튼 넣을 수 있어. 하나의 뷰 컨테이너에 두 개의 위젯이 들어 있는 형태인 거예요.
나중에 입력 양식도 CRM 구조로 다 맞춘단 말이죠.
예정이 그래서 그거를 표준 우리 내가 얘기했던 노멀라이즈드 디피니션 표준 구조로 그걸로 가져갈 거다.
그럼 모든 건 그걸 통해서 CT 노드를 만든다.

참석자 1 1:47:21
어쨌든 그렇다. 이거는 내가 월요일까지 좀 정리해서 근데 월요일 주말에 나오면 하고 안 되면 어쨌든 이거를 지금 해서 붙여야 돼.
준수하고 하려고 그랬는데 어떻게 어떤 걸요? 이거 왜냐하면 이 노멀라이저를 이제 개발해야 돼.
그러니까 아이 셋업 가지고 그건 했던 거야. 인쇄랑 캄반 그래서 소연이랑 준석하고 하려고 그랬는데 뭐 상관없다.
아니 근데 그리드도 붙이긴 해야 되잖아. 일단 끝 이거는 내가 다시 정리를 준비해야 되겠네.
정했어요.


clovanote.naver.com