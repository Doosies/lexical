새로운 노트
2025.08.06 수 오후 1:38 ・ 75분 26초
송민형


참석자 1 00:04
필더 해야지 내가 해야지 뭐 원장님 준석 TP 있어서 그거 할게요.
참석 안 해도 되죠

참석자 2 00:16
믿어 좀 제발 내가 생각했지만 주말에 나가지 아니야 같이 나와 주말에 나와야지.
아이 아 이거 아니네 준서 이렇게 인가? 승현이는

참석자 1 00:34
화장실 가신 거 아니에요? 절로 가셨나? 저 여기 있으시죠?
아까 나오셨는데

참석자 2 00:40
이게 MD가 안 읽히는구나. 그러자 간단한 거 좀 보여줘.
간단한 거

참석자 3 00:49
간단한 건 줄 알고 그냥

참석자 2 00:52
빌더

참석자 3 00:53
아니 아니 빌더는 아니죠. 빌더는 재밌는 거고 그냥 뭐 회의가 회의

참석자 2 00:58
무슨 회의 지금 지금 부르신 거 아니야 아니야 그거는 다 얘기했는데 이게 좀 눈높이가 안 맞아서 나도 이거 왜 내가 좀 설계해 본다고 한 거를 좀 안 되는데 공유를 좀 해야 될 것 같아.
안 되는데 이 앞에 니 뭐 상석에 니 뭐 이 뜨고 안 끄덕이면 되지 안 보이게 끄덕이겠다는 거잖아.

참석자 3 01:23
눈에 가셔야겠네요. 세이빙 가시고 안 보이면 관심도

참석자 4 01:30
승현이랑 얘기했니? 네. 회의 찍고 오세요. 회의 일정

참석자 2 01:36
일단은 이게 정리된 건 아니고 내일까지 내가 해서 좀 공유하려고 그랬는데 일주일 더 줄까요?
어 뭐라고 하는데 잘못 들었나? 지난주에 아니 뭐지 월요일 날 뷰 모델 제너레이터 내가 막 얘기하다가 그거 밖에 있으면 안 된다.

참석자 3 02:06
네네 네네네.

참석자 2 02:07
그래서 ast를 만들어야 된다. 근데 아무튼 이거 지금 왜 지난주는 디펜션 가지고 ast 컨버전 하고 컨포지션 한다인데 사실 이 두 개는 엮일 것 같아 하나로 배치하면서 컨버전 할 것 같고 내가 원래 의도는 얘가 이게 아니고 이거였어.
그러니까 디펜션 노멀로제이션 그러니까 외부 정의 구조를 한 번 다시 정규화하겠다.
그러니까 예를 들면 이거지 지금 아까 진경 책임이 얘기하는 플러그인도 비슷한 맥락이라서 내가 좀 안 됐지만 정리가 공유를 좀 하면

참석자 2 02:55
일단은

참석자 2 03:02
이 과정은 뭐냐 하면 결국은 지금 셋업과 at 사이에 어떠한 표준화된 스펙이 좀 있어야 된다.
왜냐 이제 어디 갔어 이런 지금 현재 우리가 당장 해야 될 게 이거 플러스 이거야.
그 아이 셋업과 템플릿을 동시에 인풋으로 받아야 되는데 지금 현재는 그때 월요일 날 리뷰했을 때 문제점으로 내가 제기한 거 이 ast 만드는 로직이 전부 밖에 있다.
아이 셋업을 가지고 다이렉트로 ast를 노드를 만들다 보니 모든 로직들이 프레임워에 존재하게 된다.
그랬을 때 템플릿 할 때 그럼 또 해야 된다. 똑같은 걸 정렬 소개 합계 아까 플러그인 정의하는 거 등록하는 것부터 해서 모든 게 그럼 밖에 나가게 돼서 우리가 제어가 안 된다.
그래서 내가 플렉션 안으로 넣어야 된다. 그래서 내가 원래 의도는 ast 컨버전이 사실 이 의도였는데 그 용어나 이런 고민 없이 사실 하다 보니까 좀 오해가 있었는데 그래서 이거는 뭐냐 하면 얘를 받아서 중립적 그러니까 at 생성 전에 중간 단계의 표현 계층으로 바꾼다.

참석자 2 04:28
그래서 이걸 노멀라이즈드 디피니션 이라는 표현을 썼어요.
일단 이건 뭐냐면 내가 이걸 샘플을 지금 만들어 보고 있는데 쉽게 얘기하면 지금 보면 이 우리 셋업이나 템플릿이나 제3의 뭐가 될지 모르겠지만 데이터의 유형이 세 가지 형태의 데이터가 있다.
그 항목에 대한 정보 그 항목을 배치하는 정보가 있고 데이터 영역 데이터 모델 이 세 가지로 일단 분류를 했고 세 영역의 정보가 있다.
그지 셋업은 항목과 배치 섹션 그리고 뷰 컨테이너와 데이터가 모두 분리되어 있는 상황이 현재 셋업이에요.
이게 각각 존재해 현재 각각 템플릿은 항목과 배치가 하나의 정보로 존재하고 데이터만 현재 분리된 상황이 템플릿이에요.
왜냐하면 얘는 이미 배치까지 들어와 있어 항목 정의와 배치가 이미 하나의 XML 형태로 들어와 있는 거고 셋업은 얘가 세 가지 조각 난 데이터를 가지고 있다.
그래서 이게 인풋 데이터가 두 가지로 상정을 하고 있어.
근데 어떤 경우는 이 세 가지가 전부 다 결정된 채로도 올 수 있어요.

참석자 2 05:56
이렇게 항목도 정해져 있고 배치가 돼 있고 데이터까지 바인딩된 그게 당연히 올 수 있다는 거지 데이터 모델이 없다는 거지.
그거는 내가 노드 정보가 배치가 되어 있는 상태로 값까지 있어 밸류까지 확정된 정보는 당연히 올 수 있는 거니까.
그래서 뭐 어쨌든 중요한 건 뭐냐 하면 이런 분류 그러니까 데이터를 세 가지 형태로 분류를 했고 이 세 가지 종류의 데이터들이 어떤 조합이든 올 수 있다 올 수 있다.
그것까지 다 열려 있다. 근데 현재는 이 두 가지 정도 케이스를 두고 좀 설계를 하고 있다.
그래서 첫 번째 그러면 셋업일 때는 얘와 얘와 얘 세 가지가 있단 말이야.
근데 지금 우리가 i 셋업을 가지고 ah 노드를 만드는 그걸 해놓은 게 지금 뷰 모델 제네레이터 했잖아.
플렉시 뷰 모델 제네터 만드는 거 근데 그걸로는 안 된다.
그러니까 아까 얘기했지. 그 이유는 그러면 어떻게 해야 되냐 이 뎁스를 하나 만들겠다.

참석자 2 07:06
노말러 여기 노멀라이즈드 된 디피니션 중간 산출물이지 중간 산출물.
근데 이거는 내가 용어는 아직 몰라. 그래서 어떻게 만드냐면 첫 번째 세 가지 분류 중에 항목에 대한 게 떨어져 있으니까 항목에 대한 거는 여기 있단 말이야.
얘가 이제 항목에 대한 정보 항목에 대한 정보를 이제 컨버팅 한다.
어떤 식으로 플렉션 노드라는 형을 그래서 정의를 할 거야.
그러니까 얘는 사실 ast 노드의 형과 비슷하게 해도 상관없어.
어쨌든 중요한 건 트리 정보가 아니고 그냥 어떤 말단 정보들의 형을 컨버전 한 거다.
그냥 그러니까 이거지 프로는 항목을 나타낸 정보잖아.
이건 아이 셋업의 형이고 아이 셋업에 표현된 방식이 예고 얘를 플렉션이 얘기하는 형태로 한 번 바꾼다.
그래서 1 대 1로 바꾸겠지.

참석자 2 08:20
얘를 3개의 항목이니까 얘는 3개의 플렉션 노드의 어떤 형으로 만들겠지 그래서 노드 아이디 데이터 타입, 밸류 키 이게 이제 어제 승현이가 얘기한 외부로 노출된 키 그다음에 스테이트 이거는 어트리뷰티 기반의 어떤 우리가 가고자 하는 스테이트 거의 뭐 LT 노드 형이랑 비슷할 것 같긴 해.
어쨌든 이런 형태로 바꾼다. 이게 뭐다 노멀라이즈드 디피니션이다.
이 디피니션 만드는 작업을 한번 하겠다. 그러면 아이 셋업을 전부 이제 오겠지 항목 아이 셋업이 가진 항목 n 개가 있을 수 있잖아.
여기 보면 아이디별로 여기 보면 DM 인풋, DM 그리드 DM 폼 이런 식으로 n개의 항목에 대한 명세 고 단위로 노드 요 타입을 명세한다.
명세해. 그때 이제 얘네들이 가진 속성들을 속성들 아까 지현 씨 노드가 가진 플러그인 대표적인 게 뭐가 있어?

참석자 1 09:28
테이블 홈 이런

참석자 2 09:30
플러그인이노드 노드 말단 노드가 가진 플러그인 밸리데이터 코드 코드 코드 어떻게 코드 기능 내가 데이터 타입이 코드 형이고 얘의 어트리뷰트가 있을 거 아니야 그 아이 셋업이 어트리뷰트에 보니까 팝업 기능이 있다 칩시다.
그런 어트리비터가 있어. 그럼 지금은 어떻게 했냐면 그 어트리비트가 있으면 내가 플로그인을 막 피처에 등록해서 그러니까 플렉셔널 플로그인을 등록해서 걔를 가지고 이제 넘겨주는 형태인데 그게 아니라 여기는 이 그 형 내가 어떤 플러그인이 필요하다 또는 어떤 기능을 쓴다라는 메타 정보만 가지고 있다.
이 노드에는 노드에는 그래서 그 메타 정보를 가지고 플렉션 레이어에서 이런 기능은 a라는 a라는 플러그인으로 개발되어 있으니 그걸 로드 한다는 판단은 안에서 한다.

참석자 2 10:38
그 말은 뭐냐 하면 5.0 5.0 5.6 10.0 가더라도 10.0 가더라도 결국은 뭐다 이게 나와야 돼.
이 노드 이 형 이 노멀라이즈드 된 디피니션의 산출물이 나와야 돼요.
그리고 이 이 플렉션 우리 프레임웍 3개는 얘만 상대해야 돼.
얘만 이 절대 여기에 있는 것들이 다이렉트로 오는 건 없다.
한 번 거친다. 무조건 이래요.

참석자 2 11:18
그러면 그래서 지금 내가 이제 하려고 하는 건 이런 걸 조합해서 그래서 데이터 모델 디피니션은 아마 이 노드 프렉션 노드의 어떤 모집단이 될 거고 뷰 컨테이너 정보 이게 배치 정보란 말이에요.
배치 정보 이 배치 정보를 따로 가져간다. 형을 형을 따로 가져가고 따로 가져가고 결국은 이플렉션이 하는 일은 아니 이플렉션이 아니라 지금 일한 거지.
이게 아니고

참석자 2 12:07
이 단계에서 저런 노멀라이즈드 된 디펜션이 나오고 그다음에 2단계인 거야.
노드 정보와 배치 정보 플러스 뭐가 있냐면 이 단계에서 아마 여러 배치 옵션들도 메타 어떤 디펜션이 있을 거란 말이야.
나는 이 정보를 데이터 모델을 3개씩 보여줘. 집계해서 보여줘.
합계 소개를 해서 보여줘. 이런 어떤 이 레이아웃 디피니션에는 그러한 속성 정보가 있을 것이다.
내가 지금 이거 설계를 안 해서 얘기했네. 그지 여기 보면 얘가 뭐냐 하면 이 뷰 컨테이너에 종속되는 아마 이 레이로 보면 돼.
그럼 여기는 실제로는 폼인데 뭐가 있냐면 이런 정보들 많단 말이야.
카테고리 정보 얘는 뭐 어떤 컬럼들을 묶어야 돼 보여줘야 돼.
그리드 같으면 소트 정보는 뭐야? 합계 서브 토탈은 뭐야 페이지 뭐 이런 게 많잖아.
그지 페이지 퍼 카운트 카운트 페이지 어쨌든 이런 어떤 내가 레이아웃을 구성하기 위한 속성들을 이 원본 인풋 데이터에 있던 것들을 이 플렉션 레이아웃 형을 노멀라이즈 하면서 이제 바꿔줘야지.

참석자 2 13:47
그지 위스는 얼마야 카운트 는 뭐야 어쨌든 그지 그래서 이걸로 바꾸고 그럼 뭘 한다 이제 그때 이 과정이 들어간다.
이걸 받아서 이제는 뭐다. 내가 어떤 항목에 대한 정보 플러스 이 항목들을 어떤 레이아웃으로 구성해야 될지에 대한 정보를 받았단 말이야.
그럼 그거를 구성하면서 실질적인 ast 그러니까 이 두 단계가 합쳐진 거야.
사실 구성하면서 ast 노드 형태의 실제 이제 플렉션이 받아갈 ast 노드를 구성한다.
여기서 그때 뭐다 데이터가 이때 관여될 것이다. 데이터 모델 여기까지 이해됐나?
아 이해됐어. 혜영아 됐나 뭐지? 그 표정은 멋이 표정 빨리 얘기해.
의견

참석자 1 15:08
장단점이 있어요. 장단점이 있어요.

참석자 2 15:11
장단점 아니 단점 없는데 봐봐. 그때 내가 이거 내가 정확하게 그림을 안 그려 있는 상태라서 성능 그때 나문 팀장이 두 번 한다.
아니야 왜냐하면 이 노멀라이즈 단계는 데이터가 관여 안 되는 거야.
그러니까 진짜 그 레이아웃 정보 메타 정보만 한 번 읽어서 컨버전 하는 거야.
그리드야 데이터가 만 줄이야. 그렇다고 만 번 돌 이유가 없어요.
여기는 왜냐하면 여기는 끽 해야 끼 캐야 상단 하단 정도 항목별로 돈다 그 정도밖에 없다.
왜냐 여기는 데이터를 다루는 레이어가 아니야. 그 루프는 언제 도냐 이때 돈다.
컨포지션 할 때 이 레이아웃을 ast 컨버전 하고 그 이 두 개가 이제 합쳐진 거지.
아마 이렇겠지. 인쇄 같으면 내가 이 단계에서 뭘 하냐면 데이터 모델을 만 건을 받았어.
근데 데이터를 쪼개는 그 속성들을 보고 나는 세 건씩 볼래 하면 이거를 데이터 모델을 3 나누기 3에서 아니 나누기 3이 아니라 세 건씩 그지 데이터 모델 쪼개는 작업을 할 거야.

참석자 2 16:33
아마 그다음 뭘 한다 그 데이터 모델을 돌면서 실질적인 그리드의 서식을 읽어서 이제 실제 노드를 만드는 작업을 하게 돼.
ast 노드를 그때 오케이 그래서 내가 이 정도까지는 어디 갔지?
아이 셋업 컨버전 하는 어쨌든 이거 그러니까 이거 내가 지금 이것도 지금 용어도 좀 여기는 템플릿이랑 또 엮여가지고 블록하고 룰 이런 용어가 좀 아직 결정은 못 되긴 했는데 어쨌든 그 정도 그림이다.
그래서 지금 뭘 그럼 당장 뭘 해야 돼 내가 이거를 지금은 이거 개발을 병행해야 돼.
이거 다 하고 할 이유는 없어. 지금 여기는 어차피 at 노드부터 하는 거기 때문에 이거를 지금 병행을 해야 될 것 같고 다음 주부터 계속 이번 주부터 병행을 해야 되는 거고 대신에 지금 뷰 모델 제너레이터 만든 거 있는 거 그다음에 플러그인 아까 진영 책임 해놓은 거 있잖아요.
그거는 일단 유지를 해야 될 것 같아.

참석자 2 18:04
일단은 왜냐하면 그거는 넣으면 사실 되는 거라서 크게 나중에 위치만 옮기면 돼서 크게 문제는 없을 것 같아.
그렇다고 이거 다 하고 막 다 된 후에 굳이 할 이유는 없으니까 대신에 이 정도 그림은 좀 가지고 있어야 될 것 같아서 내가 얘기를 그러니까 좀 공유를 한 거예요.
개발 지금 내가 샘플 데이터 만들어서 형 그냥 형부터 좀 확정하고 그다음에 누구 한 명 이거는 좀 붙여서 좀 이거가 꽤 커 그러니까 이 룰이 엄청 많아 지금 여기 있는 이게 지금 인쇄 때 해놨어요.
이걸 좀 인쇄 때 이거를 조금 해놨고 그다음 템플릿 할 때 이 구조를 약간 만들어 놓은 게 있으니 용어나 개념은 근데 그 두 개를 좀 믹스시켜야 세 가지를 믹스시켜야 돼.

참석자 2 18:57
지금 인플렉션이 어떤 이쪽 세계와 현재 좀 템플릿도 아직 완성된 것도 아니라서 그다음 진짜 인쇄 현재 이거는 쓰고 있는 룰들을 어떻게 옮겨올 수 있을까 여기가 복잡하거든 CRM 인쇄 현황 이런 게 이쪽으로 아직 인쇄만 왔잖아.
그러니까 얘는 현재 인쇄밖에 안 왔어. 심지어 5.0에 이 개념이

참석자 2 19:31
질문 내가 뭔 얘기하는지 승현아 이해는 하고 있나?
네 이해했습니다. 신경 씨 이해는 하죠. 그냥 맥락만 디테일은 좀 없는데 그냥 레이어 어떤 개념만 좀 레이어는 좀 있어요.
머릿속에

참석자 5 19:46
저 ast 컨버전하고 레이아웃 컴포지션이 합쳐진다고 말씀해 주셨잖아요.
그러면은 캐싱 같은 거는 여기 그거를요

참석자 2 19:57
여기 해야 될 것 같아. 왜냐하면 이게 데이터 모델이 뜨는 순간 제약이 있어.
그래서 캐싱은 일단 제껴두자. 왜냐하면 그러니까 선택적으로 이 단계를 선택할 수도 있어야 될 것 같아.
그러니까 현황 얘가 룰이 없는 경우가 있거든 대부분 없어.
이 룰이 그냥 1 대 1인 거야. 폼 하나 그리드 하나가 끝인 게 대부분이고 근데 컨버니션 룰이 복잡한 거 인쇄 현황은 복잡해.
그래서 케이싱의 단위를 선택적으로도 아마 해야 될 수도 있을 것 같아.
메뉴 타입 정도로 아마 어떤 거는 여기까지 할 수 있고 어떤 거는 여기까지 해야 되고 그럴 것 같아요.
또 질문 그러니까 지금 하고 있는 건 여기야 그지 지금은 다 생략돼 있고 여기서 다이렉트로 이걸 하고 있다고 여기서 이거야 바로 바로 이렇게 된다고 근데 이거를 내가 이거는 따로 잡을 좀 진행을 하면 될 것 같긴 해.

참석자 2 21:07
끝 됐나

참석자 1 21:09
그럼 그

참석자 3 21:10
저 만약에 저 세 단계를 작업하면은 지금 아이 셋업을 바로 ast 파이널라이제이션을 하고 있는데 그럼 그 파이널레이제이션 하는 쪽을 좀 바꾸긴 하겠네요.

참석자 2 21:23
아니 그거는 이제 그렇지 없어지는 거야. 그래서 내가 뷰 모델 제너레이터가 없어지겠지.
지금 플렉션 모델 제너레이션 한 거 있잖아.

참석자 3 21:33
그게 저 스t 파이널레이제이션이잖아요.

참석자 2 21:37
그러니까 걔가 얘를 받아서 이걸 만드는 애잖아. 그러니까 그걸 다 분산시켜야지.

참석자 3 21:43
그럼 파이널리제이션은 없어지고 저 세 단계가 만들어지면은

참석자 2 21:49
이거는 단계라기보다 그치 여기서 바로 이건데 이제는 여기서 이걸 거쳐서 이걸 한다.
그래서 지금 해놓은 거는 안 쓰지 지금 해놓은 건 안 쓴다.

참석자 3 22:05
그럼 디피니션 리얼라이제이션을 해서 다시 만든다.
그걸로 해서 저 컨버전이랑 레이아웃 컴포지션 하면서 파이널리지레이션이 자동적으로 생성이 된다라고 보면 되는 거

참석자 2 22:16
사실 이거는 단계라기보다 그냥 산출물 산

참석자 3 22:19
결과 산출물이 나온 거

참석자 2 22:20
그 인풋 아웃풋 그 정도만

참석자 3 22:23
그럼 지금 하고 있는 거는 저 UI 디펜션 가지고 ast 컨버전이랑 레이아웃 컨버지션을 지금 하고 있는 거네요.

참석자 1 22:29
누가

참석자 3 22:30
지금 현재 작업 돼 있는 게 그걸 통해서 이제 파이널리제이션 결과가 나온 거니까.
근데 저 디피니션 노멀라이즈가 되면서 형이 하나 더 생겨버리니까 중립형이 하나

참석자 2 22:41
아니야 아니야 아니야 중립형이 얘라니까

참석자 3 22:43
그러니까 중립형 인자가 하나 더 생기니까 그러면 그거 그 형에 따라서 다시 ast 컨버전을 해야 되는 거잖아요.

참석자 2 22:52
형에 따라 그치 이걸 하게 이걸 해야지 세 단계 여기에 맞게끔 이걸

참석자 3 22:57
그러니까 지금 ast 컨버전이랑 레이아웃 컨버지션을 하고 있단 말이에요.
아이 셋업을 가지고 근데 이제 데피니션 노멀라이제이션 된 애를 가지고 에이스 컨버전이랑 레이아웃 컨버지션을 하는 거다.
다시 한 번 작업을 하기는 한다인 거네요. 맞죠 타입이 정해지면

참석자 2 23:16
타이 그치 그러니까 이게 아마 그러니까 이거 내가 인터페이스 정도는 만들어 놨는데

참석자 3 23:32
그 제네레이터가 다 뒤로 가요.

참석자 2 23:36
제네레이터라는 개념 그런 거 없어 그냥 새로 설계할 거야.
새로 용어도 그냥 버릴 거야.

참석자 3 23:42
아니 그러니까 지금의 제네레이터 아이 셋업을 가지고 지금 제네레이터를 해서 소개 페이지별 합계가 만들어진단 말이죠.
이제 중립 중립 아까 디펜션 노멀라이제이션 된 애를 가지고 그 제네레이터 했던 그거를 해야 되잖아요.
이제 이 데이터가 들어가겠죠. 디펜션 노멀라이제이션 된 애가 들어가서 소개 페이지별 합계가 되게끔 되어야 되는 거잖아요.
맞죠

참석자 2 24:09
아니 그거 말

참석자 6 24:10
페이지별 합계가 플렉션으로 들어가는 거 말씀하시.

참석자 2 24:14
그러니까

참석자 3 24:15
그걸 어떻게 됐지

참석자 2 24:17
아니 그걸 넣는 게 아니라 주임을 받는다고 이걸 노멀라이즈드 지금 이 모듈을 디핀신 노멀라이제이션 하는 그 모듈을 2개를 만들어서 주의를 받아야지 로직은 당연히 밖에 있지 이거나 5.0

참석자 3 24:35
그러니까 그러니까 저걸로 가지고서 최종 결과물은 결국에는 노멀라이제이션 된 애가 나올 거란 말이죠.
누구를 넣든 나올 거란 말이죠. 그럼 그거 가지고 소개 페이지별 합계를 해야 되잖아.

참석자 2 24:48
그건 안에 있다. 그 플렉션에서 한다.

참석자 3 24:51
그 단계가 에이스 컨버전 전에

참석자 2 24:55
전에 있지 컨버전 하면서 하겠지 이 배치 그러니까 둘 다 동시에 하겠지 여기로 보면 결국은 이 두 개가 섞일 수밖에 없어.
그러니까 이거 하고 이거 하고가 아니라 컴포지션 하면서 아마 노드를 만들겠지 그래서 소개 합계 어떤 내가 소개 합계를 쓴다 안 쓴다 또는 그 메타 정보를 표준화하는 역할이고 각각의 인풋에 맞게 표준화시키고 실질적인 구현 로직은 얘만 보기 때문에 안에 있다.
그걸 플렉션 ERP 수준에 둘지 뭐 그러니까 그 레이어는 정하면 되고 어쨌든 프레이머 플렉션 프레임워 안에 있다.
이유는 우리가 제공한다. 기본적으로 대신 그지 그러니까 소개 합계 뭐 이거가 프레임워 바뀔 때마다 바뀔 이유가 없잖아.
그냥 우리의 기본 그러니까 플렉션 ERP를 쓰면 그 정도 제공해 준다를 깐 거지 그냥 그 전제로 얘기하는 거야.

참석자 6 26:05
그럼 컬렉션의 인풋이 에스트 모드가 아니라 데피니션 노멀 에셋이

참석자 2 26:10
플렉션에도 이제 레이어가 생긴 거죠. 안 그러니까 플렉션 코어 진짜 코어는 플렉션에 그러니까 ast 노드일 거고 그 사이에 얘가 하나 끼어든 거예요.

참석자 6 26:25
어디서부터가 플렉션인가 하면

참석자 2 26:28
여기 그러니까 플렉션도 레이어가 있다.

참석자 3 26:32
플렉션의 인풋은 플레이션 노멀레이제이션 된 데이터다.

참석자 2 26:37
그러니까 플렉션 ERP로 그러니까 나는 플렉션 ERP로 얘기하고 지금 상정하고 있고 프레임웍 있고 플렉션 ERP 있고 플렉션 코어가 있어 지금 레이어가 최소 3단계가 있어요.

참석자 2 26:56
현재 레이어가 이제 완전 애플리케이션 레벨이 있다.
이게 5.0으로 치고 그 밑에 플렉션 ERP가 있다.
이 밑에 플렉션 코어가 있다. 얘는 아이 셋업이다.
그렇죠 아이 셋업 템플릿 얘는 이 아이 셋업이 열로 들어올 때

참석자 2 27:28
뭐야 노멀라이즈드 디피니션이라고 들어온다. 이 과정을 거치면 뭐다 ast 노드다.
실질적인 플렉션 렉시컬 컴포저 레이어로 들어가는 건 얘가 당연히 얘로 들어가야 되는 거고 이 사이에 아마 우리가 하는 집계 소개 페이지 뭐든 서식 뭐 이런 게 있겠죠.
그래서 이 레이어를 지금 만들어 놓은 거예요. 그래서 이 얘기는 뭐냐 하면 우리는 플렉션을 한 번 더 고도화시킨 플렉션 ERP라는 레이어를 제공해 준다.
그래서 플렉션 ERP를 쓰는 사람들은 요걸 만요거 요거서 여기로 만들어준 자기 어떤 프레임웍에 맞는 노멀라이저를 집어넣어라 그러면 우리가 알아서 이거를 네가 네 모양에 맞는 노멀라이저를 등록해 놓으면 이렇게 바꿔서 나머지는 다 제공해 주겠다.
그래서 걔를 이런 식으로

참석자 2 28:59
이게 이제 늘어나겠죠.

참석자 2 29:16
아까 문서 이해했나요? 저 세 단계가 각각의 래퍼로 존재 지금은 이제 여기가 패키지 그래서 지금은 모노 래퍼로 했지만 아마 그런 식으로 그러니까 레이어는 있어요.
지금 그 패키지 간에 레이어는 나는 염두를 해두고 있는 상황이

참석자 2 29:40
또 질문

참석자 3 29:42
노멀라이저는 그 해당하는 5.0이면 5.0에서 등록을 하는 거지

참석자 2 29:47
어 프레임웍에서 해당 그 서비스에 이제 구멍을 파줘야 돼.
그러니까 저거 이거를 등록할 수 있게

참석자 2 30:04
또 됐나 이해했어 형아 미안 됐나 플러그인들은 세 번째 단계에 있는 거기 하다.
현재는 그러지 않을까 싶은데 그러니까 이게 왜냐하면 뎁스가 사실 정해진 건 아니고 그때 승현이도 했냐 어댑터 뭐였지 이름이 프로바이더 그러니까 플러그인이 플렉션 ERP 수준에 우리가 제공해 주는 플러그인이 있고 근데 동일한 플러그인 또는 왜냐하면 동일한 플러그인밖엔 안 될 것 같긴 한데 오버라이딩은 할 수 있다.
외부에서 주입할 수 있다. 노드도 심지어 프레임웍에서 그 포인트는 파준다.
ERP 서비스로 프로바이더에 등록하면 우리가 해준다.
아마 대부분 그런 식일 거예요.

참석자 7 31:02
그러면은 제네레이터에서 플러그인을 꽂아준다고 했잖아요.

참석자 2 31:08
그러면은 제너레이터 꽂아주는 건 아니야. 지금은 지금 개발해 놓은 코드는 그렇게 되어 있는

참석자 7 31:14
그러면

참석자 2 31:15
언제 꽂아 오케이 그러니까 아까 진경이 처음에 이 얘기하다가 이렇게 얘기를 해볼게요.
이거는 왜 보기가 불편하냐

참석자 7 31:25
그러면은 플러그인 프로바이더라고 하면은 결국에는 어떤 메뉴에서 필요한 플러그인이 있을 수도 있는 건데 그러면 그거를 외부에서 주입해 주면은 저희가 찾는 순서가 있잖아요.
메뉴 글로벌 그 저희 그거에 따라서 주입 받은 거를 실행시켜서 플러그인 얻은 다음에 그걸 공적으로 꽂아준다.

참석자 2 31:45
그치 봐봐. 지금은 아까 체크박스 얘기했는데 아이 셋업에 그 유즈 체크 박스가 뷰 컨테이너 내려올 거야.
그지 그리드에 여기에 어트리비트로 온다고 유즈 체크 박스가 있어.
그럼 뭐다 a라는 플러그인이 렌더링 돼야 돼 그지 지금 우리가 해야 될 게 근데 지금은 어떻게 돼 있냐면 뷰 모델 제네레이트 할 때 어트리비트에 유저 체크 박스가 있어 그러면 프레임웍이야 여기는 그냥 5.0 제너레이터에서 이거 있네.
그럼 플러그인 피처에다가 내가 직접 필요한 플러그인을 참조해서 등록을 해 주고 있다고 그렇지.
그래서 그 플로그인 피처에서 이제 랜더링할 때 플렉션 레이어로 넘어올 때 이제 그걸 주겠지 어떤 플로그인이 있어?
그럼 받아간단 말이야. 그래서 플렉션은 받은 걸 랜더링만 한단 말이야.
어떤 룰에 의해서 그렇게 했을 때 문제는 뭐냐 하면 플러그인 내가 유즈 체크 박스라는 기능을 지금 쓴다고 했을 때 그 기능을 구현하는 그 기능을 동작시키게 하는 코드도 밖에서 결정되고 있어.

참석자 2 33:02
지금 내가 유즈 체크 박스를 쓰네. 그럼 a 플러그인을 로딩해야 돼를 알아야 돼.
밖에 사람들이 그러면 얘는 경직성이 완전히 경직돼 버리지.
이제 우리는 꼼짝도 못해. 체크박스 기능은 이제 a 플러그인으로 해야 돼.
근데 우리가 내부적으로 리프트 하면서 방법론이 바뀔 수도 있잖아.
플러그인이 아니고 그냥 다른 형태로도 개발할 수 있고 추가적인 플러그인이 더 필요할 수도 있고 그럼 그럴 때마다 이 코드를 우리가 유지 보수가 될까?
안 된단 말이야. 그럼 어떻게 한다 유저 체크 박스를 써 그지 그러면 이 노멀라이즈드 디피니션에 뭐 이렇게 하자 이런 속성을 부여하는 거야.
뭐 트로고 아이덴티파이어 뭐 뭐 뭐 뭐야 뭔지 모르겠지만 그렇지 이 어떤 메타 정보 디피니션만 놓는 거야 이게 끝인 거야.
그럼 나중에 템플릿으로 가든 5.10.0을 가든 이 어떤 인풋 데이터에 의존하지 않아도 돼.
왜냐하면 이것만 맞추면 되잖아. 그지 그러면 뭐다 플렉션은 얘만 보는 거야.

참석자 2 34:23
내가 랜더링 하려고 봤더니 나의 프로에 얘가 있네 그지 그럼 뭐다 나는 이 플로그인 패치해서 그때 네 걸 쓰는 거야.
ERP 서비스점 뭐야? 플로그인 프로바이더 점 겟 플로그인 아이디 그지 그럼 너는 이제 그때 레이어를 스코프 잘 뒤져서 패치해 준다.
그러면 렌더링하는 애는 걔를 플로그인을 받아서 로드시킨다.
그지 이 레이어를 끊는 거야. 다 마찬가지 플로그인뿐만 아니라 밸리데이터 마찬가지 내가 이 항목의 노드에 지금 내가 그래서 빼놨거든 모르겠어.
이거를 내가 베리데이터 포맷터 아까 보니까 그걸로 돼 있던데 아침에 잠깐 봤는데 플러그인형으로 그러니까 까먹었다.
아니 뭐 어쨌든 비슷한 맥락 그러면은 이 노드라는 건 거래처의 어트리뷰트의 그지 그냥 아이 셋업으로 보면 아이 셋업에 아이 셋업에 퍼트리비트에 밸리데이터가 있다 치자 그렇지 밸리데이터 있어서 내려왔어.

참석자 2 35:44
그럼 얘를 도대체 여기에 어떻게 표시해 줄까를 이 고민인 거야 이거를 그러니까 이거야 이런 거 별로 얘를 여다가 다 넣을 수도 있어.
스테이트를 하지 이렇게 넣을 수도 있어. 이건 설계하기 나름인데 아니면 이런 거 없이 그치 이런 거 없이 그냥 이 제3의 정보 그러니까 이것도 고민을 해봐야 되는데 요 어떤 구체적인 모든 속성들을 전부 다 이 노드에 디핀션 넣을지 아니면 이벤트가 발생했을 때 뭐 이런 거 볼 수 있겠지 어떤 데이터 타입에 따라 그러니까 데이터 타입에 따라 디폴트 플러그인을 우리가 개발해서 렌더링 시킬 수 있잖아.
그냥 코드형이야. 그럼 코드형 플러그인은 그래프 있더만 코드형 플러그인 있던데 네 코드 플러그인 그렇지 플러그인 있습니다.
그래서 데이터 타입으로 플러그인 하나를 만들고 바인딩 시키고 그럼 그 데이터 타입에서 내가 설정할 수 있는 어떤 기능 목록은 있을 거야 생뚱맞게 코드 형인데 이상한 속성이 들어오진 않거든.

참석자 2 37:09
그러니까 코드 형이 가질 수 있는 기능 명세는 무조건 있고 그럼 그 기능에 대한 어떤 실행 여부잖아 그거를 기능별 플로그인을 다 쪼갤 수도 있어.
그렇게 되면은 이런 게 이 디피니션 다 들어와야 돼.
그지 이런 게 다 들어와서 이거 있으니까 베리에디터 플로그인 포맷 있으면 포맷 플로그인 할 수도 있고 그러니까 이거는 좀 전략적으로 선택해야 돼.
그지 다 뺀다고 했을 때는 데이터 타입 기반으로 가져가고 대신에 이런 정보를 그치 어떻게 패치할 것인가 그지 얘가 보니까 ERP 서비스로 빼놨던데 밸리데이

참석자 5 37:51
맞습니다.

참석자 2 37:52
데이터 키로 찾아가지고 그러니까 그 좀 플로우를 봐야 돼.
나는 일단 후자로 생각하고 있거든. 데이터 타입별 플로그인을 가져가고 그러면은 그때는 내가 어떤 이벤트를 어떤 커멘드가 발행한다는 거는 안다는 거거든.
코드형 컴포넌트를 만드는 사람은 코드형 컴포넌트에서 발생하는 커맨드 목록을 확정 지어놔야 돼.
그치 무조건 그거는 절대로 안 변하는 거야. 그치 기획적인 요구 사항이 바뀌지 않는 이상 5.0 6점 상관없는 거야.
그지 해놨어. 그러면 그거에 대응되는 플러그인을 만들어 놓고 오지.
그러면 이거지. 내가 코드형일 때 인풋 이벤트를 인풋 코멘트를 받아서 봤더니 그때 내 어떤 어트리뷰트를 조회해 볼 수 있거든.
인풋 이벤트인데 내가 포메터가 있나? 그때 레이지로 패치할 수도 있어.
근데 그러려면 뭐다 ERP 서비스 레이어에서 얘를 브리치 잘 해줘야 돼.
그러니까 내가 지금 얘기하고 싶은 건 뭐냐면 아이 셋업에 있는 정보를 어디까지 이 노멀라이즈드 디펜션을 끌고 올 거냐야.

참석자 2 39:06
현아 이건 내 필수적으로 이 정도는 있어야 된다라고 보는 거고 근데 그 외에 아이 셋업에 의존적인 이 데이터들을 이쪽으로 다 끌고 올 필요는 없어.
물론 다 끌고 와도 돼. 근데 그건 선택이야. 그렇지 그랬을 때 내가 여기는 최소화하고 결국은 뭐다 어떤 브리치 외부의 ERP 서비스를 통해서 내가 어떤 커맨드가 발생했을 때 내가 가진 항목에 가진 속성들은 어딘가를 패치해 줄 수 있는 포인트가 하나 있어야 돼요.
왜냐하면 이게 이유는 뭐냐 하면 얘가 피익스큐터 승현이 잘 모르겠지만 이거 이 모듈이 등장해 있어.
그러니까 항목별로 가지는 속성들을 캐스케이딩 하는 거거든.
내 거 보고 내 거 없으면 이 카운트 그러니까 sc 설정 거 보고 s 설정 없으면 이 카운트 공통 보고 막 내 거 없어 양식 봐 양식 없어 sc 봐 에 없어 이 카운트 봐 그런 식으로 되어 있단 말이야.

참석자 2 40:15
그랬을 때 모든 걸 내가 말단 노드까지 다 내리면 데이터가 엄청 많아져 데이터가 그래서 내가 내 생각에 런타임에 그냥 패치하는 걸로 가는 게 맞고 그렇지 이해

참석자 7 40:31
깊이 익숙해. 저는 이렇게

참석자 2 40:33
그러니까 이게 뭐 그냥 어트리비트 리졸버 같은 거라고 보면 돼 이거야.
내가 어떤 이벤트가 발생했을 때 나의 어떤 키 그지 이 노드 이게 이제 키니까 외부의 어떤 키를 가지고 이 어트리뷰트 리졸버한테 나는 키가 이거고 현재 컨텍스트 이건인데 나한테 딸린 속성들 줘 속성을 다 뽑아줘라는 모듈이야.
PX 퓨터가 그럼 내가 밸리데이터 속성 줘 했을 때 밸리데이터 속성이 안 나와 그럼 없는 거거든 그럼 아무것도 안 하겠지.
근데 밸리데이터 속성을 달라고 했는데 줘 그럼 그냥 실행만 하면 되는 거 밸리데이터를 그거를 하는 역할이 피라는 건 좀 되게 추상적인 용어인데 어쨌든 얘는 내가 나의 프로 프로 아이디 그다음 아마 데이터 타입 몇 개를 아마 던지면 아니 안 던져도 될 수도 있다.
크롭 아이디 정도 던지고 나의 어트립트 타입 밸리데이터 타입 타입에 어트리비트를 줘 하면

참석자 2 42:03
이렇게 아마 던져주는 게 있어.

참석자 7 42:08
저 밸리데이터가

참석자 2 42:10
어트레비트 아이디 어트리비트 아이디

참석자 7 42:13
어 원래는 그 해당 항목에 에트리비트로 들어가 있었잖아요.
해당 항목이 어떻게 보면 들어가 네 근데 지금은 그게 아니라 그냥 피 익스큐터라는 저녁에 있는 데에다가 나 프로바이드 뭐고 밸리데이터 알려줘 라고 하면은 그냥 주는 건가요?
그 값을

참석자 2 42:27
그러니까 얘가 내부적으로 뭐라 하냐면 얘가 다 들고 있어.
나의 양식 정보를 보고 있으면 걔를 주고 없으면은 sc를 또 봐.
SSC를 보고 있으면 줘. 그럼 없으면 또 봐. 이 카운트 공통에 정의된 게 있거든.
그래서 그걸 해주는 거야. 이거는 이거 아마 형준이가 이거 5.6개 좀 작업했거든.
그래서 여기 형을 디테일한 형 설계하고 요거 픽스키 어떻게 적용하고 이거는 형주 님 붙여서 할 거고 너는 일단 구멍을 뚫어놓는 게 목적이니까 일단 일단 좀 내가 코드를 아직 디테일 못 봐가지고

참석자 7 43:12
그러면 저 피 익스큐터라는 거는 만약에 플러그인 프로바이더면은 제가 구멍을 뚫어 놓잖아요.
글로벌 익스큐도 찾고 엑스큐션 찾고 그다음에 저희 플렉션을 찾을 텐데 그거 뚫어 놓으면은 익스큐션 거기서 형주 님이

참석자 2 43:29
아니 아니야 이거 아니야 아니야

참석자 7 43:30
다른 건가요?

참석자 2 43:31
그거는 플로그인이랑 무관한 거야. 어트리뷰트 속성에 대한 거야.
포맷터는 뭐고 밸리데이터는 뭐고 맥스 랭스는 뭐고 그런 거 항목이 가지는 속성들 얘기하는 거고 플렉션이랑은 전혀 무관해.
그러니까 이거야 이거 그러니까 툴룸을 설명해 보면 대시멀이라 치자 대시멀에 인풋 이벤트 발생했어 그지

참석자 7 43:58
이게 기존에는 밸리데이터가 고정으로 내려왔는데 지금은 동쪽으로 찾으려고 하니까 다 빠져 있고 그거를 이제 동쪽으로 가지고 와서 사용을 하고 싶다라는 말씀이

참석자 2 44:09
그치 왜냐하면 지금은 어떻게 돼 있냐면 컴포넌트가 이미 바인딩 되어 있어 컴포넌트 레벨에서 얘가 안다는 거지 이미 밸리데이터니 포매터니 바인딩 되어 있기 때문에 지금은 그게 아니란 말이야.
이까지는 안 내려와. 이제 컴포넌트까지 이 어트리뷰트가 내려오면 안 돼.
얘는 기본적으로 이벤트가 발생하면 기본적인 커멘드는 무조건 나가는 거야.
그러면은 여기서 플러그인 그지 코드 플러그인

참석자 2 44:44
플러그인에서 받아서 뭘 한다. 나 인풋 이벤트니까 대시멀의 인풋일 때는 기본적으로는 포맷팅을 한다라는 그러니까 밸리데이터를 처리한다라는 룰이 이미 있는 거야.
그건 이 프로그램 개발자가 이미 그걸 인지를 하고 있는 상태지.
기획적으로 결정된 거니까 그때 뭘 한다 모르잖아.
내가 어떤 포메터가 뭔지를 모르잖아. 그 정보가 없단 말이야.
플렉션 레벨은 없어. 그럼 뭘 한다 여기서 어떤 형태인지 모르겠지만 이렇게 해볼게.
ERP 서비스를 통해서 디스패치를 할 수도 있어.
그지 외부로 그냥 몰라. 네가 알아서 해. 그냥 네가 대시머에 인풋 이벤트에 네 할 거 있으면 네가 그러면 넣어서 알아서 해 끝날 수 있어.
그지 여기서부터는 이제 5.0 3개니까 내 정보 주면 픽스큐터 콜해서 지가 밸리데이션 때려가지고 다시 뭐 하겠지 근데 그게 아니다.
이게 아니라 이 단계에서도 할 수 있다. 근데 안 되겠네.
피익스 퓨터가 여기 올 수는 없잖아.

참석자 2 46:08
그럼 뭐다 여기서 어떠한 내가 프로바이더를 통해서 겟 엘리베이터 이렇게 할 수도 있는

참석자 7 46:18
그저 피 익스피터라는 게 그냥 나 에테리뷰트 정보가 뭐야예요?
아니면은 나 밸리데이터 있어. 그것까지 밸리 데이터 관련돼서 다 실행시켜.

참석자 2 46:26
아니야. 아니 실행은 아니야 뭐야 정보만 알려주는 그러니까 이거를 완전히 유저 액션으로 던질 수도 있고 어떤 모듈 단위로 주입 받을 수도 있어.
이게 지금 니가 한 거고 이렇게 했는지 모르겠지만 지금은 유저 액션으로 그래 그러니까 뺄 수도 있어.
이거는 사실 좀 해보면서 결정을 하면 될 것 같아.

참석자 2 46:58
이렇게 하면 이제 조금 몰라. 나는 이렇게 가고 싶긴 하거든.
그러니까 이게 내가 봤을 때 5.6 가잖아 또 갈 거야.
내 생각에 그러니까 프레임워크 버전이 올라가면서 여기는 훨씬 많은 걸 해야 돼.
왜냐하면 유저 액션이라는 그 덩어리 그 덩어리만큼 또 와야 돼.
프레임웍이 바뀌었을 때 그런 단점이 지금 이것 때문에 애들 유학 간 거야.
이게 너무 커 덩어리가 밖으로 나가야 심지어 이거부터요.
이거부터야. 지금 이 중간 게 없으니까 뭐냐 하면 여기서 끝까지 오는 작업을 하는 거야.
그러니까 그 아까 말했던 뭐 여기 있던 거 이거를 계속 똑같이 한 거야.
여기 있는 거 왜냐하면 이게 중간에 없으니까 이걸 5.6 거를 읽고 또 하고 있어.
5.60 거를 이거 하고 오케이. 그래서 일단은 뭐 나는 이렇게 가야 되지 않나 싶은데

참석자 7 48:09
그러면은 플로그인이 밸리데이터를 받아서 안에서 로직 흐름을 처리해 주는 건가요?
그치

참석자 2 48:15
지금은 지가 에러 그러니까 왜냐하면 여기는 하려면은 패치하고 익스큐트하고 걔 받아서 상태에 따라 뷰 모델 체인지 하고 그지 맞습니다.
그거를 어차피 정해진 루틴이란 말이야. 정해진 거기 때문에 물론 뭐 그거 그러니까 판단을 해야 돼.
얘가 진짜 비즈니스 레이어에서 해야 될 로직이 있을 수 있거든.
내가 값이 바뀌었을 때 뭐 다른 걸 할 수 있으니까 그지.
그래서 뚫어는 당연히 놓아야 되긴 한데 걔는 디폴트는 아니고 그러니까 얘와 얘가 분리될 수도 있어.
내가 외부에서 우리 밸류 체인지 어트로비트 내려줄 수 있거든.
내가 값이 바뀌면 이런 유저 액션 홀 해줘. 그러니까 체인지 이벤트 같은 걸 속성으로 내릴 수도 있어.
그러니까 나는 그 정도는 이렇게 해주고 그 정도는 나머지 어떤 컴포넌트 레이어 내에서 해결되는 것들은 그냥 플러그인 수준에서 그냥 끝내도 되지 않나라는 생각이거든.

참석자 2 49:30
그러니까 얘는 이제 이쪽 플렉션 안이라는 거지 실행 플러그인이 안에서 대신 밸리데이터가 뭔지는 우리가 모르니까 그거는 프라이머마다 다르니까 그것만 내가 주입을 받고 흐름을 내부적으로서 그냥 제어할 수도 있다는 거죠.
그래서 이거와 이거를 구분은 해야 될 것 같긴 해. 지금이 이런 형태야.
지금은 뭐냐 하면 얘가 그냥 여기 있을 뿐이야. 컴포넌트에서 바로 현재 5.0이 왜냐하면 여기서 다 제어하거든.
그리고 별도의 유지 액션도 던져주고 있으면 체인지 있으면

참석자 2 50:19
됐나

참석자 2 50:24
또 질문 있어. 자아 그거 얘기 안 했나 회의록

참석자 3 50:29
이는 알았어 너 써놓은 거 있잖아 회의록 그거 하고 AI 녹음해서 했으면 좋겠다.

참석자 5 50:37
지금 녹음하고 있습니다.

참석자 2 50:39
근데 왜 공유를 안 하냐

참석자 5 50:40
이거 괜찮은지 계속 봐보고 있어가지고

참석자 2 50:45
아니 태섭이 하던 거 같은 거 아니야 네 똑같을 겁니다.
그럼 태섭이 맨날 하던 거 그때 했잖아 네 그지 오늘 또 올려.

참석자 3 50:53
그리고 이제 하나 궁금한 게 지금 저희가 디펜션 노리 라이제이션이라는 친구를 만든다고 했잖아요.
만들어서 UI는 잘 그렸어요. 그러면은 실제로 이제 뭔가 작업을 할 때 유저 액션을 저희가 이렇게 코멘드를 다 내보내줄 건데 그럼 서버 개발자는 이 데이터 자기가 핸들링하는 데이터가 아이 셋업 데이터인지 노멀라이제이션 데이터인지 어떤 걸

참석자 2 51:21
아니 셋업이지

참석자 3 51:22
아이 셋업을 제어하는 거예요. 그 아이 셋업을 제어를 해서

참석자 2 51:25
제어를 한다는

참석자 3 51:26
아니 지금 보면 저거 셋 데이터 모델을 하거나 VMC 셋 세프롬 스테이트를 이런 걸 한단 말이에요.

참석자 2 51:33
그건 아예 셋업 아닌데

참석자 3 51:34
그건 아니에요. 그건 아

참석자 2 51:35
시 노드를 바로

참석자 3 51:36
그건 ast 노드 ast 그럼 스테이트 세프롬 스테이트 이런 걸 하면은 ast 노드를 직접 제어를 하는 거고 데이터 를 셋 밸류를 한단 말이죠.
그거는 그러면은 실제로 데이터 모델에 그 아이 셋업에 있는 데이터 모델인 거예요 아니면은 디피니션 노멀

참석자 2 51:59
밸류 셉 밸류는 없어 플렉션에

참석자 3 52:04
왜 데이터를 바꾸지 않아요

참석자 2 52:05
그러니까 그 레이어는 빠져 있어. 프레임웍으로 그러니까 얘가 하고 있잖아.
지금 그러니까 셋 밸류를 했어. DMC에 걔는 5.0 레이어가 아니야.
아니까 플렉션 레이어가 아니야. 일단 DMC는 없어.
아 DMC를 받긴 해야 돼. 그러니까 데이터 요 단계가 아까 얘기해 보면 결국은 이쪽 파트를 내가 아직 안 했는데 그러니까 데이터 이쪽인데 이쪽에 데이터 모델 그 세 가지 때가 있잖아.
항목 배치 데이터 이 영역인데 이 영역은 이쪽 그러니까 요 컴포지션 이쪽 3개

참석자 2 52:55
두 개 동시에 안 떠지나 이거 미리 보기가 이거 맨날 바꿔야 돼 하면 되지 않아요 어 아래로 위아래로

참석자 2 53:07
그러니까 데이터 모델은 여기서 이제 관여를 할 텐데 이 단계에서 요 단계에서 데이터 모델을 배분하고는 끝 안 들어온다.
여기는 데이터 모델이라는 거 없어. 외부에만 존재한다.
밖에서 얘가 하는 건 뭐냐 하면 그래서 그 키가 뭐 이름 뭘로 했냐 아직은 데이터 키니까 어쨌든 데이터 키와 노드 키가 매핑이 돼 있어.
그래서 내가 셋 밸류를 밖에서 하겠지. 당연히 유지액션 밖에서 하면 그 데이터 키로 얘를 렌더링시키겠지 이 노드를 ht 노드를 스테이트를 바꾸겠지 그걸 얘가 하고 있는 거야.
반대도 마찬가지.

참석자 3 53:48
그러면 실제로 그 유저 액션을 만드는 사람은 플렉션

참석자 2 53:54
모른다. 데이터 DMC만 DMC는 똑같다.

참석자 3 53:57
본인이 속해 있는 프레임웍에 대한 그런 셋업 정보만 알고서는 작업하

참석자 2 54:03
아니 그러니까 셋업은 그러니까 셋업은 사실은 없어.
그러니까 설정 화면이나 셋업을 다루지 일반적인 로직에서 셋업을 다루진 않지.

참석자 3 54:15
그러니까 그러니까 그 사람들은 굳이 디피니션 노멀라이제이션 몰라 데이터는 몰라도 된다.
본인이 속한 그쪽에 대한 데이터만 알면 된다.

참석자 2 54:33
근데 앞으로는 그러니까 뭐 이런 거 있어 지금도 탭에 탭을 추가해야 돼.
그러면 셋업을 바꿔서 하고 있다고. 근데 앞으로는 그 페이지 그러니까 모델을 하나 더 둘 거야.
그러니까 내가 셋업이라는 건 최초 내려서 랜더링 하면 그냥 버릴 거야.
그럼 버리고 근데 그거 자체를 메타 정보로 쓰는 거는 뭐 관여 안 하겠지만 UI를 바꾸거나 랜더링하기 위해서 셋업을 이제 랜더링 이후에 셋업을 통해서 바꾸는 것들은 없앨 거고 대신에 페이지 뷰 모델 지금도 있잖아 그걸로 다 통일시킬 거야.
그러니까 그 모델을 더 확장시킬 거야. 내가 지금 뭐 상단에 탭을 넣고 싶어.
그럼 지금은 아마 막 셋업에 정보를 넣어서 전체 다시 되는 레트 렌더링하고 있는데 그게 아니라 새로운 모델 데이터 모델 수준의 어떤 모델을 제공하겠다.

참석자 2 55:40
그래서 예상은 설정 화면 정도는 셋업 데이터가 메인 정보니까 다루지만 그 외에는 셋업 데이터를 바꾸거나 뭐 그런 거는 없을 거다.

참석자 2 56:03
두 가지 정도 질문이었는데

참석자 7 56:05
아까 플렉션 ERP 쪽에서 프로바이더 점 엘리베이터 부분 있잖아요.
일단 지금은 전부 다 유저 액션으로 하는 걸로 빼기는 했거든요.
유저 액션에서도 어차피 메뉴별로 나눌 수도 있어가지고 그리고 이제 밸리메이터랑 포미터 같은 경우에도 로직 흐름이 조금 있어서 인풋 플러그인이라든가 그런 게 생기면은 아마 그쪽에서도 또 생길 거고 뭔가 또 공통으로 유틸처럼 빠질 수도 있어서 그래서 뭔가 내부에서 하냐 외부에서 하냐로 나중에도 이런 기능이 있는데 이거 내부에서 해야 되고 외부에서 해야 되냐라는 뭔가 논쟁이 항상 생길 것 같아서 지금은 그냥 다 외부로 빼는 걸로 생각을 하고

참석자 2 56:45
그게 더 일이잖아 지금 내부에 있잖아요. 지금은 다 내부에 있어

참석자 7 56:50
밸리데이터랑 포미터요 다 뺐습니다. 유저 이슈 로직 흐름을 결정하는 것도 그냥 어떤 5.0 비즈니스의 한 부분으로 좀 생각을 해가지고

참석자 2 57:10
맞아. 그게 왜 이게 다 똑같잖아. 입력과 입력값 가지고 로직 리졸버 호추 결과에 따라

참석자 2 57:35
UI 랜더링 이게 프레임업 버전이 올라가도 이게 바뀔까 이 다른 건 뭘까 이게 뭐냐잖아.
사실 그래서 리졸버 호출이고 속성이 뭐냐 속성이 뭐냐 저거 포함돼.
그래서 밸리데이터 얘가 가진 룰이 뭐야 그지 속성이 뭐야 데 속성도 사실은 뭐 룰이 뭐야?

참석자 2 58:13
더 가면 그러니까 이거를 계속 추상화시켜야 돼. 리졸브 호출이 아니라 룰만 봐도 돼.
그러니까 리졸브 호출도 내부적으로 룰만 다를 거 아니야 이 지금 내가 베리디한 로직들을 결국 추상화시키면 입력 값 갖고 와서 룰이 뭔지 그 룰만 달라.
나머지는 그냥 똑같잖아. 근데 이게 통으로 밖으로 나와버리면 그 이게 지금 통으로 이 수준으로 나와버리면 이 수준이라는 거는 5.0 프레임워크 이잖아.
그럼 이거를 그럼 또 해야 되잖아. 5.6 또 해야 돼.
또 해야 돼. 계속 이만큼을 굳이 할 필요가 있나 이 정도 추상화시켜줘야 그러면은 이 단계에서 확정 지을 수도 있어.
내가 왜냐하면 룰이라는 건 정해진 거야. 대신에 그 룰을 구성하는 스펙은 뭐 다를 수 있겠지.
프레임마다 설계하는 게 다름이니까. 근데 그것도 우리가 룰이라는 걸 메타화시켜 놓으면 추상화시켜서 이 노멀라이즈드 된 디펜션에 명세를 할 수 있으면 훨씬 심플해지겠지.
나중에

참석자 2 59:35
그러니까 밖으로 빼는 게 능사가 아니고 우리가 물론 이런 플로우 자체가 달라지면 빼야지 뭐 그러니까 그런 판단은 당연히 하긴 해야 되는데 내가 볼 때 지금 여기 안에 있는 거 있지 두 개밖에 없을까 근데 밸리데이터 포매터 뭐 있을까 두 개 정도밖에 없을 것 같긴 한데 걔네들은 이 플러그인 수준으로 넣는 게 나을 것 같다.
알겠습니다. 플러그인 안에

참석자 2 1:00:15
그리고 그래 코드 팝업 띄우는 것도 마찬가지일걸.
팝업 띄우는 팝업 오픈도 지금 아마 흙으로 돼 있을걸 아닌가 오늘 다 빠져 있나

참석자 7 1:00:29
액션 유저 액션으로 일단 가고 있긴 합니다.

참석자 2 1:00:31
팝업은 다 빠져 있는 것 같아요.

참석자 7 1:00:33
네 관련 페이로드 구성이나 이런 것도 쿠키에서 해 주고 있기는 한데

참석자 2 1:00:36
그러니까 이건 비즈니스 로직이 많아서

참석자 7 1:00:40
또 이 그리고 VMC를 저희가 리저액션에서 그대로 쓰잖아요.
그럼 저희 DMC 같은 경우에도 플렉션 입장에서는 DMC 바뀌면은 플렉션에 있는 데이터가 바뀌도록 구독이 되어 있는 상태인데 그러면은 지금도 그대로 VMC 구독해가지고 외부에서 어디 유저 액션에서 VMC 세프롭 스테이트 해갖고 아이템 뷰 모델이 바뀌면은 그거에 매칭되는 플렉션에 있는 노드도 바꿔줘야

참석자 2 1:01:08
일단 그렇게 해야지 일단 두 개는 유지해야 될 것 같아

참석자 7 1:01:12
그렇게 하려면은 저희가 만들어줄 때 페이지 뷰 모델을 그대로 만들어 주긴 해야 되거든요.
VMC에 왜냐하면 VMC에 페이지 뷰 모델이 들어가고 그게 줄스탠드로 들어가가지고 5.0에서 UI들이 그 줄 스탠드에 있는 값 보고하고 있어가지고

참석자 2 1:01:29
줄스탠드는 걷어내야지 근데 왜 필요한 거야? 줄스탠드가 아니 그러니까 기존에 있는데 지금은 필요 없어

참석자 7 1:01:39
지금은 필요 없긴 한데 페이지 뷰 모델

참석자 2 1:01:44
들어가 어떤 걸 구독하는데 걔네들이 페이지 뷰 모델 그러니까 특정 컴포넌트가 페이지 뷰 모델을 구독하고 있다고

참석자 7 1:01:53
그런 건 아니고요. 유저 액션에서 저희가 어떤 데이터 구조를 바로 접근해 가지고 디스플레이 스테이트는 트루 폴스 뭐 이런 식으로 할 수도 있잖아요.
VMC 인터페이스 안 쓰고 그래서 그런 식으로 쓰는 것도 전부 다 없어 대응을 해 주려면은 없어 그렇게 그러면은 그렇게 사용하는 유저 액션은

참석자 2 1:02:13
그런 게 있어 사용

참석자 7 1:02:15
안 한다고 봐도 되나요? 그런 게 있어 그런 건 좀 봐야 되기는 하

참석자 2 1:02:18
없어. 그게 안 돼 지금 그런 거가 없을걸 지금은 그러니까 그렇더라도 아마 VMC 통해서 g을 해서 패치하는 형태일 거야.
그러니까 VMC 점 겟 페이지 런타임 런타임 받은 거 내가 막 바꾸고 다시 업데이트 아마 이런 형태일 거.

참석자 7 1:02:40
네 그러면 그거에 대한 구조도 그대로 있잖아요. 그럼 그거는 그냥 그대로 만들어서

참석자 2 1:02:44
유저는 그대로 가지.

참석자 7 1:02:46
네 넣어주고 컬렉션에서 그 구조에 어떤 값이 우리 노드가 영향받는다.
그러면 매칭해가지고 바뀌면은 저희 거 바꿔주고 이런 식으로 해야 되는

참석자 2 1:02:54
그러니까 내 말은 나눠져 있다. 그러니까 노드 여기서 우리가 얘기하는 노드를 바꾸는 인터페이스는 VMC 셋 프롭스테이트라고 되어 있어.
걔는 그냥 무조건 노드인 거야. 그 외에는 그 외를 바꿔서 내가 그러니까 그거 말고 다른 인터페이스를 써서 노드의 정보를 바꿀 수 없어.

참석자 1 1:03:17
근데 얘

참석자 7 1:03:20
네 이해했습니다. 그러면은 어떤 유저 기존에 있는 유저 액션에서 세프로 스테이트를 했어요.
그러면 아이템 b 모델이 바뀔 거잖아요. 그러면 거기에 있는 특정 값이 바뀌었으니까 ast 노드에서 그거를 가지고 와가지고

참석자 2 1:03:33
동기화시켜준다. 그치 그러니까 세프로 스테이트 안에 이렇게 돼 있겠지.
뷰 모델 바꾸는 셋 스테이트 하는 게 있었는데 그거 없어지고 이제 네 한번 다시 말씀해 주시겠.

참석자 7 1:03:53
뷰 모델 스테이트 건

참석자 2 1:03:56
대표 모델 스테이트 큐 모트 컨트 프로 스테이트 얘잖아.
그럼 얘는 결국은 뭐다 내가 어떤 항목 어떤 모델을 어떤 항목에 어떤 속성을 속성이지 어떤 속성을 바꿀지를 봤잖아.
그럼 이제 이 단계 필요 없다는 거야. 뭘 해야 될까 그러면 이 얘가 결국은 키잖아.
그 데이터 키랑 똑같은 거잖아. 그 키로 노드를 찾아야 된다는 거야.
노드 노드를 찾아서

참석자 7 1:04:31
여기 VMC에서

참석자 2 1:04:33
이런 거 필요 없잖아요.

참석자 2 1:04:38
이게 필요 없어.

참석자 7 1:04:41
한동안은 5.0도 가고 플렉션도 같이 가고 점진적으로 옮기는 거니까.
그렇지.

참석자 2 1:04:47
그러면 VMC를 한 번 만들어야 되겠네요. 기존 거 놔두고 DMC랑

참석자 7 1:04:52
그러면 유저 액션은 어차피 똑같을

참석자 2 1:04:55
인터페이스만 유지하고 이거 생성할 때 아마 뭐야?
라우팅 그 파이프라인은 달라질 거거든. 어차피 버전이 두 가지 생기니까 그거 인스턴스를 따로 갖고 가야 되겠다.

참석자 7 1:05:13
그럼 DMC도

참석자 2 1:05:14
GMC도

참석자 7 1:05:15
저희한테 맞는 걸로 해도 되잖아요.

참석자 2 1:05:17
기존 거 거어놔니까

참석자 7 1:05:19
저는 y 5.0이라서 그냥 기존 거 냅두고 저희 플렉션에서 서브 스크라이로 해가지고 바뀌면은 가지고 와서 아니 아니

참석자 2 1:05:26
아니 굳이 안 해도 돼. 필요 없잖아 이런 것도 없을 텐데 이제 뷰 모델도 없을 거야.

참석자 7 1:05:33
그러면 지금 저희한테 맞게 만들고 나중에 5.06.0 가면은 그때는 VMC DMC가 아닐 수도 있잖아요.
그러면은 그때

참석자 2 1:05:40
그렇지. 만약에 우리가 DMC VNC 폭파시킨다 하면 그럼 이제 싹 바꿔야지.
지금은 우리 거 먼저 가고 DMC VMC까지 바꾸는 거는 뭐 엄청난 일이야.
수천 개를 바꿔야 돼. 그 유지 액션 그거는 불가능하고 일단은 우리 쪽 거 코어 쪽 먼저 바꾸고 어느 정도 안정화되고 언제 갈 거냐면 이제 템플릿 진짜 그 양식 2차 있고 5.0 2차 양식 데이터를 바꿀 거야.
그때 아마 그냥 전면적으로 다 싹 바꿀 거야. 그러니까 그때는 아이 셋업이 아니라 템플릿으로 바뀌는 거야.
그 인풋 데이터만 바꿔서 우리는 이거 건들면 안 돼.
이제 그때는 그 아까 노멀라이저만 템플릿용만 등록해 놓으면 끝이야 없어야 돼 할 게 그다음 유저 액션 이런 거는 그때 한번 정리할 수도 있어.
왜냐하면 지금 DMC를 원래 이번에 없애려고 그랬는데 5.6이 살렸어.
사실 너무 많아가지고 역량 범위가 너무 커가지고 9층에서 1차로 하고 있잖아.
5.6 1차를 하고 있어.

참석자 2 1:06:53
지금 그때도 일단 살렸어. 근데 2차도 모르겠어.
2차는 버릴 수도 있다. 근데 아직 미정 근데 어쨌든 우리는 2차 전에 갈 거란 말이야.
그래서 유지한다. 일단 VMC DMC는 유지

참석자 7 1:07:11
그러면은 제가 생각했었을 때는 이거는 그냥 5.0인 거잖아요.
그래서 플렉션에서 구독하는 어떤 그냥 모델이 있고 거기 구독만 해놓고 5.0이든 그게 5.6이 됐든 됐을 때 저희 모델에 맞는 인터페이스에서 맞게만 제공해 주면은 그냥 플렉션 ERP 쪽만 바꿔주면 된다라고 생각을 했었어서.
네 그래서 뭔가 이게

참석자 2 1:07:37
나중에 폭파되고 아니 나 이거는 우리 게 아니야. 사실 그러니까 이거는 프레임워 수준이잖아.
그러니까 플렉션 ERP도 아니야. 관여하면 안 돼.
플렉션 ERP가 아니고 결국은 얘네들은 프레임워크에 종속된 모듈이고 외부 프레임 외부 모듈이라 외부 모듈

참석자 7 1:07:56
네 근데 이제 세프로 스테이트에서 저희 노드를 직접 바꿔주면은 그 플렉션 정보를 알고 있는 거잖아요.

참석자 2 1:08:03
그러니까 그것도 그거는 그냥 얘 몫인 거야. 내가 그러니까 이거지 내가 그러면은 바꿔야 될 플렉션 그러니까 노드 키를 얘가 알아내야 되잖아.
그지 그거를 제공해 줘야지 우리 쪽에서 그러니까 인터페이스만 제공하는 거고 사실 프렉션은

참석자 7 1:08:29
클렉션 쪽을 알아도 상관없다.

참석자 2 1:08:31
그치. 그러니까 얘는 플렉션과 5.0 프레임웍을 얘네들이 제어하는 레이어기 때문에 명확하게 이걸 개발한 사람은 알아야지.
근데 지금은 우리가 그걸 다 하니까 뭔가 경계가 좀 모호할 수 있는데 사실은 아니다.
나중에 6.0 간다고 했을 때 우리가 이걸 할 건 아니잖아.
물론 뭐 우리가 하겠지만 어쨌든 그 레이어는 나눠줘야

참석자 2 1:09:16
됐나 또 끝 일단은 이거는 뭐 지금 하는 거에 영향은 없겠지 일단 없을 것 같고 이쪽으로 안 했으니까.

참석자 1 1:09:33
그렇죠 이거는 어차피 해야겠어. VMC DMC 해야 돼.

참석자 2 1:09:37
아 그러니까 VMT 데비는 해야 되고 근데 그 외에 내가 지금 얘기한 거는 어차피 역량이 없잖아.
그냥 하던 대로 하면 돼.

참석자 3 1:09:45
지금 디피니션 노멀라이제이션

참석자 2 1:09:47
그거는 일단 배제하고

참석자 3 1:09:48
그러니까 그거 나오면은 뭔가 작업을

참석자 2 1:09:50
그거는 그렇지 그거는 그렇지 뭐 일부 조정할 수는 있겠지만 어쨌든 ast 노드 아까 최종 노드는 확정 지어야 돼.
이거는

참석자 3 1:10:03
최종 모드는 어차피 지금 작업하고 있으니까

참석자 2 1:10:06
그러니까 그거는 확정 지어진 채로 이 단계 이 단계는 확정돼야 되고 오케이 그것만 하면 돼.

참석자 7 1:10:19
그럼 저 VMC 동기화 as 노드랑 동기화하는 거는 또 금요일까지

참석자 2 1:10:24
아니야 그거는 시간 좀 걸릴 수 있어. 왜냐하면 지금 당장 컴포넌트 하는데 그거 필요 없잖아.
DMC 브랜식 업체 필요 없잖아. 내부적으로 어차피 필요 없지 없는 것만 쓰지

참석자 7 1:10:38
유저 액션 붙일 거 아니면은

참석자 2 1:10:41
아니 그러니까 지금 그거를 다 빼면 안 될 것 같고 내가 볼 때

참석자 7 1:10:45
일단 VMC 동기화가 된다고 하면은 저희 쪽에서 플로그인을 다룰 때 흐름이 조금 바뀌긴 합니다.
왜냐하면은 지금도 DMC 그러니까 노드에 데이터 바뀐다고 바로 해 주는 게 아니라 DMC 바꾸고 DMC가 이제 구독 되는 실행시켜서 노드를 바꿔주잖아요.
그래서 만약에 VMC가 되면은 VMC 바꾸고 VMC가 구독되는 로드 흐름해가지고 ASP 노드를 바꿔준다.
이런 흐름으로도 갈 수 있어가지고 지금은 그냥 as 노드에 디스플레이 스테이트 있으면은 노드 ast 거를 바꿔주는데 VMC가 된다고 하면은 VMC에 있는 거를 바꿔주고 또 그게 이제

참석자 2 1:11:23
VMC에 있는 게 뭐야 VMC는 아무것도 없어야 되는데

참석자 3 1:11:26
DMC에서도 지금 노드를 모델을 바꾼 적은 없어요.
실제적으로 노드의 값을 직접 세팅해 버리지. DMC 바뀌면 바로 노드에 셋 밸류로 해버리면

참석자 7 1:11:39
지금 DMC에서 어떤 프로 마일이 바뀌면은 뭔가 5.0 비즈니스에서 이 프로 바뀌었네 그러면 어떤 거 해줘야지라는 이벤트 브로커가 해주잖아요 그러니까 그런 것처럼 VMC에서도 그런 거를 그런 비즈니스 로직을 태워줘야 된다고 저는 생각을

참석자 2 1:11:57
아니야 아니야 VMC는 그냥 끝인 거야. 그냥 걔가 할 거는 정해져 있어.
그러면 어떤 항목에 어떤 속성을 바꿔가 끝이야 비즈니스는 없어

참석자 7 1:12:09
그러면은 VMC 바뀐다고 5.0의 비즈니스 로직을 아니 없어 없어 시행시 로직 그런 거는 없는 건가요?
그러면 그냥 바로 ASP 모드 바꿔줘도

참석자 2 1:12:19
어 그래서 내가 필요 없다는 거야. 그래서 셀프로 스테이트 하면 바로 노드 바꿔버려 그러면 돼 지금 어떤 서식이 그러니까 속성이 바뀌는 것까지 구독하는 건 없어.
근데 그게 그런 거지 뭐 어떤 항목이 숨겨져 그럼 내가 뭘 하고 싶어?
그런 거잖아 내가 이 속성이 바뀌었을 때 왜냐면 값이 바뀐 건 구독할 일은 많은데 속성이 바뀐 걸 현재 구독하는 건 없거든.
물론 요구 사항이 생기면 들어갈 수도 있겠지. 그 VMC에 근데 지금 아마 없을 걸 그런 게 아니야 있나?
내가 모르는 게 뭐 있나 지금 없잖아 VMC 네가 봤을 거 아니야 없잖아 아직 자세히 못 봤어.
아니 그거 있으면 여기에 있었을 거 아니야 이걸 했는데 아마 내 생각에는 이거를 실행하기 전에 아마 했을 것 같아.
유저 액션에서는 그러니까 필요한 거는 비즈니스 레이어에서 아마 했을 것 같아.
내가 서식 받아서 이거 펄스네.

참석자 2 1:13:28
그럼 뭐 할 거 하고 얘를 폴스 시키고 아마 이랬을 것 같은데.
아니 플로우 쪽 그런 거 많지 않아 없어. 상태가 바뀌면 뭐 하고 이런 건 플로우 좀 망할 것 같은데 그다음 뮤지 액션 그래 다 처리하고 데이터만 됐나 그럼 내일 언제 하지?
내일 무슨 일이야 나 내일 한번 내일 정도 마무리돼야 되는 거 아니야 뭘 보여줘야 돼 8일까지가 원래 마무리니까 11일 날 몇 명씩 붙이려고 하거든.

참석자 3 1:14:11
그럼 컴포넌트를 만들 수 있는 수준으로 만드는

참석자 2 1:14:17
왜 갑자기 모르는 척 질문하지? 내가 해야 될 거 다 얘기했으니까

참석자 3 1:14:21
저는 맞는데 컴포넌트 어떻게 하는지 개발하는지 방법 개발 어떻게

참석자 2 1:14:27
그러니까 내일 그러니까 내일 아니 너 어떻게 되고 있는데 그 환경은 테스트

참석자 7 1:14:37
이제

참석자 5 1:14:39
그냥 플렉션 노드 그냥 넣었을 때는 되고요. 근데 이제 테스트를 더 간단하게 하려고 그냥 노드랑 플러그인만 넣으면 실행되게 만들고 있습니다.

참석자 2 1:14:50
일단 보자. 내일 내일 몇 시 그러니까 어떻게 오전에 오후에

참석자 1 1:14:58
이 시간쯤이면 어떨까요?

참석자 2 1:15:01
그래 2시

참석자 3 1:15:02
일단 오전에 한번 보고서 말씀드릴게요. 오전에 해도 되는

참석자 1 1:15:05
오전에 알았어 얘기해 줘.

참석자 2 1:15:08
그

참석자 7 1:15:09
수고하셨습니다. 반갑습니다.


clovanote.naver.com