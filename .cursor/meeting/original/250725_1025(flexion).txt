새로운 노트
2025.07.25 금 오전 10:25 ・ 27분 54초
송민형


참석자 1 00:50
그냥

참석자 1 01:00
아니 일단 좀 뭐라 그럴까 그러니까 하는 건 하는 거고 이제 좀 각자의 역할에 대해서 좀 같이 인식을 좀 같이 하고 얘기를 한 번도 안 해 처음이니까 일단은 한번 밥 한번 안 먹으니까 못하게 할 것 같아 어떻게 일단

참석자 2 01:22
일단 좀 바꾸고 수정을 좀 하긴 해야 지금 이게 환경 설정을 저희가 여기 다 돼 있기 때문에 5.0도 그렇고 5.6도 그렇고 여기 다 돼 있기 때문에 일단은 여기다가 다 프로젝트를 만들 생각이에요.

참석자 1 01:39
잠깐만 ecx 솔루션 거기에 레파지토리 루트

참석자 2 01:45
루트를 이걸로 잡고 이제 그 깃을 이걸로 만들어놔서 이 폴더가 만들어지더라고요.
그래서 이제 여기다 이제 다 유치시켜서 할 예정이고 잠깐만 잠깐만 그래서 아무튼 이거 하면은 이제 환경 설정 하면은 이게 되기는 해요.
그래서 이제 이거 해서 빌드를 하면은 지금 얘네 께 그냥 런 빌드를 치면 d점 TS가 안 나오거든요.
근데 저희가 이제 작업할 때는 d점 TS가 필요하니까 그래서 그때는 그걸 위해서 이제 프로드로 해야 돼요.
프로드로 하면 뒤쪽 TS가 나오고 그리고 JS 파일은 위니 파이가 돼서 나오기 때문에 이거는 이제 나중에 배포할 때 쓰면 될 것 같고 작업할 때는 디벨롭먼트에서는 요거로 해서 이제 JS를 이걸로 뽑아야 돼.

참석자 1 02:40
그럼 DTS가 안 만들면 어떻게 돼 참조가 안 된다는 얘기

참석자 2 02:44
그래서 빌드를 두 번 하긴 해야 돼요. 두 번 노드가 변경이 되면은 이게 노드 변경이 되면 지금 노드가 익스포트 되고 있는데 디점 TS가 이제 만들어야 돼서 여기에

참석자 1 02:56
이거 옵션만 넣어줘. DTS 상

참석자 2 02:58
그러니까 그러니까 이거를 좀 보기는 해야 돼요. 지금 현재는 이런 상황이다.
근데 빌드 되면 빌드 돼도 d TS 생성할 수 있게끔 옵션을 더 넣어야 될 것 같아요.
그래서 좀 간소화를 좀 시켜야 될 것 같아요. 그래 이렇게 해서 이제 작업을 하고 작업을 했으면은 외부 라이브러리를 이제 저 이거 외부 라이브러리를 저희 쪽으로 옮겨야 되는데 이 파일이 이제 생성이 되거든요.
빌드를 하면

참석자 1 03:23
그게 뭐야 그러면 잠깐만 맥시컬 리액트 저거가 저기 그럼 포함돼 있다.

참석자 2 03:33
네. 여기에 포함

참석자 1 03:34
왜 일단 뭐 컴포저 그것 때문에

참석자 2 03:37
예. 컴포저도 그렇고

참석자 1 03:39
누드도 그렇고 여기 다 있고 그거는 좀 정리를 해야 될 것 같긴 한데.

참석자 2 03:45
네 그거는 일단 일단은 일단 작업하는 거는 이쪽에서 이렇게 작업해서 얘로 빌드가 되거든요.
나오거든요. 저희가 작업하는 데는 다 여기 있어가지고 근데 지금 빌드하는 과정에서 글로벌의 최상위에 이제 리액트 점 이런 식으로 박히게끔 돼 있어요.
지금 얘네가 그래서 이걸로 한번 변경을 하긴 해야 돼요.
근데 지금 작업했더니 바로 변경이 되더라고요. 그래서 이거는 그냥 이것도 다 간소화시키긴 해야 돼요.
열어서 이거 변경하는 것도 안 하게끔.

참석자 1 04:19
아니 이름만 바꿔줘.

참석자 2 04:21
예. 예.

참석자 1 04:22
어차피 코드 인증 짜야 되니까 저희는 직접 임포트 해야 되잖아.

참석자 2 04:27
리포트

참석자 1 04:28
렉시컬 리액트를 5.0에서 임포트 해야 되는 거

참석자 2 04:32
인포트 돼 있어요. 지금

참석자 1 04:33
그러니까 인포트 할 때 저 이름으로 하겠다는 거잖아.
그러니까 그 이름만이라도 바꾸라고 나중에 또 바꿔야 되잖아.

참석자 2 04:40
그럼 이거 뭘로 바꿔요?

참석자 1 04:42
플렉션으로 해요. 플렉션

참석자 2 04:43
플렉션으로 이거 그냥 그냥 플렉션 리액트 없이

참석자 1 04:47
이름 좀 해줘 봐봐. 세현아 GPT와 한 2시간 내가 연구를 했는데 몇 개 안이 있긴 했는데

참석자 3 04:59
플렉스랑 어떤 게 합쳐진 거였죠

참석자 1 05:02
저게 고유 단어야

참석자 3 05:03
플렉션이라는 단어가

참석자 1 05:04
렉션이 어원이 구부리다. 그러니까 어떤 유연하게 상황에 맞게 이제 구부려서 이제 한다.
플렉스하게 그래서 플렉스의 어원이야 플렉스 근데 몰라 GPT가 이게 웃긴 게 처음에는 플렉스 플러스 익스프레션이었어.
네 그래서 그 한 며칠 있다가 다시 얘기하니까 갑자기 얘가 어원이 플렉션이 있대 그 말을 바꿨어 지금 단어 그래 진짜 있어 저 단어가 있어 명단어가 아무튼 그렇다.

참석자 2 05:40
그래서 일단은 맥시컬 리액트 이거를 이걸로 바꿔달라고 이름이 메인이 이거고 멕시컬 플렉션 리액트 이렇게 돼야 되는 거

참석자 1 05:49
그러니까 플렉션 리에트랑

참석자 2 05:50
오케이 알겠습니다.

참석자 1 05:52
저 패키지도 컬렉션 이했더라.

참석자 2 05:56
아무튼 이거는 이렇게 일단

참석자 1 05:57
멕시컬이란 용어를

참석자 2 05:59
네 렉시컬이라는 단어를 이걸로 대체하겠습니다.
근데 저건 렉시컬 컴퓨더 이런 애들 아니에요. 그리고 어차피 다 변경할 수 있을 거 바꾸면 되죠.
중에 바꾸면 변경이 할 수 있을 것 같아 어차피 걷어내야 돼요.
저 일단은 현재는 작업하시면은 이렇게 돼 있는데 이걸 한번 변경을 해야 돼요.

참석자 1 06:18
변경한다는 게 그냥 코드를 바

참석자 2 06:21
직접 들어가서 파일 열어가지고 바꿔서 실제로 여기 이 파일은 이제 실제로 저희 5.0 외부 라이브러리는 다 여기에 위치해 있거든요.
욜로 이동을 복사 붙여놓기를 해놓으셔야 돼요.

참석자 1 06:36
그거 저 민호 시켜서 저거

참석자 2 06:38
어쨌든 작업을 해 이런 작업들은 아마 다 다시 작업을 아마 할 거라서 며칠 안에는

참석자 1 06:46
이건 넘어가야지 다 알잖아 다 얘기 들은 거 아니야

참석자 2 06:50
네 맞아요. 이거 다 알아.

참석자 1 06:52
그럼 지금 얘네들이 뭘 하는지를 한번

참석자 2 06:54
뭘 하는지 그것도 얘기해야 한다. 그러니까 나하고 나 예 들었어요.
그게 지금 지금 저 작업을 하면은 실제 이게 이제 5.0의 테스트 페이지이고 이제 아이 셋업이 들어와서 그게 이제 컨버팅이 된 다음에 저희가 이제 플렉션에서 사용하는 ast 모습으로 변환을 한 다음에 이제 최종적으로 이제 플렉션에 들어가면 이 모습이 떠요.
이제 여러 가지 이제 컴포넌트들 섹션과 컴포넌트들이 다 뜨게끔 되어 있고 지금 현재 작업하려고 하는 거는 이거는 이제 DCR 관련된 얘를 타겟팅해서 이제 이렇게 샘플을 만들어 놓은 거고 이쪽은 이제 이식 코드 코드형 이제 팝업창 띄워서 실제로 값 꽂는 것까지 이제 작업하려고 이제 샘플링을 해놓은 상태 그래서 안에 이제 지금 코드들을 넣어야 되는 상황이고

참석자 1 07:54
그럼 얘네가 뭘 하는데 너는 니가 얘기해 봐

참석자 4 07:57
저는 EC 코드 작업합니다. 뭘 작업하냐고 이시 코드 안에서 맥시컬리랑 넥시콜에다 붙이고요.
그다음에 이슈 코드 컴포넌트가 따로 만들어지면은 거기서 팝업 띄워서 데이터 뽑고 밸류 데이터랑 포미터랑 작업하는 건데 이제 렉시홀에서 저희 커맨드 쓰면은 이제 에디터에 접근할 수 있는 어디서든 코맨드를 디스패션을 할 수 있어요.
레지스터도 할 수 있고 그래가지고 이제 그 부분이 외부로 빠지는 부분이라서 아마 거기서 밸리데이터나 포맷 이런 거 좀 작업하게끔 딱 그 정도 선에까지는 구조로 잡고 할 것 같습니다.

참석자 1 08:34
알았어 그렇게 이거 일단은 여기 있는 사람들이 이제 이거를 이제 리딩해야 돼 그지 지금은 어차피 프로토타입 수준이긴 하지만 그러면은 승현이는 5.0 안 해봤지 했나

참석자 4 08:53
너 얼마나 됐지 하다가 나갔는데 그때 아마 이나 팀장님

참석자 1 08:59
아니 와서 입사

참석자 4 09:00
와서는 플로우 할 때 잠깐 잠깐 네 플로우는 또 다른 영역이어서

참석자 1 09:06
그러니까 너는 해봤

참석자 3 09:10
5.0이요 네 와서 한 3 4개월 정도 계속 5.0 수정했었습니다.

참석자 1 09:17
아무튼 뭐라 그럴까 여기 있는 사람들이 모르겠어.
진기영 책임이랑 나는 플로우 할 때는 해봤겠지만 그러니까 코어 우리 코어 로직을 개발한 게 아니야 이거는 그러니까 렉시컬 물론 코어도 하겠지만 결국은 프레임웍과 우리 쪽이 어떤 이제 멕시컬 플렉션 중심으로 어떤 UI 랜더링 엔진을 별도로 지금 떼내는 작업이긴 한데 그렇다고 프레임웍을 배제하는 건 당연히 안 되는 거고 50 5.0이든 그러니까 5.0이든 5.6이든 10.0이든 그 상황을 인지를 하고 있어야 돼.
그러니까 프레임웍과 이쪽 코어 쪽 엔진을 어떻게 분리해 나갈 건가 그 과정인가?
그 고민을 해보는 거야. 아까 얘기했지 승현이한테 물어본 거.
그럼 팝업을 도대체 띄워야 되는데 그 팝업을 띄우는 코드가 어디에 위치해야 되고 그럼 그 위치는 어떤 의미이고 그거를 개발 개발자든 아니면 우리 FA 이제 붙을 때 그런 걸 너네가 가이드를 해야 된단 말이야.

참석자 1 10:33
그래서 그걸 시뮬레이션 해보는 거야. 그러니까 의미를 잘 알아야 돼.
내가 단순 눌러서 팝업 떠서 데이터 넣는 게 목적이 아니야.
그거를 하기 위한 과정들을 어떻게 할 것인가? 근데 어느 정도 가이드는 있잖아 왜냐하면 쟤네들이 제공하는 플로우 안에서 다 커버될 수도 있으니까 그지 커맨드 그다음 뭐 뭐야?
플러그인 뒤에 어쨌든 그지 그래서 그런 관점에서 해보는 거다.
이거 당장 막 기능이 잘 동작하고 이런 거는 안 해도 돼요.
오케이 너는 이제 이거 해보면 민영이 너는 봐봐. 기존 거 알 거 아니야?
5.0 거 이제 와야 돼. 컴포넌트 그지 그러면은 니가 이제 애들 잡을 그러니까 잡을 준다기보다 서포트하고 관리도 하고 어떻게 지속적으로 운영할 것인가 이런 고민도 해야 되고 이제 그 단순하게 기능 구현이 목적이 아니야.
너네들 역할은 세현아. 알겠어 그래서 일단 그런 관점에서 좀 구조적으로 좀 접근을 해야겠다.

참석자 1 11:57
민영이 너는 템플릿을 이제 여기 붙여야 돼. 아직 거까지는 안 갔어.
그러니까 이 첫 배포가 아마 5.6에다 갈 거야. 템플릿과 이거를 이제 어떻게 믹스할 거냐도 있어.
그것도 좀 하긴 해야 돼. 그지. 근데 어쨌든 너는 그걸 했으니까 그 고민도 해보면서 좀 같이 병행하긴 해야 돼.
어쨌든

참석자 1 12:25
일단은 이 정도로만 하고 일단은 일정이 들었지만 얘기했나 원래 오전은 너무 빡세잖아.
아니 어차피 화요일 오전에 하니까

참석자 2 12:38
월요일날 오전에 한다라고 생각을 해야 오후에 끝나는 거

참석자 3 12:41
또 월요일에 고습니다.

참석자 2 12:45
그래서 디시마를 주는 거고 그래 알았어.

참석자 1 12:49
근데 그때까지 기능을 구현하라는 얘기가 아니야 얘기하지만 이런 그러니까 딱 포인트는 그거야 저 코드는 뭐냐 왜 하냐 우리 5.0 유지 액션 어떻게 연결할 거냐 이거야.
나머지는 막 안 해도 돼. 그다음 그러니까 그 관계지 어트리뷰트 그러니까 아 셋업과 유저 액션이 5.0이 있단 말이야.
그럼 그 사이에 우리가 어떻게 할 거냐를 한번 하는 거야.
이거 되면 나머지 유지 액션들은 그러면 이런 식으로 연결돼라는 거를 정해지는 거고 그다음 대시말 해보라는 건 뭐냐 어트리비트 가지고 이벤트 연결해서 얘도 뭐다 5.0 리졸버 콜 하는 거야.
결국은 밸리데이터 리졸버드 그러니까 이벤트와 프레임웍의 어떤 그 모듈을 어떻게 연결해서 어떤 형태로 파일을 위치시키며 그지 그런 걸 고민하는 거야.
그런 고민을 할 수밖에 없지. 그지 그래서 그거를 고민해 보라는 거야.
계속 얘기하지만

참석자 2 14:07
고민만 해오면

참석자 1 14:07
해봐도 돼. 그냥 진짜 수도 코드로 내가 이해하고 본부장님이 이해하는 정도면 돼.
앞으로 그걸 가지고 5.0에서 이런 식으로 하겠습니다를 얘기하면 돼.
그건 당연히 구현은 시간이 걸리니까. 근데 그 설계를 하는 거야.
그림을 그려봐야 본부장님도 이제 뭐 판단할 거 아니야 뭐 지금 거 이렇게 하면 되겠다 해보자.
이거를 하기 위한 거니까 디테일은 안 볼 거야. 나도 안 떼도 돼.
그렇다고 뭐 아니 나 솔직히 뭐 팝업 안무 떠도 난 상관없어.
왜냐면 팝업 뜨려면 또 많이 또 있어야 되니까 세션에 있나 세션에 있네.
어쨌든 DMC VMC든 뭐가 필요할 수 있으니까 그러면 결국은 유저 액션을 어떻게 연결할 거냐인데 그 유저 액션에 필요한 게 DMC VMC 이런 것들이 있어야 되잖아.
그럼 걔네들 도대체 어디서 어떻게 갖고 올 거냐 이거야.
그러니까 그 접점을 고민을 지금 해보라는 거야.

참석자 1 15:13
유지 액션에 그냥 필요한 것만 넘겨줄 수 있으면 돼.
셋업에 내려온 페이로드 그다음 기본적으로 넘어가는 것들 그지.
근데 그 DMC 없잖아. 이미 VMC도 없어 지금 그렇지.
그럼 걔를 어떻게 넘기냐만 콘솔을 찍어도 그 그지 팝업 안 떠도 상관없다.
그냥

참석자 4 15:34
알겠습니다. 그러면은 5.0에 있는 뮤지액션이랑 리졸버랑 밸리데이터 이런 거 있잖아요.
그거는 가급적 그대로 쓴다로 이해하면 되나요?

참석자 1 15:45
그치 그대로 쓴다가 아니라 활용 그러니까 다 뺀 게 프레임웍이 5.6이던 5.0이든 뭐든 간에 충족돼야 돼.
그러니까 쉽게 지금 컴포넌트에 유저 액션 디스패치가 들어있어.
그치 5.0 컴포넌트에. 근데 일로 오는 순간 유저 액션이라는 용어를 써야 될까 말아야 될까부터 고민해야 된다고.
유저 액션이라는 건 5.0 프레임웍에 있는 용어라고 그 모듈의 이름이 그지.
그러면 우리가 플렉션 컴포넌트 자체에 디스패치 유저 액션을 쓴다는 건 뭐냐면 우리는 유저 액션을 이제는 프레임웍에서 초월한 어떤 중립적인 의미로 쓰겠다는 거야.
그러니까 유저 액션을 그거를 구분해야 된다는 거야.
안 그러면 야 우리는 유지 액션은 5.0 프레임워크 3개니까 우리는 좀 더 중립적인 어떤 이름을 가져갈래?
그게 커맨드잖아. 얘는 커맨드야.

참석자 1 16:53
그치 그럼 커맨드를 우리가 가져가는 순간 그럼 유즈액션을과 커맨드의 관계는 뭐야 어떻게 연결하는 거야?
이런 고민이 있어야 되겠다. VMC DMC는 어느 지점에서 어떻게 그러면 전달해야 되는 거야?
알겠어 이거는 다 고민해야 돼. 나온도 그렇고 나도 그렇고 나도 소스 이제 오늘 볼 수 있겠지.
그러니까 그것만 정리되면 나머지는 어차피 레이어가 이제 쪼개져서 할 수 있다고 지금 저쪽 철원이네 팀에서 그냥 하듯이 컴포넌트 이제 옮겨오는 작업 마이그레이션 하고 그지 그래서 그 레이어를 지금 설계를 하는 거야.
5.0 프레임웍과 이쪽 우리 쪽 랜더링 엔진의 그 경계에 대한 인터페이스를 고민해 보는 게 목적이다.

참석자 1 17:55
됐나 그래서 같은 내용이야. 사실 다 그래서 같은 거 그냥 해보는 거야.
그래서 서로 의견도 좀 얘기하고 각자 또 생각이 다를 수 있으니까 그리고 또 구현해보면서 또 생각 못했던 것도 또 나오니까

참석자 4 18:15
플렉션을 통해서 저희가 이루고자 하는 게 어떤 건지 여쭤봐도 되겠어.

참석자 1 18:20
좋은 질문이 그러니까 그런 얘기를 한 번도 안 했어.
그지 뭘까 너는 왜 필요하다고 생각하냐 봤을 거 아니야 며칠 좀 봤잖아.
이해 좀 되냐 컬렉션에 어떤 걔네들의 어떤 의도 철학 지향점

참석자 4 18:42
어느 정도는 좀 이해가 되는 것 같긴 합니다. 근데 사실 제가 봤을 때는 리액트랑 유사한 점도 많았고 어 구현도 사실 좀 비슷한 부분도 있었어 가지고 렉시커를 통해서 저희가 어느 부분까지 뭔가 5.0에서 소화하지 못하는 요구 사항이 있어서 플렉션을 사용해야 되는가라는 의문도 조금 있었고 네

참석자 1 19:10
그런 건 아니야. 그냥 안 돼서 안 하는 게 아니라 일단 첫 번째 성능이야.
성능이 첫 번째야. 그러니까 일단은 어떤 중립적인 ast 트리를 가져가고 싶은 생각은 계속 있었어.
그래서 한 거야. 처음에 지금 인쇄를 그 중간 단계로 한 거야.
사실 인쇄 로직이 아예 셋업 받아서 별도의 트리 노드를 만들고 걔를 가지고 렌더링하는 구조로 갔거든.
근데 그거를 조금 더 추상화시킨 게 이거야. 일반화시킨 거야.
사실 그래서 첫 번째는 뭐냐 하면 어떤 지금 리액트 기반의 상태 관리 뷰 상태 DMC 데이터와 뷰의 상태 정보가 컴포넌트 랜더링 파이프라인에 너무 밀접하게 엮였다.
그거에 대한 트레이드 오프 비용이 너무 비싸다. 그래서 그거를 없애고 싶었던 게 첫 번째 이게 3.0 모델이야.
승현아 3.0 보면 어떻게 되냐 3.0도 세스테이트 하거든 그지 기억나냐 지금 세스테이트 하면 어떻게 될까 그 강제로 상태가 없어.
그러니까 걔는 이 스테이트 바뀌었네. 이 이 컨트롤이라나 네 맞습니다.

참석자 1 20:33
그렇지 이 컨트롤에 이 돔을 직접 그냥 업데이트 한단 말이야.
그지 얘네들 컨셉이 그거야. 근데 대신 뷰 모델은 있지만 그지 뷰 모델은 뷰 모델 자체로서 그냥 존재하는 거고 얘가 상태를 바꾸는 것과 그 상태를 바꾸는 것과 이 뷰 모델 사이는 사실은 개연성이 없다.
그냥 좀 분리가 되어 있다. 상태는 상태대로 있고 동 업데이트 동 업데이트 그러니까 동 처리하는 건 따로 있어.
이걸 얼마든지 분리해서 선택할 수 있다. 그것 때문에 선택한 거야.
그게 왜냐하면 알잖아. 우리 입력 그리드 장난 아니야.
지금 엄청 느려 이게 리액트. 어차피 디프 알고리즘 자체가 느릴 수밖에 없어.
왜냐하면 늘어날수록 어쨌든 돔 생성 비용 리액트 엘리먼트 생성 비용은 뭔지 꺼내도 안 빠져 지금.
근데 그거를 훨씬 간소화하겠다. 없애겠다. 그 비용을 그게 첫 번째 두 번째는 에디터 레포트 ERP UI 이 모든 어떤 UI를 렌더링하는 어떤 엔진을 통합하겠다.
하나로 지금 다 따로 돼 있거든.

참석자 1 21:58
거의 이제 별개로 되어 있는데 그거를 ast 얘네들이 말하는 그 노드 기반으로 통합시키겠다.
그러니까 중립적인 프레임워크의 좀 더 중립적인 모델을 가져가고 그다음 이제 에디터나 나머지 그런 랜더링 요구 사항까지 좀 커버하겠다 이해했습니다.
그게 두 번째 목적이 그다음 일단 이거 자체의 어떤 어떤 철학도 마음에 들어.
그러니까 이 구조 그러니까 이 아키텍처를 설계한 컨셉트도 사실은 되게 특별한 건 아닌데 그래도 잘 정돈이 되어 있어.
정돈이 되어 있고 쉽고 그러니까 좀 쉬웠어. 일단 개발 진입 장벽이 그렇게 막 높진 않을 것 같아.
물론 코어타는 그래도 리액터보다 훨씬 심플해 그런 것도 있어.
그래서 좀 커스터마이징이 좀 쉬울 것 같다. 이 정도 너는 어떤 보고 좀 어떤 생각이 들었냐

참석자 3 23:16
5.6 하면서 딱 이제 부족했던 게 지금 플러그인이랑 그치 그리고 aft를 어떻게 다른 무언가 다른 지금 프레임워크에 종속되지 않는 형태로 만들까를 딱 얘가 해결해 주고 있어서

참석자 1 23:34
좋은 심플하지 너는 봐봐 모델 갖고 이제 얘 노드로 만들면 돼 사실은 그러니까 이미 좀 사실 이거 우리가 했었으면 고민을 엄청 많이 해야 돼.
표준 어떤 노드 설계부터 해가지고 좀 쉽지는 않아서 나도 섣불리 막 한 번에 못했거든.
왜냐하면 단계 단계 원래 가려고 그랬어. 인쇄하고 5.6 하면서 조금 하고 조금 하고 이렇게 하려고 그랬는데 이미 되어 있으니 그냥 바로 한 거야.
그냥 과정 필요 없이 그냥 바로 도입을 하려고 한 거야.
그래서 아무튼 좀 너네들은 어쨌든 바삭하게 알아야 돼 얘네들 멕시컬 코어까지 다 알아야 돼.
그 디테일한 왜냐하면 알아야 아마 나중에는 좀 우리가 좀 이렇게 차용해서 아마 코어도 만들어야 될 거야.
궁극적으로는 당장 아니더라도 그런 생각을 좀 가지고 하면 될 것 같아.
어차피 너네 잘 하잖아. 지금 그냥 믿고 있다 열심히 하겠습니다.
됐나 나 뭐 할 얘기는

참석자 2 24:50
그리고 지금 저희가 요거 현재 5.0 이런 형태를 가지고 있는 거 전에 한 번 말씀드

참석자 1 24:57
디와킷 폭파

참석자 2 24:58
있든 없든 아무튼 뭐 보면 되고 얘가 지금 5.0에 종속되어 있는 상황이라서 인데 저희가 이제 플렉션을 사용함으로 인해서 이제 그 노드 아래 요 녀석이 이제 들어가야 될 것 같아요.
그러려면은 이게

참석자 1 25:17
근데 그대로 들어가면 안 될걸

참석자 2 25:19
그러니까 그대로 들어가든 안 들어가든 결국에는 이 형태를 가지고 있는 애가 들어가야 되는데 그러면은 이게 이제 그러니까 5.0 안에서는 못 들어갈 것 같아서 이게 따로 떨어져 나가.

참석자 1 25:33
맞아. 네 맞아요. 알고 플랙션 밑에 그 패키지 하나

참석자 2 25:39
지금은 지금 파서 지금 만들어 놓긴 했거든요.

참석자 1 25:42
그러니까 이 선택인 거야. 계속 앞으로 이 선택인 거야.
결국은 이게 5. 이게 아니야 이거는 없어요. 이거는 xx라서 프레임워크의 독립적인 애들이야.
그러니까 만약에 이런 거야. 코드형 컴포넌트가 5.0을 가던 6.0을 가던 그 기능이 프레임웍의 버전에 따라 바뀌는 건 없어.
그 그래서 그것들은 유지는 하되 정체성은 그러면은 지금은 아마 여기에 다 있으니까 그치 그 구분이 없다고 지금은 근데 아마 아이 셋업 그러니까 이 항목의 어트리뷰트 데이터 타입 래퍼 타입에 대해 그걸로 인해 발생되는 로직들은 여기 남아 있는 거고 그치 그거를 어느 정도 중립된 요 프롭스든 어떤 우리로 치면은 스테이트로 표현하면 되나 그지 그걸로 여기서 이렇게 넘어가는 거야.
그게 그러니까 어트리뷰트가 노드 스테이트로 바뀌는 과정이야.
그 레이어인 거 이해. 그러니까 나는 일단 그렇게 보고 있어.
결국은 지금은 그 레이어는 나눠져 있어.

참석자 1 27:07
뷰 모델 우리 제너레이터나 이런 거 레이어는 있지만 하나로 합쳐져 있어서 사실은 명확하게 끄어 있진 않는데 선이 그지 그래서 그 관점으로 나누면 된다.
이게 일로 온다 그지 얘는 뭐 일단 알아서 해도 돼. 사실 없애도 되고 써도 되고 근데 심지어 여기까지 내가 래퍼 타입이 들어 있어.
지금 이거 말이 안 돼. 이 프로스로 레퍼 타입이라는 용어가 있어요.
이미 그래서 그런 것도 걷어내야 돼.

참석자 2 27:38
정리하게 일단 구조는 이런 모습이라고 생각합니다.
고맙습니다.

참석자 1 27:46
아무튼 끝 일단 월요일 날 한번 얘기해 주 그러면 월요일 날 그.


clovanote.naver.com