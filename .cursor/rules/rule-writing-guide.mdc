---
alwaysApply: false
---

### 🥈 2순위: H2 제목(`##`)을 사용한 단계 구분

만약 `Step` 키워드를 사용하기 어렵다면, `##` (H2 제목)으로 각 단계를 구분할 수 있습니다. 전문가는 `Step` 키워드가 없을 경우 `##`으로 시작하는 모든 라인을 하나의 독립적인 단계로 간주합니다.

**✅ 좋은 예시:**

```markdown
# 이미지 처리 작업 규칙

## 워터마크 추가

[역할]: 입력된 이미지 우측 하단에 회사 로고 워터마크를 추가합니다.

## 리사이징

[역할]: 이미지의 가로 길이를 1024px로 조정합니다. 세로 길이는 비율에 맞게 자동으로 조정되어야 합니다.

## 퀄리티 압축

[역할]: 이미지 품질을 85%로 설정하여 용량을 최적화합니다.
```

---

### 🥉 3순위: Markdown 리스트를 사용한 단계 구분

간단한 작업 목록의 경우, 마크다운 리스트(`-`, `*`, `1.`)를 사용하여 단계를 정의할 수 있습니다.

**✅ 좋은 예시:**

```markdown
-   모든 `.log` 파일을 찾아서 삭제합니다.
-   `temp` 디렉토리의 내용을 비웁니다.
-   데이터베이스 연결을 종료합니다.
```

---

### fallback: 전체 문서를 단일 단계로 인식

만약 위에서 언급된 어떤 패턴도 문서에서 발견되지 않으면, 전문가는 문서 전체 내용을 **하나의 거대한 단일 작업**으로 간주하고 실행합니다. 이는 매우 복잡하고 명확하지 않은 작업의 경우 예측 불가능한 결과를 초래할 수 있으므로 권장되지 않습니다.

---

## 💡 요약

-   가장 확실하고 안정적인 방법은 **`## Step 1: ...`** 형식을 사용하는 것입니다.
-   간단한 작업은 `##`이나 리스트를 사용할 수 있지만, 작업의 순서와 의도가 명확해야 합니다.
-   어떤 구조도 없는 문서는 전문가가 이해하기 어려울 수 있습니다.
